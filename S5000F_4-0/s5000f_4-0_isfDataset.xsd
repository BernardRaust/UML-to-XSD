<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsig="http://www.w3.org/2000/09/xmldsig#" xmlns="http://www.asd-europe.org/s-series/s5000f" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:value="http://www.asd-europe.org/s-series/s5000f/validValues" xmlns:unit="http://www.asd-europe.org/s-series/s5000f/validValues" targetNamespace="http://www.asd-europe.org/s-series/s5000f" version="004-00" vc:minVersion="1.1">
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/2008/REC-xmldsig-core-20080610/xmldsig-core-schema.xsd"/>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:annotation>
		<xsd:documentation>Specification: </xsd:documentation>
		<xsd:documentation>Issue number: 4.0</xsd:documentation>
		<xsd:documentation>Issue date: 2024-09-30</xsd:documentation>
		<xsd:documentation>Data model file: S5000F_4-0_Data_model_000-85.EAP</xsd:documentation>
		<xsd:documentation>XML schema release number: 004-00</xsd:documentation>
		<xsd:documentation>XML schema release date: 2024-09-30</xsd:documentation>
		<xsd:documentation>URL: http://www.s5000f.org</xsd:documentation>
		<xsd:documentation>Root element: isfDataset</xsd:documentation>
		<xsd:documentation>XSD generator version: DMEWG_GEN_2-0_002-43</xsd:documentation>
		<xsd:documentation>Copyright:
   Copyright (c) 2016-2024 by AeroSpace, Security and Defence Industries Association of Europe (ASD).
   
   Limitations of Liability:
   
   1. This material is provided 'As Is' and neither ASD nor any person who has contributed to the creation, revision or maintenance of
      the material makes any representations or warranties, express or implied, including but not limited to, warranties of
      merchantability or fitness for any particular purpose.
   2. Neither ASD nor any person who has contributed to the creation, revision or maintenance of this material shall be liable for any
      direct, indirect, special or consequential damages or any other liability arising from any use of this material.
   3. Revisions to this document may occur after its issuance. The user is responsible for determining if revisions to the material
      contained in this document have occurred and are applicable.
   
  </xsd:documentation>
	</xsd:annotation>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:import namespace="http://www.asd-europe.org/s-series/s5000f/validValues" schemaLocation="s5000f_3-0_valid_values.xsd"/>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:include schemaLocation="s5000f_4-0_project_specific_exchanges.xsd"/>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:element name="isfDataset" type="message"/>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ========================================== UML MESSAGE ============================================ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="message">
		<xsd:annotation>
			<xsd:documentation>
    Message is a [class] that represents the collection of information brought together by a message sender for the purpose of communicating it to another 
    party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Message</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="msgId" type="messageIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="msgDate" type="messageCreationDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="msgLang" type="messageLanguage" nillable="true" minOccurs="0"/>
			<xsd:element name="msgStatus" type="messageContentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="msgType" type="messageContentType" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:group ref="messageContentNonAbstractClasses"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="msgContext" type="messageContext" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="msgPty" type="messageParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="relatedMsg" type="messageRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element ref="xsig:Signature" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="msg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="messageContentNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    MessageContent is an [exchange] definition that represents the collection of information that is the subject of the Message.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MessageContentNonAbstractClasses</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="uc51205" type="assessHWSWInteroperability"/>
			<xsd:element name="uc51208" type="assessSoftwareMaturity"/>
			<xsd:element name="uc51203" type="assessSoftwareUsability"/>
			<xsd:element name="uc51210" type="asssessSoftwareDelivery"/>
			<xsd:element name="uc51102" type="cancelFleetTask"/>
			<xsd:element name="uc50802" type="collectWarrantyCosts"/>
			<xsd:element name="uc51211" type="communicateDataLoading"/>
			<xsd:element name="uc51505" type="defineOrUpdateEnvironment"/>
			<xsd:element name="uc51412" type="defineSecurity"/>
			<xsd:element name="uc51002" type="determineObsolescenceCandidates"/>
			<xsd:element name="uc51003" type="determineObsolescenceStrategy"/>
			<xsd:element name="uc50803" type="determineWarrantyMisuse"/>
			<xsd:element name="uc51101" type="elaborateAssignmentProposal"/>
			<xsd:element name="uc51104" type="elaborateFleetPlan"/>
			<xsd:element name="uc50409" type="equipmentCalibrationCertificate"/>
			<xsd:element name="uc51105" type="evaluateFleetTask"/>
			<xsd:element name="uc50801" type="evaluateMaintenanceActions"/>
			<xsd:element name="uc51601" type="exchangeEnvironmentalData"/>
			<xsd:element name="uc51413" type="exchangeExportControl"/>
			<xsd:element name="uc50804" type="identifyWarrantyRisks"/>
			<xsd:element name="uc50805" type="improveWarrantyRules"/>
			<xsd:element name="uc50302" type="influenceDesign"/>
			<xsd:element name="uc50000" type="inServiceDataFeedback"/>
			<xsd:element name="uc50306" type="maintainabilityEffectiveness"/>
			<xsd:element name="uc50305" type="maintenanceManagementAvailability"/>
			<xsd:element name="uc51410" type="manageServiceRequest"/>
			<xsd:element name="uc51103" type="modifyFleetTask"/>
			<xsd:element name="uc50301" type="monitorEquipmentPerformance"/>
			<xsd:element name="uc51004" type="monitorObsolescence"/>
			<xsd:element name="uc51610" type="notifyUnacceptableConditionDisposal"/>
			<xsd:element name="uc51001" type="obsolescencePlanning"/>
			<xsd:element name="uc50606" type="planForTransport"/>
			<xsd:element name="uc51106" type="prepareProductForFleetTask"/>
			<xsd:element name="uc51405" type="provideActivityPlanning"/>
			<xsd:element name="uc51302" type="provideAsAllowedConfiguration"/>
			<xsd:element name="uc51301" type="provideAsDeliveredConfiguration"/>
			<xsd:element name="uc51305" type="provideAsDesiredConfiguration"/>
			<xsd:element name="uc50701" type="provideCBS"/>
			<xsd:element name="uc51401" type="provideContractualInformation"/>
			<xsd:element name="uc51403" type="provideCostBreakdown"/>
			<xsd:element name="uc51304" type="provideCustomerModification"/>
			<xsd:element name="uc51503" type="provideDisposalLocationInformation"/>
			<xsd:element name="uc51415" type="provideDocumentationTraceability"/>
			<xsd:element name="uc51414" type="provideLaborRates"/>
			<xsd:element name="uc52302" type="provideNonPredefinedInformation"/>
			<xsd:element name="uc51006" type="provideObsolescenceAlert"/>
			<xsd:element name="uc51303" type="provideOperationalConfiguration"/>
			<xsd:element name="uc51404" type="provideOrganizationalBreakdown"/>
			<xsd:element name="uc52301" type="provideProjectSpecificValues"/>
			<xsd:element name="uc50503" type="provideSpecialSafetyInstructions"/>
			<xsd:element name="uc51408" type="provideStatusReport"/>
			<xsd:element name="uc51402" type="provideWorkBreakdown"/>
			<xsd:element name="uc51506" type="reallocateFleetOrProduct"/>
			<xsd:element name="uc50901" type="recordHealthData"/>
			<xsd:element name="uc51107" type="recoverProductAfterFleetTask"/>
			<xsd:element name="uc50304" type="reportAvailability"/>
			<xsd:element name="uc51407" type="reportContractCosts"/>
			<xsd:element name="uc51609" type="reportDisposalCosts"/>
			<xsd:element name="uc50309" type="reportEfficiencyAndPerformance"/>
			<xsd:element name="uc51602" type="reportEnvironmentalDataToAuthorities"/>
			<xsd:element name="uc50311" type="reportFaultDiagnostics"/>
			<xsd:element name="uc51108" type="reportFleetAvailability"/>
			<xsd:element name="uc51209" type="reportHelpDeskTickets"/>
			<xsd:element name="uc51504" type="reportInfrastructureAvailability"/>
			<xsd:element name="uc50705" type="reportInServiceCosts"/>
			<xsd:element name="uc50601" type="reportInventory"/>
			<xsd:element name="uc50604" type="reportLogisticResponseTime"/>
			<xsd:element name="uc50702" type="reportMaintenanceCosts"/>
			<xsd:element name="uc50403" type="reportMaintenancePerformed"/>
			<xsd:element name="uc50401" type="reportManufacturerMaintenanceSchedule"/>
			<xsd:element name="uc50308" type="reportMissionCapability"/>
			<xsd:element name="uc50704" type="reportModificationCosts"/>
			<xsd:element name="uc51603" type="reportModificationImpactOnDisposal"/>
			<xsd:element name="uc50405" type="reportNewModifications"/>
			<xsd:element name="uc50703" type="reportOperationalCosts"/>
			<xsd:element name="uc51606" type="reportProductDisposal"/>
			<xsd:element name="uc50404" type="reportProductPerformance"/>
			<xsd:element name="uc50402" type="reportProductUserMaintenanceProgram"/>
			<xsd:element name="uc50501" type="reportSafetyIssue"/>
			<xsd:element name="uc50502" type="reportSafetyWarning"/>
			<xsd:element name="uc50602" type="reportShelfLife"/>
			<xsd:element name="uc50407" type="reportShopFindings"/>
			<xsd:element name="uc51406" type="reportSLACompliance"/>
			<xsd:element name="uc51207" type="reportSoftwareConfiguration"/>
			<xsd:element name="uc51202" type="reportSoftwareError"/>
			<xsd:element name="uc51206" type="reportSoftwareInstallation"/>
			<xsd:element name="uc50603" type="reportSparesAndPool"/>
			<xsd:element name="uc50408" type="reportStructuralDamage"/>
			<xsd:element name="uc51204" type="reportSWDocumentationErrors"/>
			<xsd:element name="uc50406" type="reportTechnicalQueries"/>
			<xsd:element name="uc50310" type="reportTestability"/>
			<xsd:element name="uc50303" type="reportTrendsAndFailures"/>
			<xsd:element name="uc50902" type="reportUsageInformation"/>
			<xsd:element name="uc51604" type="reportValuableItemsFromDisposal"/>
			<xsd:element name="uc51608" type="reportWasteDisposal"/>
			<xsd:element name="uc52501" type="requestData"/>
			<xsd:element name="uc51605" type="requestItemDisposal"/>
			<xsd:element name="uc51411" type="requestResource"/>
			<xsd:element name="uc51201" type="requestSoftwareFeature"/>
			<xsd:element name="uc51607" type="requestWasteDisposal"/>
			<xsd:element name="uc50903" type="respondToUsageInformation"/>
			<xsd:element name="uc50307" type="retainingPerformance"/>
			<xsd:element name="uc51005" type="solveObsolescence"/>
			<xsd:element name="uc50411" type="trackMaintenanceStatus"/>
			<xsd:element name="uc50410" type="trackSupportEquipmentUsage"/>
			<xsd:group ref="messageContentProjectSpecificExchanges"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="inServiceDataFeedback">
		<xsd:annotation>
			<xsd:documentation>
    UC50000 : InServiceDataFeedback is an [exchange] that represents a message providing all the necessary information required for a generic use case 
    (UC50000) that allows all S5000F information to be sent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InServiceDataFeedback</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beAggr" type="aggregatedElement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="applicDef" type="applicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consi" type="consumableItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgAnlys" type="damageAnalysis" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envDef" type="environmentDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="assrtInst" type="evaluationByAssertionOfClassInstance" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="assrtCond" type="evaluationByAssertionOfCondition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="assrtSi" type="evaluationByAssertionOfSerializedItems" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="nestedApplic" type="evaluationByNestedApplicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evNested" type="evaluationByNestedExpression" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expev" type="expressionEvaluation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beHw" type="hardwareElement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="hwPartContainer" type="hardwarePartContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infltsym" type="indicatedFaultSymptom" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="localPos" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="transpPosRef" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="looseWaste" type="looseWaste" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="obfltsym" type="observedFaultSymptom" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pliu" type="plannedItemUpgrade" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="refltsym" type="recordedFaultSymptom" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="slac" type="serviceLevelAgreementClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servrc" type="serviceRequestCancellation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="skill" type="skill" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beSw" type="softwareElement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swerr" type="softwareError" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="taskNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="trade" type="trade" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="persType" type="typeOfPerson" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteCont" type="wasteContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beZone" type="zoneElement" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="monitorEquipmentPerformance">
		<xsd:annotation>
			<xsd:documentation>
    UC50301 : MonitorEquipmentPerformance is an [exchange] that represents a message associated with a use case (UC50301) providing the necessary information 
    to be able to monitor the performance of an equipment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MonitorEquipmentPerformance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="applicDef" type="applicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="slac" type="serviceLevelAgreementClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="influenceDesign">
		<xsd:annotation>
			<xsd:documentation>
    UC50302 : InfluenceDesign is an [exchange] that represents a message associated with a use case (UC50302) providing the necessary information to be able to 
    raise a change request.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfluenceDesign</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="applicDef" type="applicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcf" type="warrantyClaimFollowUp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportTrendsAndFailures">
		<xsd:annotation>
			<xsd:documentation>
    UC50303 : ReportTrendsAndFailures is an [exchange] that represents a message associated with a use case (UC50303) providing the information about failures 
    in order to report failure trends.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportTrendsAndFailures</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="applicDef" type="applicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detMeCap" type="detectionMeanCapability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detmec" type="detectionMechanism" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envDef" type="environmentDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envRev" type="environmentRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="eqflt" type="fault" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlic" type="maintenanceLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="snsr" type="sensor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportAvailability">
		<xsd:annotation>
			<xsd:documentation>
    UC50304 : ReportAvailability is an [exchange] that represents a message associated with a use case (UC50304) allowing the availability of a serialized 
    Product item and the root causes for non-availability to be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportAvailability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consi" type="consumableItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mfacs" type="maintenanceFacilitySlot" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlic" type="maintenanceLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceManagementAvailability">
		<xsd:annotation>
			<xsd:documentation>
    UC50305 : MaintenanceManagementAvailability is an [exchange] that represents a message associated with a use case (UC50305) providing the necessary 
    information to management maintenance, and contract for availability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceManagementAvailability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consi" type="consumableItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expev" type="expressionEvaluation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mfacs" type="maintenanceFacilitySlot" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlic" type="maintenanceLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintainabilityEffectiveness">
		<xsd:annotation>
			<xsd:documentation>
    UC50306 : MaintainabilityEffectiveness is an [exchange] that represents a message associated with a use case (UC50305) providing the necessary information 
    to assess the effectiveness of maintenance.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintainabilityEffectiveness</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlic" type="maintenanceLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="retainingPerformance">
		<xsd:annotation>
			<xsd:documentation>
    UC50307 : RetainingPerformance is an [exchange] that represents a message associated with a use case (UC50307) providing the information required to ensure 
    that proper Product performance is maintained.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RetainingPerformance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mfacs" type="maintenanceFacilitySlot" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlic" type="maintenanceLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportMissionCapability">
		<xsd:annotation>
			<xsd:documentation>
    UC50308 : ReportMissionCapability is an [exchange] that represents a message associated with a use case (UC50308) providing the information required to 
    report on whether an individual Product is or not mission cable.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportMissionCapability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="capLim" type="capabilityLimitation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mfacs" type="maintenanceFacilitySlot" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportEfficiencyAndPerformance">
		<xsd:annotation>
			<xsd:documentation>
    UC50309 : ReportEfficiencyAndPerformance is an [exchange] that represents a message associated with a use case (UC50309) allowing efficiency and 
    performance metrics to be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportEfficiencyAndPerformance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="capLim" type="capabilityLimitation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mact" type="maintenanceActivity" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportTestability">
		<xsd:annotation>
			<xsd:documentation>
    UC50310 : ReportTestability is an [exchange] that represents a message associated with a use case (UC50310) providing the information required to assess 
    the testability of an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportTestability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="calib" type="calibration" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detMeCap" type="detectionMeanCapability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detmec" type="detectionMechanism" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envRev" type="environmentRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="eqflt" type="fault" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mfacs" type="maintenanceFacilitySlot" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlic" type="maintenanceLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportFaultDiagnostics">
		<xsd:annotation>
			<xsd:documentation>
    UC50311 : ReportFaultDiagnostics is an [exchange] that represents a message associated with a use case (UC50311) allowing fault diagnostics data to be 
    provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportFaultDiagnostics</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="calib" type="calibration" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envRev" type="environmentRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mfacs" type="maintenanceFacilitySlot" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlic" type="maintenanceLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="snsr" type="sensor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportManufacturerMaintenanceSchedule">
		<xsd:annotation>
			<xsd:documentation>
    UC50401 : ReportManufacturerMaintenanceSchedule is an [exchange] that represents a message associated with a use case (UC50401) providing the information 
    required to report on the maintenance schedule defined by the manufacturer of a Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportManufacturerMaintenanceSchedule</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="eqflt" type="fault" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mfacs" type="maintenanceFacilitySlot" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlic" type="maintenanceLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="taskNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportProductUserMaintenanceProgram">
		<xsd:annotation>
			<xsd:documentation>
    UC50402 : ReportProductUserMaintenanceProgram is an [exchange] that represents a message associated with a use case (UC50402) providing the information 
    required to report on the maintenance program provided by the Original Equipment Manufacturer (OEM) of the Product or by the operator.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportProductUserMaintenanceProgram</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="eqflt" type="fault" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mfacs" type="maintenanceFacilitySlot" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlic" type="maintenanceLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="taskNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportMaintenancePerformed">
		<xsd:annotation>
			<xsd:documentation>
    UC50403 : ReportMaintenancePerformed is an [exchange] that represents a message associated with a use case (UC50403) providing the information required to 
    report on the maintenance that has been performed on a Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportMaintenancePerformed</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="calib" type="calibration" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgAnlys" type="damageAnalysis" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgChar" type="damageCharacteristic" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detMeCap" type="detectionMeanCapability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detmec" type="detectionMechanism" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envRev" type="environmentRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="eqflt" type="fault" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="localPos" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="transpPosRef" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mact" type="maintenanceActivity" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mfacs" type="maintenanceFacilitySlot" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlic" type="maintenanceLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportProductPerformance">
		<xsd:annotation>
			<xsd:documentation>
    UC50404 : ReportProductPerformance is an [exchange] that represents a message associated with a use case (UC50404) providing the information required to 
    report on the performance of a Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportProductPerformance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportNewModifications">
		<xsd:annotation>
			<xsd:documentation>
    UC50405 : ReportNewModifications is an [exchange] that represents a message associated with a use case (UC50405) providing the information required to 
    report on new modifications to the Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportNewModifications</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mact" type="maintenanceActivity" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pliu" type="plannedItemUpgrade" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="plut" type="plannedUpgradeTimescales" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportTechnicalQueries">
		<xsd:annotation>
			<xsd:documentation>
    UC50406 : ReportTechnicalQueries is an [exchange] that represents a message associated with a use case (UC50406) providing the information required to 
    perform a technical query and receive a response.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportTechnicalQueries</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportShopFindings">
		<xsd:annotation>
			<xsd:documentation>
    UC50407 : ReportShopFindings is an [exchange] that represents a message associated with a use case (UC50407) providing the information required to report 
    the results from a workshop when repairing a unit that has been sent in for repair.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportShopFindings</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detMeCap" type="detectionMeanCapability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detmec" type="detectionMechanism" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="eqflt" type="fault" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportStructuralDamage">
		<xsd:annotation>
			<xsd:documentation>
    UC50408 : ReportStructuralDamage is an [exchange] that represents a message associated with a use case (UC50408) providing the information required to 
    report any structural damage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportStructuralDamage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anchorPt" type="anchoringPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgAnlys" type="damageAnalysis" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgChar" type="damageCharacteristic" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="localPos" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="transpPosRef" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="equipmentCalibrationCertificate">
		<xsd:annotation>
			<xsd:documentation>
    UC50409 : EquipmentCalibrationCertificate is an [exchange] that represents a message associated with a use case (UC50409) allowing information associated 
    with an equipment calibration and associated certificate, to be provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EquipmentCalibrationCertificate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="calib" type="calibration" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envRev" type="environmentRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="trackSupportEquipmentUsage">
		<xsd:annotation>
			<xsd:documentation>
    UC50410 : TrackSupportEquipmentUsage is an [exchange] that represents a message associated with a use case (UC50410) allowing to track the usage of a 
    support equipment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TrackSupportEquipmentUsage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="calib" type="calibration" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envRev" type="environmentRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mact" type="maintenanceActivity" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="trackMaintenanceStatus">
		<xsd:annotation>
			<xsd:documentation>
    UC50411 : TrackMaintenanceStatus is an [exchange] that represents a message associated with a use case (UC50411) providing the information required to 
    track the maintenance status by the new owner or product operator.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TrackMaintenanceStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="maintReq" type="maintenanceRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="taskNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportSafetyIssue">
		<xsd:annotation>
			<xsd:documentation>
    UC50501 : ReportSafetyIssue is an [exchange] that represents a message associated with a use case (UC50501) providing the information required to report an 
    issue impacting the Product safety.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportSafetyIssue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="applicDef" type="applicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportSafetyWarning">
		<xsd:annotation>
			<xsd:documentation>
    UC50502 : ReportSafetyWarning is an [exchange] that represents a message associated with a use case (UC50502) providing the information required to send 
    out a safety warning to the operators of a Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportSafetyWarning</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="applicDef" type="applicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideSpecialSafetyInstructions">
		<xsd:annotation>
			<xsd:documentation>
    UC50503 : ProvideSpecialSafetyInstructions is an [exchange] that represents a message associated with a use case (UC50503) allowing special safety 
    instructions to be transmitted to the operators of a Product, in the event of safety issues.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideSpecialSafetyInstructions</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="applicDef" type="applicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportInventory">
		<xsd:annotation>
			<xsd:documentation>
    UC50601 : ReportInventory is an [exchange] that represents a message associated with a use case (UC50601) that provides the inventory information for a 
    warehouse or spares pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportInventory</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportShelfLife">
		<xsd:annotation>
			<xsd:documentation>
    UC50602 : ReportShelfLife is an [exchange] that represents a message associated with a use case (UC50602) providing the information required to report on 
    the shelf life of parts on stock.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportShelfLife</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportSparesAndPool">
		<xsd:annotation>
			<xsd:documentation>
    UC50603 : ReportSparesAndPool is an [exchange] that represents a message associated with a use case (UC50603) providing the information required to report 
    on the spares available in a warehouse or spares pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportSparesAndPool</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportLogisticResponseTime">
		<xsd:annotation>
			<xsd:documentation>
    UC50604 : ReportLogisticResponseTime is an [exchange] that represents a message associated with a use case (UC50604) providing the response time that is 
    achieved when responding to a logistic request.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportLogisticResponseTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="slac" type="serviceLevelAgreementClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="planForTransport">
		<xsd:annotation>
			<xsd:documentation>
    UC50606 : PlanForTransport is an [exchange] that represents a message associated with a use case (UC50606) providing the information required to plan for 
    the transport of assets.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PlanForTransport</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anchorPt" type="anchoringPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="capLim" type="capabilityLimitation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="hwPartContainer" type="hardwarePartContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="localPos" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="transpPosRef" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="persType" type="typeOfPerson" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideCBS">
		<xsd:annotation>
			<xsd:documentation>
    UC50701 : ProvideCBS is an [exchange] that represents a message associated with a use case (UC50701) allowing a cost breakdown structure to be provided to 
    a different party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideCBS</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportMaintenanceCosts">
		<xsd:annotation>
			<xsd:documentation>
    UC50702 : ReportMaintenanceCosts is an [exchange] that represents a message associated with a use case (UC50702) providing the information required to 
    report on the costs associated to maintenance.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportMaintenanceCosts</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportOperationalCosts">
		<xsd:annotation>
			<xsd:documentation>
    UC50703 : ReportOperationalCosts is an [exchange] that represents a message associated with a use case (UC50703) providing the information required to 
    report on the operational costs of a Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportOperationalCosts</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consi" type="consumableItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportModificationCosts">
		<xsd:annotation>
			<xsd:documentation>
    UC50704 : ReportModificationCosts is an [exchange] that represents a message associated with a use case (UC50704) providing the information required to 
    report on the cost of a modification to the Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportModificationCosts</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pliu" type="plannedItemUpgrade" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="plut" type="plannedUpgradeTimescales" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportInServiceCosts">
		<xsd:annotation>
			<xsd:documentation>
    UC50705 : ReportInServiceCosts is an [exchange] that represents a message associated with a use case (UC50705) that allows costs incurred during the 
    in-service phase to be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportInServiceCosts</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servrc" type="serviceRequestCancellation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluateMaintenanceActions">
		<xsd:annotation>
			<xsd:documentation>
    UC50801 : EvaluateMaintenanceActions is an [exchange] that represents a message associated with a use case (UC50801) that allows the effectivity of 
    maintenance actions to be assessed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EvaluateMaintenanceActions</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgAnlys" type="damageAnalysis" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgChar" type="damageCharacteristic" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detMeCap" type="detectionMeanCapability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detmec" type="detectionMechanism" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="eqflt" type="fault" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="localPos" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="transpPosRef" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mact" type="maintenanceActivity" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcf" type="warrantyClaimFollowUp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="collectWarrantyCosts">
		<xsd:annotation>
			<xsd:documentation>
    UC50802 : CollectWarrantyCosts is an [exchange] that represents a message associated with a use case (UC50802) providing the necessary information to 
    compile the costs of warranty.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CollectWarrantyCosts</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgAnlys" type="damageAnalysis" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgChar" type="damageCharacteristic" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="localPos" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="transpPosRef" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcf" type="warrantyClaimFollowUp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="determineWarrantyMisuse">
		<xsd:annotation>
			<xsd:documentation>
    UC50803 : DetermineWarrantyMisuse is an [exchange] that represents a message associated with a use case (UC50803) providing the necessary information to 
    determine whether warranty was or not misused.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DetermineWarrantyMisuse</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgAnlys" type="damageAnalysis" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgChar" type="damageCharacteristic" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="localPos" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="transpPosRef" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcf" type="warrantyClaimFollowUp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="identifyWarrantyRisks">
		<xsd:annotation>
			<xsd:documentation>
    UC50804 : IdentifyWarrantyRisks is an [exchange] that represents a message associated with a use case (UC50804) providing the necessary information to 
    identify potential warranty risks.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:IdentifyWarrantyRisks</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="calib" type="calibration" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consq" type="consequence" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgAnlys" type="damageAnalysis" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgChar" type="damageCharacteristic" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envRev" type="environmentRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expf" type="explanatoryFactor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="localPos" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="transpPosRef" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcf" type="warrantyClaimFollowUp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="improveWarrantyRules">
		<xsd:annotation>
			<xsd:documentation>
    UC50805 : ImproveWarrantyRules is an [exchange] that represents a message associated with a use case (UC50805) providing the necessary information to 
    evaluate the suitability of existing warranty rules.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ImproveWarrantyRules</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="calib" type="calibration" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgAnlys" type="damageAnalysis" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgChar" type="damageCharacteristic" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envRev" type="environmentRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="localPos" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="transpPosRef" type="localPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcf" type="warrantyClaimFollowUp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="recordHealthData">
		<xsd:annotation>
			<xsd:documentation>
    UC50901 : RecordHealthData is an [exchange] that represents a message associated with a use case (UC50901) allowing health and monitoring data for a 
    SerializedProductVariant to be transferred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RecordHealthData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="snsr" type="sensor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportUsageInformation">
		<xsd:annotation>
			<xsd:documentation>
    UC50902 : ReportUsageInformation is an [exchange] that represents a message associated with a use case (UC50902) providing the information about a Product 
    usage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportUsageInformation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="snsr" type="sensor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="respondToUsageInformation">
		<xsd:annotation>
			<xsd:documentation>
    UC50903 : RespondToUsageInformation is an [exchange] that represents a message associated with a use case (UC50903) providing the information required to 
    take action after receiving usage information.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RespondToUsageInformation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="snsr" type="sensor" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="obsolescencePlanning">
		<xsd:annotation>
			<xsd:documentation>
    UC51001 : ObsolescencePlanning is an [exchange] that represents a message associated with a use case (UC51001) providing the necessary information to plan 
    for the obsolescence of an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ObsolescencePlanning</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="determineObsolescenceCandidates">
		<xsd:annotation>
			<xsd:documentation>
    UC51002 : DetermineObsolescenceCandidates is an [exchange] that represents a message associated with a use case (UC51002) providing the necessary 
    information to identify items that are facing potential obsolescence.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DetermineObsolescenceCandidates</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mact" type="maintenanceActivity" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="obscp" type="obsolescenceParameter" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="determineObsolescenceStrategy">
		<xsd:annotation>
			<xsd:documentation>
    UC51003 : DetermineObsolescenceStrategy is an [exchange] that represents a message associated with a use case (UC51003) providing the necessary information 
    to define the strategy on handling obsolescence.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DetermineObsolescenceStrategy</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="plut" type="plannedUpgradeTimescales" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="monitorObsolescence">
		<xsd:annotation>
			<xsd:documentation>
    UC51004 : MonitorObsolescence is an [exchange] that represents a message associated with a use case (UC51004) providing the necessary information to 
    monitor possible obsolescence's and prepare for them.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MonitorObsolescence</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="solveObsolescence">
		<xsd:annotation>
			<xsd:documentation>
    UC51005 : SolveObsolescence is an [exchange] that represents a message associated with a use case (UC51005) providing the information required to solve an 
    obsolescence.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SolveObsolescence</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pliu" type="plannedItemUpgrade" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="plut" type="plannedUpgradeTimescales" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideObsolescenceAlert">
		<xsd:annotation>
			<xsd:documentation>
    UC51006 : ProvideObsolescenceAlert is an [exchange] that represents a message associated with a use case (UC51006) providing the capability to inform other 
    parties about an upcoming obsolescence.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideObsolescenceAlert</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="obscp" type="obsolescenceParameter" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="elaborateAssignmentProposal">
		<xsd:annotation>
			<xsd:documentation>
    UC51101 : ElaborateAssignmentProposal is an [exchange] that represents a message associated with a use case (UC51101) providing the necessary information 
    to provide a proposal about how a serialized Product variant can perform a specific fleet task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ElaborateAssignmentProposal</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consi" type="consumableItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cancelFleetTask">
		<xsd:annotation>
			<xsd:documentation>
    UC51102 : CancelFleetTask is an [exchange] that represents a message associated with a use case (UC51102) providing the necessary information to cancel an 
    ongoing or planned fleet task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CancelFleetTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="modifyFleetTask">
		<xsd:annotation>
			<xsd:documentation>
    UC51103 : ModifyFleetTask is an [exchange] that represents a message associated with a use case (UC51103) providing the necessary information required to 
    modify a fleet task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ModifyFleetTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="elaborateFleetPlan">
		<xsd:annotation>
			<xsd:documentation>
    UC51104 : ElaborateFleetPlan is an [exchange] that represents a message associated with a use case (UC51104) providing the necessary information to 
    elaborate a plan for effectively managing a fleet.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ElaborateFleetPlan</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluateFleetTask">
		<xsd:annotation>
			<xsd:documentation>
    UC51105 : EvaluateFleetTask is an [exchange] that represents a message associated with a use case (UC51105) providing the necessary information to evaluate 
    the effectiveness of a fleet task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EvaluateFleetTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consi" type="consumableItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servrc" type="serviceRequestCancellation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="prepareProductForFleetTask">
		<xsd:annotation>
			<xsd:documentation>
    UC51106 : PrepareProductForFleetTask is an [exchange] that represents a message associated with a use case (UC51106) allowing the information required to 
    prepare the execution of a fleet task to be provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PrepareProductForFleetTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="recoverProductAfterFleetTask">
		<xsd:annotation>
			<xsd:documentation>
    UC51107 : RecoverProductAfterFleetTask is an [exchange] that represents a message associated with a use case (UC51107) allowing a record of actions taken 
    to recover a serialized Product after executing a fleet task to be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RecoverProductAfterFleetTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consi" type="consumableItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportFleetAvailability">
		<xsd:annotation>
			<xsd:documentation>
    UC51108 : ReportFleetAvailability is an [exchange] that represents a message associated with a use case (UC51108) allowing to report on the availability of 
    a Fleet or a SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportFleetAvailability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requestSoftwareFeature">
		<xsd:annotation>
			<xsd:documentation>
    UC51201 : RequestSoftwareFeature is an [exchange] that represents a a message associated with a use case (UC51201) providing the information required to 
    request a new software feature.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RequestSoftwareFeature</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mact" type="maintenanceActivity" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swerr" type="softwareError" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportSoftwareError">
		<xsd:annotation>
			<xsd:documentation>
    UC51202 : ReportSoftwareError is an [exchange] that represents a a message associated with a use case (UC51202) providing the information required to 
    report a software bug.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportSoftwareError</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swerr" type="softwareError" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="assessSoftwareUsability">
		<xsd:annotation>
			<xsd:documentation>
    UC51203 : AssessSoftwareUsability is an [exchange] that represents a message associated with a use case (UC51203) providing the necessary information to 
    report on how usable a piece of software is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AssessSoftwareUsability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="slac" type="serviceLevelAgreementClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swerr" type="softwareError" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportSWDocumentationErrors">
		<xsd:annotation>
			<xsd:documentation>
    UC51204 : ReportSWDocumentationErrors is an [exchange] that represents a message associated with a use case (UC50501) providing the information required to 
    report errors in the documentation of a software item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportSWDocumentationErrors</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="assessHWSWInteroperability">
		<xsd:annotation>
			<xsd:documentation>
    UC51205 : AssessHWSWInteroperability is an [exchange] that represents a message associated with a use case (UC51205) providing the necessary information to 
    evaluate whether there are hardware-software incompatibilities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AssessHWSWInteroperability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swerr" type="softwareError" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportSoftwareInstallation">
		<xsd:annotation>
			<xsd:documentation>
    UC51206 : ReportSoftwareInstallation is an [exchange] that represents a message associated with a use case (UC51206) providing the information required to 
    report that a piece of software has been installed on an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportSoftwareInstallation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swerr" type="softwareError" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportSoftwareConfiguration">
		<xsd:annotation>
			<xsd:documentation>
    UC51207 : ReportSoftwareConfiguration is an [exchange] that represents a message associated with a use case (UC51207) providing the information required to 
    report on the configuration of software.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportSoftwareConfiguration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swerr" type="softwareError" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="assessSoftwareMaturity">
		<xsd:annotation>
			<xsd:documentation>
    UC51208 : AssessSoftwareMaturity is an [exchange] that represents a message associated with a use case (UC51208) providing the necessary information to 
    report on the maturity of a software item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AssessSoftwareMaturity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="slac" type="serviceLevelAgreementClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swerr" type="softwareError" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportHelpDeskTickets">
		<xsd:annotation>
			<xsd:documentation>
    UC51209 : ReportHelpDeskTickets is an [exchange] that represents a message associated with a use case (UC51209) allowing help desk tickets to be created.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportHelpDeskTickets</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="asssessSoftwareDelivery">
		<xsd:annotation>
			<xsd:documentation>
    UC51210 : AsssessSoftwareDelivery is an [exchange] that represents a message associated with a use case (UC51210) providing the necessary information to 
    report on the delivery of a software item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AsssessSoftwareDelivery</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consi" type="consumableItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swerr" type="softwareError" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="communicateDataLoading">
		<xsd:annotation>
			<xsd:documentation>
    UC51211 : CommunicateDataLoading is an [exchange] that represents a message associated with a use case (UC51211) providing the necessary information to 
    report on the loading of a specific data set or software item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CommunicateDataLoading</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideAsDeliveredConfiguration">
		<xsd:annotation>
			<xsd:documentation>
    UC51301 : ProvideAsDeliveredConfiguration is an [exchange] that represents a message associated with a use case (UC51301) allowing another party with the 
    configuration information of a delivered SerializedProductVariant to be provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideAsDeliveredConfiguration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="applicDef" type="applicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideAsAllowedConfiguration">
		<xsd:annotation>
			<xsd:documentation>
    UC51302 : ProvideAsAllowedConfiguration is an [exchange] that represents a message associated with a use case (UC51302) allowing another party to be 
    provided with the set of configurations that the serialized Product variant is allowed to have, to ensure safe operation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideAsAllowedConfiguration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="applicDef" type="applicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideOperationalConfiguration">
		<xsd:annotation>
			<xsd:documentation>
    UC51303 : ProvideOperationalConfiguration is an [exchange] that represents a message associated with a use case (UC51303) allowing to provide the 
    operational configuration of a serialized product variant at a specific moment in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideOperationalConfiguration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="applicDef" type="applicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loge" type="logBookEntry" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideCustomerModification">
		<xsd:annotation>
			<xsd:documentation>
    UC51304 : ProvideCustomerModification is an [exchange] that represents a message associated with a use case (UC51304) allowing information about a 
    customer-driven modification to be provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideCustomerModification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="applicDef" type="applicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mact" type="maintenanceActivity" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pact" type="partAction" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pliu" type="plannedItemUpgrade" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="plut" type="plannedUpgradeTimescales" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideAsDesiredConfiguration">
		<xsd:annotation>
			<xsd:documentation>
    UC51305 : ProvideAsDesiredConfiguration is an [exchange] that represents a message associated with a use case (UC51305) allowing the design configuration 
    to be provided to another party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideAsDesiredConfiguration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="applicDef" type="applicabilityStatement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideContractualInformation">
		<xsd:annotation>
			<xsd:documentation>
    UC51401 : ProvideContractualInformation is an [exchange] that represents a message associated with a use case (UC51401) allowing information about a 
    contract to be provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideContractualInformation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expev" type="expressionEvaluation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servrc" type="serviceRequestCancellation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideWorkBreakdown">
		<xsd:annotation>
			<xsd:documentation>
    UC51402 : ProvideWorkBreakdown is an [exchange] that represents a message associated with a use case (UC51402) that allows a WBS to be transferred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideWorkBreakdown</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="budg" type="budget" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideCostBreakdown">
		<xsd:annotation>
			<xsd:documentation>
    UC51403 : ProvideCostBreakdown is an [exchange] that represents a message associated with a use case (UC51403) that provides cost breakdown information.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideCostBreakdown</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="budg" type="budget" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costBkdn" type="costBreakdown" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideOrganizationalBreakdown">
		<xsd:annotation>
			<xsd:documentation>
    UC51404 : ProvideOrganizationalBreakdown is an [exchange] that represents a message associated with a use case (UC51404) allowing an OBS to be provided to 
    another party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideOrganizationalBreakdown</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideActivityPlanning">
		<xsd:annotation>
			<xsd:documentation>
    UC51405 : ProvideActivityPlanning is an [exchange] that represents a message associated with a use case (UC51405) allowing another party to be provided 
    with the list of planned activities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideActivityPlanning</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltpl" type="fleetPlanning" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTsk" type="fleetTask" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mfacs" type="maintenanceFacilitySlot" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportSLACompliance">
		<xsd:annotation>
			<xsd:documentation>
    UC51406 : ReportSLACompliance is an [exchange] that represents a message associated with a use case (UC51406) providing the information required to report 
    the compliance with an SLA.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportSLACompliance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expev" type="expressionEvaluation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportContractCosts">
		<xsd:annotation>
			<xsd:documentation>
    UC51407 : ReportContractCosts is an [exchange] that represents a message associated with a use case (UC51407) allowing costs incurred against a program to 
    be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportContractCosts</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideStatusReport">
		<xsd:annotation>
			<xsd:documentation>
    UC51408 : ProvideStatusReport is an [exchange] that represents a message associated with a use case (UC51408) allowing a report in electronic format to be 
    provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideStatusReport</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="manageServiceRequest">
		<xsd:annotation>
			<xsd:documentation>
    UC51410 : ManageServiceRequest is an [exchange] that represents a message associated with a use case (UC51410) providing the necessary information to 
    address the response to a service request.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ManageServiceRequest</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condType" type="conditionType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expev" type="expressionEvaluation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servrc" type="serviceRequestCancellation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requestResource">
		<xsd:annotation>
			<xsd:documentation>
    UC51411 : RequestResource is an [exchange] that represents a message associated with a use case (UC51411) providing the required information to request the 
    usage of a resource.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RequestResource</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="capabilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="defineSecurity">
		<xsd:annotation>
			<xsd:documentation>
    UC51412 : DefineSecurity is an [exchange] that represents a message associated with a use case (UC51412) providing the necessary information to ensure that 
    proper security classifications are applied to classified items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DefineSecurity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exchangeExportControl">
		<xsd:annotation>
			<xsd:documentation>
    UC51413 : ExchangeExportControl is an [exchange] that represents a message associated with a use case (UC51413) providing the necessary information to 
    ensure compliance with export control regulations.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ExchangeExportControl</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideLaborRates">
		<xsd:annotation>
			<xsd:documentation>
    UC51414 : ProvideLaborRates is an [exchange] that represents a message associated with a use case (UC51414) allowing labor rates from one party to be 
    provided to another.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideLaborRates</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="skill" type="skill" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="trade" type="trade" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="persType" type="typeOfPerson" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideDocumentationTraceability">
		<xsd:annotation>
			<xsd:documentation>
    UC51415 : ProvideDocumentationTraceability is an [exchange] that represents a message associated with a use case (UC51415) ensuring the traceability of 
    documentation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideDocumentationTraceability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="partDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideDisposalLocationInformation">
		<xsd:annotation>
			<xsd:documentation>
    UC51503 : ProvideDisposalLocationInformation is an [exchange] that represents a message associated with a use case (UC51503) allowing the location 
    information of an item to be indicated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideDisposalLocationInformation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlv" type="maintenanceLevel" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportInfrastructureAvailability">
		<xsd:annotation>
			<xsd:documentation>
    UC51504 : ReportInfrastructureAvailability is an [exchange] that represents a message associated with a use case (UC51504) allowing information about the 
    current, past and future availability of an infrastructure to be provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportInfrastructureAvailability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="avail" type="availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="navcau" type="nonAvailabilityCause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="defineOrUpdateEnvironment">
		<xsd:annotation>
			<xsd:documentation>
    UC51505 : DefineOrUpdateEnvironment is an [exchange] that represents a message associated with a use case (UC51505) allowing information about the 
    environment in which the Product operates or is maintained to be defined or updated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DefineOrUpdateEnvironment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envDef" type="environmentDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envRev" type="environmentRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opap" type="operationalApproval" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reallocateFleetOrProduct">
		<xsd:annotation>
			<xsd:documentation>
    UC51506 : ReallocateFleetOrProduct is an [exchange] that represents a message associated with a use case (UC51506) allowing to report the re(allocation) of 
    a Fleet or Product to a different operator, owner or operating location.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReallocateFleetOrProduct</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocType" type="operatingLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exchangeEnvironmentalData">
		<xsd:annotation>
			<xsd:documentation>
    UC51601 : ExchangeEnvironmentalData is an [exchange] that represents a message associated with a use case (UC51601) allowing consumption and emission 
    information between different parties due to Product operation to be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ExchangeEnvironmentalData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consi" type="consumableItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="hwPartContainer" type="hardwarePartContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infOp" type="infrastructureOperatingPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="looseWaste" type="looseWaste" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteCont" type="wasteContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportEnvironmentalDataToAuthorities">
		<xsd:annotation>
			<xsd:documentation>
    UC51602 : ReportEnvironmentalDataToAuthorities is an [exchange] that represents a message associated with a use case (UC51602) allowing consumption and 
    emission information to be reported to the authorities, not only for the Product but also for the facilities or infrastructure required to support the 
    Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportEnvironmentalDataToAuthorities</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consi" type="consumableItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTP" type="downTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="hwPartContainer" type="hardwarePartContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infOp" type="infrastructureOperatingPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="looseWaste" type="looseWaste" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mvld" type="movementLegDelay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opm" type="operationalMode" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opp" type="operationalPeriod" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRole" type="operationalRole" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteCont" type="wasteContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportModificationImpactOnDisposal">
		<xsd:annotation>
			<xsd:documentation>
    UC51603 : ReportModificationImpactOnDisposal is an [exchange] that represents a message associated with a use case (UC51603) allowing the potential 
    environmental and disposal impact of a Product modification to be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportModificationImpactOnDisposal</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgAuth" type="changeAuthorization" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="consi" type="consumableItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="hwPartContainer" type="hardwarePartContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="looseWaste" type="looseWaste" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pliu" type="plannedItemUpgrade" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="plut" type="plannedUpgradeTimescales" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteCont" type="wasteContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportValuableItemsFromDisposal">
		<xsd:annotation>
			<xsd:documentation>
    UC51604 : ReportValuableItemsFromDisposal is an [exchange] that represents a message associated with a use case (UC51604) allowing reporting on the 
    valuable items that have been recovered during the disposal of a SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportValuableItemsFromDisposal</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requestItemDisposal">
		<xsd:annotation>
			<xsd:documentation>
    UC51605 : RequestItemDisposal is an [exchange] that represents a message associated with a use case (UC51605) allowing the disposal of a Product or other 
    end item to be requested.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RequestItemDisposal</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="hwPartContainer" type="hardwarePartContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportProductDisposal">
		<xsd:annotation>
			<xsd:documentation>
    UC51606 : ReportProductDisposal is an [exchange] that represents a message associated with a use case (UC51606) allowing information about the disposal of 
    a Product to be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportProductDisposal</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requestWasteDisposal">
		<xsd:annotation>
			<xsd:documentation>
    UC51607 : RequestWasteDisposal is an [exchange] that represents a message associated with a use case (UC51607) that allows the disposal of waste or 
    hazardous material to be requested.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RequestWasteDisposal</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="hwPartContainer" type="hardwarePartContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="looseWaste" type="looseWaste" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteCont" type="wasteContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportWasteDisposal">
		<xsd:annotation>
			<xsd:documentation>
    UC51608 : ReportWasteDisposal is an [exchange] that represents a message associated with a use case (UC51608) allowing information about the disposal of 
    waste to be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportWasteDisposal</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="hwPartContainer" type="hardwarePartContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="looseWaste" type="looseWaste" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteCont" type="wasteContainer" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportDisposalCosts">
		<xsd:annotation>
			<xsd:documentation>
    UC51609 : ReportDisposalCosts is an [exchange] that represents a message associated with a use case (UC51609) allowing cost information about a disposal to 
    be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportDisposalCosts</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispOper" type="itemDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mat" type="material" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="reportableActivityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resUsr" type="resourceUsageRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servReq" type="serviceRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wo" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="notifyUnacceptableConditionDisposal">
		<xsd:annotation>
			<xsd:documentation>
    UC51610 : NotifyUnacceptableConditionDisposal is an [exchange] that represents a message associated with a use case (UC51610) allowing to report the need 
    for disposal of an item due to unacceptable conditions, usually in the context of a Warranty claim.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:NotifyUnacceptableConditionDisposal</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPC" type="allowedProductConfigurationByConfigurationIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClause" type="contractClause" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="hardwarePartDefinitionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="softwarePartAsReleasedNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="unaccept" type="unacceptableCondition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcf" type="warrantyClaimFollowUp" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideProjectSpecificValues">
		<xsd:annotation>
			<xsd:documentation>
    UC52301 : ProvideProjectSpecificValues is an [exchange] that represents a message associated with a use case (UC51501) allowing project-specific values for 
    a specific purpose to be exchanged.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideProjectSpecificValues</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="provideNonPredefinedInformation">
		<xsd:annotation>
			<xsd:documentation>
    UC52302 : ProvideNonPredefinedInformation is an [exchange] that represents a message associated with a use case (UC51502) allowing non-structured 
    information not contemplated by the specification itself (eg, photos, videos, built-in-test files, etc) to be transferred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProvideNonPredefinedInformation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="actionNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="batchPart" type="batchHardwarePart" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargo" type="cargoItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cr" type="changeRequest" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cb" type="circuitBreaker" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmt" type="comment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contr" type="contract" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="costItem" type="costItem" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="country" type="country" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="file" type="digitalFile" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="documentNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="env" type="environment" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="eventNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrLic" type="exportControlLicense" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="facilityNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fleet" type="fleet" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="geoArea" type="geographicalArea" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="globPos" type="globalPosition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="infrastructureNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrrev" type="infrastructureRevision" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctr" type="locator" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mv" type="movement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="movleg" type="movementLeg" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="organizationNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pty" type="penalty" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="personNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pool" type="pool" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prod" type="product" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="proj" type="project" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptm" type="reportableMetric" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="requirementNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resSpec" type="resourceSpecification" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="secClassDef" type="securityClass" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="serializedHardwarePartNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serialPV" type="serializedProductVariant" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serv" type="service" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subs" type="substanceDefinition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskReq" type="taskRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wc" type="warrantyClaim" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:group ref="workItemNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requestData">
		<xsd:annotation>
			<xsd:documentation>
    UC52501 : RequestData is an [exchange] that represents a message associated with a use case (UC52501) allowing an exchange party to request a specific data 
    set.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RequestData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:group ref="dataRequestNonAbstractClasses" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="accelerometer">
		<xsd:annotation>
			<xsd:documentation>
    Accelerometer is a SensorType that measures acceleration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Accelerometer</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="partName" type="partName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="exportControl" type="partExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="majorComp" type="partMajorComponent" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="partDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detRange" type="sensorDetectionRange" nillable="true" minOccurs="0"/>
			<xsd:element name="sensRate" type="sensorSamplingRate" nillable="true" minOccurs="0"/>
			<xsd:element name="sensit" type="sensorSensitivity" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="partcd" type="hardwarePartAsDesignedCommerceData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartDsgnData" type="hardwarePartDefinitionDesignData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartSupData" type="hardwarePartDefinitionSupportData" nillable="true" minOccurs="0"/>
			<xsd:element name="partCntrlData" type="partDefinitionControlledItemData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="partsList" type="partDefinitionPartsList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="snsr" type="sensor" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="altPart" type="alternatePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="action">
		<xsd:annotation>
			<xsd:documentation>
    Action is a [class] that specifies measures to be taken.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Action</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="actnId" type="actionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="actnCat" type="actionCategory" nillable="true" minOccurs="0"/>
			<xsd:element name="actnDescr" type="actionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="actnPrio" type="actionPriority" nillable="true" minOccurs="0"/>
			<xsd:element name="creaDate" type="actionCreationDate" nillable="true" minOccurs="0"/>
			<xsd:element name="scheDate" type="actionScheduledDate" nillable="true" minOccurs="0"/>
			<xsd:element name="closDate" type="actionCloseDate" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="action[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="aggregatedElement">
		<xsd:annotation>
			<xsd:documentation>
    AggregatedElement is a BreakdownElement that is a container for a collection of BreakdownElements which are grouped for an identified purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AggregatedElement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="beId" type="breakdownElementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="aggrBeType" type="aggregatedElementType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="beAggrRev" type="aggregatedElementRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="beInZones" type="breakdownElementInZoneItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="be[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="aggregatedElementRevision">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:AggregatedElementRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="breakdownElementRevisionIdentifier"/>
			<xsd:element name="beDescr" type="breakdownElementDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="msi" type="maintenanceSignificantOrRelevant" nillable="true" minOccurs="0"/>
			<xsd:element name="revRtnle" type="breakdownElementRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="breakdownElementRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="breakdownElementRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="beRel" type="breakdownElementRevisionRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="beInZones" type="breakdownElementInZoneItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mpoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:annotation>
						<xsd:appinfo>uidPattern:ber</xsd:appinfo>
					</xsd:annotation>
					<xsd:pattern value="ber[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="allocatedTaskLocation">
		<xsd:annotation>
			<xsd:documentation>
    AllocatedTaskLocation is a [class] that identifies where a Task is to be performed in the context of a given support solution.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AllocatedTaskLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="loc" type="taskLocationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="taskloc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfigurationByConfigurationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    AllowedProductConfigurationByConfigurationIdentifier is a [class] that defines an AllowedProductConfiguration by means other than a part number.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AllowedProductConfigurationByConfigurationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="allwdPCId" type="allowedProductConfigurationIdentifier" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="allwdConfOf" type="allowedProductConfiguration" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="apc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfigurationHardwarePartDefinition">
		<xsd:annotation>
			<xsd:documentation>
    AllowedProductConfigurationHardwarePartDefinition is a HardwarePartDefinition that is managed as an AllowedProductConfiguration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AllowedProductConfigurationHardwarePartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AttributeGroups -->
			<xsd:element name="partcd" type="hardwarePartAsDesignedCommerceData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartDsgnData" type="hardwarePartDefinitionDesignData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartSupData" type="hardwarePartDefinitionSupportData" nillable="true" minOccurs="0"/>
			<xsd:element name="partCntrlData" type="partDefinitionControlledItemData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="partsList" type="partDefinitionPartsList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="altPart" type="alternatePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="allwdConfOf" type="allowedProductConfiguration" nillable="true" minOccurs="0"/>
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfigurationRole">
		<xsd:annotation>
			<xsd:documentation>
    AllowedProductConfigurationRole is a [relationship] that defines what OperationalRoles can be performed by a specific AllowedProductConfiguration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AllowedProductConfigurationRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="opRoleRef" type="operationalRoleRef" minOccurs="0"/>
			<xsd:element name="apoc" type="allowedProductOperationalConfigurationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="alprcoro[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedRoleChange">
		<xsd:annotation>
			<xsd:documentation>
    AllowedRoleChange is a [relationship] that defines the role changes that are possible to allow a Product in one specific role to be configured for a 
    different role.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AllowedRoleChange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="accTime" type="allowedRoleChangeDuration" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="opRoleRef" type="operationalRoleRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="arc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="alternatePartDefinition">
		<xsd:annotation>
			<xsd:documentation>
    AlternatePartDefinition is a [relationship] that defines an alternate PartDefinition which can replace the base PartDefinition in all its usages ie, it is 
    context independent, and is form, fit, and function equivalent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AlternatePartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="partRef" type="partDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="altpt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivity">
		<xsd:annotation>
			<xsd:documentation>
    AnalysisActivity is a [class] that represents the objective for, and outcome of, an analysis carried out for the AnalysisCandidateItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AnalysisActivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="anlysType" type="analysisActivityType"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="anlysRev" type="analysisActivityRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="anlysact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityRevision">
		<xsd:annotation>
			<xsd:documentation>
    AnalysisActivityRevision is a [class] representing an iteration applied to an AnalysisActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AnalysisActivityRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="analysisActivityRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="anlysDcsn" type="analysisActivityDecision" nillable="true" minOccurs="0"/>
			<xsd:element name="dcsnRtnle" type="analysisActivityDecisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anlysDescr" type="analysisActivityDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anlysObj" type="analysisActivityObjective" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anlysMthd" type="analysisActivityMethod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anlysRslt" type="analysisActivityResult" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="statusDescr" type="analysisActivityStatusDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="analysisActivityRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="analysisActivityRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="analysisActivityRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="anlysrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="anchoringPoint">
		<xsd:annotation>
			<xsd:documentation>
    AnchoringPoint is a [class] representing a point where an item can be moored or tied down.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AnchoringPoint</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="anchorId" type="anchoringPointIdentifier"/>
			<xsd:element name="anchorMax" type="anchoringPointMaxLoad" nillable="true" minOccurs="0"/>
			<xsd:element name="anchorFix" type="anchoringPointFixed" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itemPos" type="positionReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="anchorpt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="applicabilityStatement">
		<xsd:annotation>
			<xsd:documentation>
    ApplicabilityStatement is a [class] that defines the situation or situations under which related items are valid.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ApplicabilityStatement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="applicId" type="applicabilityStatementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="applicDescr" type="applicabilityStatementDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:group ref="evaluationCriteriaNonAbstractClasses" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="applst[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="associatedActualEnvironment">
		<xsd:annotation>
			<xsd:documentation>
    AssociatedActualEnvironment is a [relationship] that associates an EnvironmentItem with an ActualEnvironemnt relevant to its existence, operation and/or 
    support during a specified period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AssociatedActualEnvironment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="period" type="associatedActualEnvironmentPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="actualEnv" type="actualEnvironment" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="itemenv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="associatedDegradationMechanism">
		<xsd:annotation>
			<xsd:documentation>
    AssociatedDegradationMechanism is a [relationship] where a DegradationMechanismItem relates to a DegradationMechanism which applies to the item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AssociatedDegradationMechanism</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="efctDescr" type="associatedDegradationMechanismEffectDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="degrMechRef" type="degradationMechanismRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="assdegr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="associatedEnvironmentDefinition">
		<xsd:annotation>
			<xsd:documentation>
    AssociatedEnvironmentDefinition is a [relationship] that associates an EnvironmentDefinitionItem with an EnvironmentDefinition relevant to its existence, 
    operation and/or support.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AssociatedEnvironmentDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="envDefRef" type="environmentDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="assenvd[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="authorityRequirement">
		<xsd:annotation>
			<xsd:documentation>
    AuthorityRequirement is a Requirement that has been issued by a technical or legal authority.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AuthorityRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="authorizationToOperate">
		<xsd:annotation>
			<xsd:documentation>
    AuthorizationToOperate is a [class] that represents a certification allowing a specific configuration of a product to be put into operation. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AuthorizationToOperate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="authToOpId" type="authorizationToOperateIdentifier"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="ato[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="authorizedLife">
		<xsd:annotation>
			<xsd:documentation>
    AuthorizedLife is a [compoundAttribute] that identifies the maximum usage limit and upon reaching this limit any further usage of the item must be 
    re-authorized. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AuthorizedLife</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="aul" nillable="true" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:timeCycleUnit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="availability">
		<xsd:annotation>
			<xsd:documentation>
    Availability is an indication of the global availability status of an AvailabilityItem at a specific day.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Availability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="avId" type="availabilityIdentifier"/>
			<xsd:element name="avDate" type="availabilityDates" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="availabilityStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="repDate" type="availabilityReportingDate" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="availabilityDescription" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="navcau" type="nonAvailabilityCause" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="navAttr" type="nonAvailabilityAttribution" nillable="true" minOccurs="0"/>
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="avail[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="batchHardwarePart">
		<xsd:annotation>
			<xsd:documentation>
    BatchHardwarePart is a [class] that represents actual physical parts which can be identified by their batch membership.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BatchHardwarePart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="bpart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdown">
		<xsd:annotation>
			<xsd:documentation>
    Breakdown is a [class] that identifies a specific partitioning of a Product to form a parent-child structure of related instances of BreakdownElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Breakdown</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="bkdnType" type="breakdownType"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="bkdnRev" type="breakdownRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="bkdn[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementInZone">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementInZone is a [relationship] where a BreakdownElementInZoneItem relates to the ZoneElement where it is located.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownElementInZone</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="beZoneRef" type="zoneElementRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="beiz[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementRevisionRelationship">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementRevisionRelationship is a [relationship] where one BreakdownElementRevision relates to another BreakdownElement or BreakdownElementRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownElementRevisionRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="breakdownElementRevisionRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="relBe" type="breakdownElementRevisionRelationshipItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="berr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementStructure">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementStructure is a [relationship] that establishes a hierarchical structure between two usages of BreakdownElement that belong to the same 
    BreakdownRevision. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownElementStructure</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="seqNr" type="breakdownElementChildSequenceNumber" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="bes[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementUsageAttachmentRelationship">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementUsageAttachmentRelationship is a BreakdownElementUsageRelationship that identifies the connector and attachment slot that must be used on 
    the respective breakdown element when installed on the BreakdownItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownElementUsageAttachmentRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="breakdownElementUsageRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef" minOccurs="0"/>
			<xsd:element name="beHwConnRef" type="hardwareElementAttachingConnectorRef" minOccurs="0"/>
			<xsd:element name="beHwSlotRef" type="hardwareElementAttachmentSlotRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="beur[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementUsageInBreakdown">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementUsageInBreakdown is a [class] that represents a member of a BreakdownRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownElementUsageInBreakdown</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="usageId" type="breakdownElementUsageIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="usageQty" type="breakdownElementUsageQuantity" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="usageRfd" type="referenceDesignator" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="beChild" type="breakdownElementStructure" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="relBe" type="breakdownElementUsageRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beRevRef" type="breakdownElementRevisionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="beInZones" type="breakdownElementInZoneItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="allwdPCEfys" type="effectiveOnProductConfigurationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="usableOns" type="usableOnItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="beu[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementUsageRelationship">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementUsageRelationship is a [relationship] where one usage of a BreakdownElement relates to the usage of another BreakdownElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownElementUsageRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="breakdownElementUsageRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="beur[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownRevision">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownRevision is a [class] representing an iteration applied to a Breakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="breakdownRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="breakdownRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="breakdownRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="breakdownRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="beUsage" type="breakdownElementUsageInBreakdown" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="bkdnRevRel" type="breakdownRevisionRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="bkdnr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownRevisionRelationship">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownRevisionRelationship is a [relationship] where one BreakdownRevision relates to another BreakdownRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownRevisionRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="breakdownRevisionRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="bkdnRevRef" type="breakdownRevisionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="bkdnrevr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="budget">
		<xsd:annotation>
			<xsd:documentation>
    Budget is a class representing a cost proposal to perform a specific service or provide a certain item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Budget</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="budSrvReq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="servReqRef" type="serviceRequestRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="budget[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibration">
		<xsd:annotation>
			<xsd:documentation>
    Calibration is an [attributeGroup&gt; that provides historical data about calibration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Calibration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="calibId" type="calibrationIdentifier"/>
			<xsd:element name="calibRes" type="calibrationResult" nillable="true" minOccurs="0"/>
			<xsd:element name="calibNotes" type="calibrationNotes" nillable="true" minOccurs="0"/>
			<xsd:element name="calErr" type="calibrationUncertainty" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="calMea" type="calibrationMeasurement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="calDoc" type="calibrationDocument" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envRevRef" type="environmentRevisionRef" minOccurs="0"/>
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<xsd:element name="persRef" type="personRef" minOccurs="0"/>
			<xsd:element name="supEqItem" type="supportEquipmentItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="calib[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibrationDocument">
		<xsd:annotation>
			<xsd:documentation>
    CalibrationDocument is a [relationship] that associates a Calibration to a Document.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CalibrationDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="calDocType" type="calibrationDocumentType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="docItem" type="documentItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="caldoc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capability">
		<xsd:annotation>
			<xsd:documentation>
    Capability is a class that defines an actual ability or potential for an indicated use or deployment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Capability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="capId" type="capabilityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="name" type="capabilityName" nillable="true" minOccurs="0"/>
			<xsd:element name="capType" type="capabilityType" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="capabilityDescription" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="capLim" type="capabilityLimitation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="capDefRevRef" type="capabilityDefinitionRevisionRef" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cap[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinition">
		<xsd:annotation>
			<xsd:documentation>
    CapabilityDefinition is a [class] that defines an ability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CapabilityDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="capId" type="capabilityDefinitionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="capCat" type="capabilityDefinitionCategory" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="capDefRev" type="capabilityDefinitionRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="capd[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionCharacteristic">
		<xsd:annotation>
			<xsd:documentation>
    CapabilityDefinitionCharacteristic is a [class&gt; that specifies a measurable or observable feature which is significant for the CapabilityDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CapabilityDefinitionCharacteristic</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="charName" type="capabilityDefinitionCharacteristicName" maxOccurs="unbounded"/>
			<xsd:element name="charVal" type="capabilityDefinitionCharacteristicValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="valCompOp" type="capabilityDefinitionCharacteristicValueComparisonOperator" nillable="true" minOccurs="0"/>
			<xsd:element name="charDescr" type="capabilityDefinitionCharacteristicDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="capdchar[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionRevision">
		<xsd:annotation>
			<xsd:documentation>
    CapabilityDefinitionRevision is a [class] representing an iteration applied to a CapabilityDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CapabilityDefinitionRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="capabilityDefinitionRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="capName" type="capabilityDefinitionName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="capDescr" type="capabilityDefinitionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="capabilityDefinitionRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="capabilityDefinitionRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="capabilityDefinitionRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="capDefChar" type="capabilityDefinitionCharacteristic" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="capdrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityLimitation">
		<xsd:annotation>
			<xsd:documentation>
    CapabilityLimitation is a [class] that defines a limitation on the use of a specific Capability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CapabilityLimitation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="camLimId" type="capabilityLimitationIdentifier"/>
			<xsd:element name="name" type="capabilityLimitationName" nillable="true" minOccurs="0"/>
			<xsd:element name="capLimType" type="capabilityLimitationType" nillable="true" minOccurs="0"/>
			<xsd:element name="capLimVal" type="capabilityLimitationValue" nillable="true" minOccurs="0"/>
			<xsd:element name="capLimFor" type="capabilityLimitationDuration" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="capabilityLimitationDescription" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="caplim[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cargoItem">
		<xsd:annotation>
			<xsd:documentation>
    CargoItem is a class representing one or several items that need to be transported as part of a FleetTask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CargoItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="cargoId" type="cargoItemIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="name" type="cargoItemName" nillable="true" minOccurs="0"/>
			<xsd:element name="units" type="cargoItemUnits" nillable="true" minOccurs="0"/>
			<xsd:element name="dim" type="cargoItemUnitaryDimensions" nillable="true" minOccurs="0"/>
			<xsd:element name="weight" type="cargoItemUnitaryWeight" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="cargoItemDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="stack" type="cargoItemStackable" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cargo[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeAuthorization">
		<xsd:annotation>
			<xsd:documentation>
    ChangeAuthorization is a [class] that is the record of the permission to modify product design, its procedures and/or associated product support data.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeAuthorization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="chgAuthId" type="changeAuthorizationIdentifier" maxOccurs="unbounded"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="chgAuthChEmReq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="chEmReqRef" type="changeEmbodimentRequirementRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="chAuChRq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="crRef" type="changeRequestRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="chgau[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changedItemAvailabilityRequirement">
		<xsd:annotation>
			<xsd:documentation>
    ChangedItemAvailabilityRequirement is a [relationship] that defines the required availability of the SerializedProductVariant or ProductVariant fleet into 
    which the item to be upgraded has to be embodied during the Product upgrade.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangedItemAvailabilityRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="upReqRef" type="upgradeRequirementRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="chItavrq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeEmbodimentRequirement">
		<xsd:annotation>
			<xsd:documentation>
    ChangeEmbodimentRequirement is a Requirement to embody an authorized modification into one or several items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeEmbodimentRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="ceReqType" type="changeEmbodimentRequirementType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<xsd:element name="pliuRef" type="plannedItemUpgradeRef" minOccurs="0"/>
			<xsd:element name="toRef" type="technicalOrderRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeNotification">
		<xsd:annotation>
			<xsd:documentation>
    ChangeNotification is a [relationship] that identifies an item changed due to the associated ChangeAuthorization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeNotification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="chgDescr" type="changeNotificationDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chgType" type="changeNotificationType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="chgAuthRef" type="changeAuthorizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="chg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequest">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequest is a [class] that represents a formal proposal for a modification to a configuration item upon a given baseline.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequest</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="crMat" type="changeRequestAddedOrRemovedMaterial" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="crSubs" type="changeRequestAddedOrRemovedSubstance" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="crCause" type="changeRequestCause" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="crConsump" type="changeRequestConsumptionChange" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="crEmiss" type="changeRequestEmissionChange" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="crRaisedBy" type="changeRequestParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="crRtnle" type="changeRequestRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="crTarget" type="changeRequestTarget" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="derCRReq" type="derivedChangeRequestRequirement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="safeissRef" type="safetyIssueRef" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="targItem" type="changeRequestTargetItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="party" type="party" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestAddedOrRemovedMaterial">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestAddedOrRemovedMaterial is a [relationship] that allows to associate to an item the material that has been added or removed as a consequence of 
    a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestAddedOrRemovedMaterial</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="crChngMat" type="changeRequestAddedOrRemovedMaterialIdentifier"/>
			<xsd:element name="amount" type="changeRequestAddedOrRemovedMaterialAmount" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="matChng" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="matRef" type="materialRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="crEnvImpact" type="changeRequestEnvironmentallyImpactedItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="crmat[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestAddedOrRemovedSubstance">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestAddedOrRemovedSubstance is a [relationship] that allows to associate to an item the substances that have been added or removed as a 
    consequence of a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestAddedOrRemovedSubstance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="crChngSubs" type="changeRequestAddedOrRemovedSubstanceIdentifier"/>
			<xsd:element name="amount" type="changeRequestAddedOrRemovedSubstanceAmount" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="subChng" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="subsRef" type="substanceDefinitionRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="crEnvImpact" type="changeRequestEnvironmentallyImpactedItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="crsubs[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestCause">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestCause is a [relationship] that allows to associate the underlying cause(s) for a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestCause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="crCauseId" type="changeRequestCauseIdentifier" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="crReason" type="changeRequestReasonItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="crcau[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestConsumptionChange">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestConsumptionChange is a [relationship] that allows to associate an increase or reduction of an item consumption to the ChangeRequest that 
    caused it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestConsumptionChange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="amount" type="changeRequestConsumptionChangeAmount" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="consiRef" type="consumableItemRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="crconschg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestEmissionChange">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestEmissionChange is a [relationship] that allows to associate an increase or reduction of a substance emission to the ChangeRequest that caused 
    it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestEmissionChange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="amount" type="changeRequestEmissionChangeAmount" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="subsRef" type="substanceDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cremiss[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circle">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:Circle</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="circDiam" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:lengthUnit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestParty">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestParty is a [relationship] where a ChangeRequest relates to a Party that in some way is associated with the ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="ptyRole" type="changeRequestPartyRole"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="crparty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestRationale">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestRationale is a [relationship] that associates a ChangeRequest with a ChangeRequestRationaleItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="rtnleDescr" type="changeRequestRationaleDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="rtnleItem" type="changeRequestRationaleItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="crs[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestTarget">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestTarget is a [relationship] that associates a ChangeRequest with a ChangeRequestTargetItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestTarget</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="targItem" type="changeRequestTargetItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="crtgt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreaker">
		<xsd:annotation>
			<xsd:documentation>
    CircuitBreaker is a [class] that represents an individual circuit breaker identified in the context of a defined Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CircuitBreaker</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="cbId" type="circuitBreakerIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="cbName" type="circuitBreakerName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cbType" type="circuitBreakerType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="cbLoc" type="circuitBreakerLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cb[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerLocation">
		<xsd:annotation>
			<xsd:documentation>
    CircuitBreakerLocation is a [relationship] that identifies the item on which the CircuitBreaker is placed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CircuitBreakerLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="locDescr" type="circuitBreakerLocationDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cbloc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerSetting">
		<xsd:annotation>
			<xsd:documentation>
    CircuitBreakerSetting is a [class] that specifies an individual CircuitBreakerItem that must be in a specific state.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CircuitBreakerSetting</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="settingId" type="circuitBreakerSettingIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="cbState" type="circuitBreakerState" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="cbItem" type="circuitBreakerItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cbset[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerSettings">
		<xsd:annotation>
			<xsd:documentation>
    CircuitBreakerSettings is a [class] that identifies a set of CircuitBreakersItems that must be set in specific states.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CircuitBreakerSettings</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="settingsId" type="circuitBreakerSettingsIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="ordered" type="circuitBreakerSettingsOrdered" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="cbSetting" type="circuitBreakerSetting" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cbsets[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="classificationType">
		<xsd:annotation>
			<xsd:documentation>
    ClassificationType is an S-Series IPS specifications defined [primitive] that represents a finite set of values which are used to characterize the 
    associated information for a defined purpose. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ClassificationType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cloudInfrastructure">
		<xsd:annotation>
			<xsd:documentation>
    CloudInfrastructure is an Infrastructure that represents a network of remote servers hosted on the Internet and used to store, manage, and process data in 
    place of local servers or personal computers.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CloudInfrastructure</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="infrId" type="infrastructureIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="infrType" type="infrastructureType" nillable="true" minOccurs="0"/>
			<xsd:element name="infName" type="infrastructureName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infDesc" type="infrastructureDescription" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="infrRev" type="infrastructureRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="infrPty" type="infrastructureParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrRel" type="infrastructureRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="codeProperty">
		<xsd:annotation>
			<xsd:documentation>
    CodeProperty is a compoundAttribute representing an alphanumeric code with the classification of the assigning specification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CodeProperty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:codePropertyAssignmentCode" nillable="true"/>
			<xsd:element name="codeVal" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:element name="txt" type="nonEmptyString"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="comment">
		<xsd:annotation>
			<xsd:documentation>
    Comment is a textual statement about a related item that deals with an issue associated to that item that needs to be addressed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Comment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="cmtId" type="commentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="title" type="commentTitle" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtDate" type="commentDate" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtType" type="commentType" nillable="true" minOccurs="0"/>
			<xsd:element name="priority" type="commentPriority" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="commentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtText" type="commentText" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="cmtAct" type="commentAction" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmtPty" type="commentParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cmtRel" type="commentRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cmt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentAction">
		<xsd:annotation>
			<xsd:documentation>
    CommentAction is a [relationship] that allows to associate a Comment to one or several Actions performed in response to the Comment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CommentAction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="actType" type="commentActionType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="actionRef" type="actionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cmtact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentParty">
		<xsd:annotation>
			<xsd:documentation>
    CommentParty is a [relationship] defining the association between a Comment and a Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CommentParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="role" type="commentPartyRole" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cmtpty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentRelationship">
		<xsd:annotation>
			<xsd:documentation>
    CommentRelationship is a [relationship] that defines the association between two different Comments.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CommentRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="commentRelationshipType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="cmtRef" type="commentRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cmtrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="communicationsNetwork">
		<xsd:annotation>
			<xsd:documentation>
    CommunicationsNetwork is an Infrastructure that represents a number of machines, computers and communication lines that allow the communication between 
    different parties or machines.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CommunicationsNetwork</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="infrId" type="infrastructureIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="infrType" type="infrastructureType" nillable="true" minOccurs="0"/>
			<xsd:element name="infName" type="infrastructureName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infDesc" type="infrastructureDescription" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="infrRev" type="infrastructureRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="infrPty" type="infrastructureParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrRel" type="infrastructureRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyDefinition">
		<xsd:annotation>
			<xsd:documentation>
    CompetencyDefinition is a [class] that defines measurable or observable knowledge, skills, and attitudes necessary for successful performance by a person 
    in a given context.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CompetencyDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="compId" type="competencyDefinitionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="compName" type="competencyDefinitionName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="compType" type="competencyDefinitionType" nillable="true" minOccurs="0"/>
			<xsd:element name="compDescr" type="competencyDefinitionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="compDefRel" type="competencyDefinitionRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="compFrwks" type="competencyFrameworkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="compdef[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyDefinitionRelationship">
		<xsd:annotation>
			<xsd:documentation>
    CompetencyDefinitionRelationship is a [relationship] where one CompetencyDefinition relates to another CompetencyDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CompetencyDefinitionRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="competencyDefinitionRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="compDefRef" type="competencyDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="compdrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyFramework">
		<xsd:annotation>
			<xsd:documentation>
    CompetencyFramework is a [class] that specifies the context within which a CompetencyFrameworkItem is defined.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CompetencyFramework</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="frwkName" type="competencyFrameworkName" maxOccurs="unbounded"/>
			<xsd:element name="frwkDescr" type="competencyFrameworkDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="compfrwk[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="compliesWith">
		<xsd:annotation>
			<xsd:documentation>
    CompliesWith is a [relationship] that allows to associate an item with the PoliciesAndRegulations with which it complies.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CompliesWith</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="polRegRef" type="policiesAndRegulationsRef" minOccurs="0"/>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="compw[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="computerNetwork">
		<xsd:annotation>
			<xsd:documentation>
    ComputerNetwork is an Infrastructure that represents a number of interconnected computers, irrespectively of their location.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ComputerNetwork</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="infrId" type="infrastructureIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="infrType" type="infrastructureType" nillable="true" minOccurs="0"/>
			<xsd:element name="infName" type="infrastructureName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infDesc" type="infrastructureDescription" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="infrRev" type="infrastructureRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="infrPty" type="infrastructureParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrRel" type="infrastructureRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionInstance">
		<xsd:annotation>
			<xsd:documentation>
    ConditionInstance is a [class] that defines an individual concept or object having the characteristics of a generic ConditionType.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ConditionInstance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="instId" type="conditionInstanceIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="instName" type="conditionInstanceName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="instDescr" type="conditionInstanceDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="condi[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionType">
		<xsd:annotation>
			<xsd:documentation>
    ConditionType is a [class] that defines a concept or an object that needs to be included in applicability statements where the concept or object is not 
    already represented in the data model.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ConditionType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="condName" type="conditionTypeName" maxOccurs="unbounded"/>
			<xsd:element name="condDescr" type="conditionTypeDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="condInst" type="conditionInstance" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="condMemb" type="conditionTypeAssertMember" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="condtype[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionTypeAssertMember">
		<xsd:annotation>
			<xsd:documentation>
    ConditionTypeAssertMember is a [class] that defines a member for a given ConditionType which can be mapped to a Boolean expression and be evaluated to be 
    either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ConditionTypeAssertMember</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="membName" type="conditionTypeAssertMemberName" maxOccurs="unbounded"/>
			<xsd:element name="membDescr" type="conditionTypeAssertMemberDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="assrtVal" type="conditionTypeAssertMemberAssertValue" nillable="true" minOccurs="0"/>
			<xsd:element name="valCompOp" type="conditionTypeAssertMemberAssertValueComparisonOperator" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="condm[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consequence">
		<xsd:annotation>
			<xsd:documentation>
    Consequence is a class providing information about the consequences of an Event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Consequence</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="consId" type="consequenceIdentifier"/>
			<xsd:element name="consType" type="consequenceType" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="consequenceDescription" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="consq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumableItem">
		<xsd:annotation>
			<xsd:documentation>
    ConsumableItem is a supply item that is consumed and cannot be reused.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ConsumableItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="itemId" type="consumableItemIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="name" type="consumableItemName" nillable="true" minOccurs="0"/>
			<xsd:element name="consType" type="consumableType" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="consumableItemDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="rskFactor" type="consumableItemRiskFactor" nillable="true" minOccurs="0"/>
			<xsd:element name="rskDescr" type="consumableItemRiskDescription" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="consi[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumption">
		<xsd:annotation>
			<xsd:documentation>
    Consumption is a [relationship] that defines the Product(s) that have been consumed by a SerializedProductVariant as part of an operational period, 
    movement or movement leg.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Consumption</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="consId" type="consumptionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="consType" type="consumptionType" nillable="true" minOccurs="0"/>
			<xsd:element name="consValue" type="consumptionValue" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="consiRef" type="consumableItemRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="consp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containedMaterial">
		<xsd:annotation>
			<xsd:documentation>
    ContainedMaterial is a [relationship] that allows to associate an item to the amount of material that it contains.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContainedMaterial</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="quantity" type="quantityOfContainedMaterial" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="matRef" type="materialRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="contMat[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containedSubstance">
		<xsd:annotation>
			<xsd:documentation>
    ContainedSubstance is a [relationship] that associates a SubstanceContainingItem with a contained SubstanceDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContainedSubstance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="contQty" type="containedSubstanceQuantity" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="subsRef" type="substanceDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cosubs[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containerAsDesigned">
		<xsd:annotation>
			<xsd:documentation>
    ContainerAsDesigned is a HardwarePartAsDesigned representing a vessel for the storage or transport of items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContainerAsDesigned</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="partName" type="partName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="exportControl" type="partExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="majorComp" type="partMajorComponent" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="partDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="type" type="containerAsDesignedType" nillable="true" minOccurs="0"/>
			<xsd:element name="material" type="containerAsDesignedMaterial" nillable="true" minOccurs="0"/>
			<xsd:element name="limit" type="containerAsDesignedPayloadLimitation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reuse" type="containerAsDesignedIsReusable" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="partcd" type="hardwarePartAsDesignedCommerceData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartDsgnData" type="hardwarePartDefinitionDesignData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartSupData" type="hardwarePartDefinitionSupportData" nillable="true" minOccurs="0"/>
			<xsd:element name="partCntrlData" type="partDefinitionControlledItemData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="partsList" type="partDefinitionPartsList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="altPart" type="alternatePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containerPart">
		<xsd:annotation>
			<xsd:documentation>
    ContainerPart is a [relationship] that allows to associate a HardwarePartContainer with one or more HardwarePartAsDesigned that it contains.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContainerPart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="contPartId" type="containerPartIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="quantity" type="containerPartQuantity" nillable="true" minOccurs="0"/>
			<xsd:element name="period" type="containerPartDuring" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="contpart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contract">
		<xsd:annotation>
			<xsd:documentation>
    Contract is a [class] that represents a binding agreement between two or more parties.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Contract</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="contrId" type="contractIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="contrName" type="contractName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrDescr" type="contractDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrSigDate" type="contractSignatureDate" nillable="true" minOccurs="0"/>
			<xsd:element name="contrPeriod" type="contractValidityPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="contrStatus" type="contractStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrType" type="contractType" nillable="true" minOccurs="0"/>
			<xsd:element name="contrValue" type="contractValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:group ref="contractClauseNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="contrPty" type="contractParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrRel" type="contractRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrSubj" type="contractSubject" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="budgtItem" type="budgetingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="contrLabors" type="contractLaborItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgStrs" type="organizationalBreakdownStructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="contr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractClause">
		<xsd:annotation>
			<xsd:documentation>
    ContractClause is a class that represents specific provision included in a Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContractClause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="clauseId" type="contractClauseIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="clauseDescr" type="contractClauseDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="clausePeriod" type="contractClauseValidityPeriod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="clauseRel" type="contractClauseRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="siw" type="itemWarranty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="labRate" type="laborRates" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="budgtItem" type="budgetingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="contrLabors" type="contractLaborItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="contrc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractClauseRelationship">
		<xsd:annotation>
			<xsd:documentation>
    ContractClauseRelationship is a [relationship] where one ContractClause relates to another ContractClause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContractClauseRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="contractClauseRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="contrClauseRef" type="contractClauseRef" minOccurs="0"/>
			<xsd:element name="slacRef" type="serviceLevelAgreementClauseRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="contrcr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractLabor">
		<xsd:annotation>
			<xsd:documentation>
    ContractLabor is a [relationship] that identifies labor specified in the context of the defined Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContractLabor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="laborRate" type="contractLaborRate" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="defComp" type="competencyDefinitionItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="labrate[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractParty">
		<xsd:annotation>
			<xsd:documentation>
    ContractParty is a [relationship] that identifies a Contract stakeholder.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContractParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="ptyRole" type="contractPartyRole"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="legalParty" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="contrpty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractRelationship">
		<xsd:annotation>
			<xsd:documentation>
    ContractRelationship is a [relationship] where one Contract relates to another Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContractRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="contractRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="contrRef" type="contractRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="contrrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractSubject">
		<xsd:annotation>
			<xsd:documentation>
    ContractSubject is a [relationship] that identifies an item which is the subject of the Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContractSubject</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="contrQty" type="contractSubjectQuantity" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="contrItem" type="contractSubjectItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="contritdet[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costBreakdown">
		<xsd:annotation>
			<xsd:documentation>
    CostBreakdown is a class that represents cost concepts associated with a particular purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CostBreakdown</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="costBkdnId" type="costBreakdownIdentifier" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="costBkdnRev" type="costBreakdownRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="costbk[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costBreakdownRevision">
		<xsd:annotation>
			<xsd:documentation>
    CostBreakdownRevision is a class representing an iteration applied to a CostIBreakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CostBreakdownRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="costBreakdownRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="bkdnName" type="costBreakdownName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="bkdnDescr" type="costBreakdownDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="costBreakdownRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="costBreakdownRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="costBreakdownRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="cstBrRvCost" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="costItemRef" type="costItemRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="costbkrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costEntry">
		<xsd:annotation>
			<xsd:documentation>
    CostEntry is a class that represents an individual expense made at a specific date for a specific amount that needs to be recorded for accounting purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CostEntry</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="entryId" type="costEntryIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="entryType" type="costEntryType" nillable="true" minOccurs="0"/>
			<xsd:element name="entryDate" type="costEntryDate" nillable="true" minOccurs="0"/>
			<xsd:element name="entryVal" type="costEntryValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="entryPeriod" type="costEntryPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="entryDescr" type="costEntryDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="ceItem" type="costEntryItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cost[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costItem">
		<xsd:annotation>
			<xsd:documentation>
    CostItem is a class that represents a generic concept used to group individual expenses for accounting or program management purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CostItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="costItemId" type="costItemIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="costItemDescr" type="costItemDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="costEntry" type="costEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="resUsrRef" type="resourceUsageRequestRef" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="costi[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="country">
		<xsd:annotation>
			<xsd:documentation>
    Country is a [class] that represents a self-governing political entity, occupying a particular territory.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Country</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="ctryCode" type="countryIdentifier"/>
			<xsd:element name="ctryName" type="countryName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="ctryExConReg" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="strAddr" type="streetAddress" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="locRels" type="location" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="country[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cuboid">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:Cuboid</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cubLength" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:unit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="cubWidth" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:unit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="cubHeight" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:unit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="cylinder">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:Cylinder</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cylLength" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:unit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="cylDiam" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:unit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="damage">
		<xsd:annotation>
			<xsd:documentation>
    Damage is a harm to an item resulting in loss of value or the impairment of usefulness.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Damage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="damId" type="damageIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="damageDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="severity" type="damageSeverity" nillable="true" minOccurs="0"/>
			<xsd:element name="dmgFamily" type="damageFamily" nillable="true" minOccurs="0"/>
			<xsd:element name="dmgStatus" type="damageStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="estCost" type="damageEstimatedCost" nillable="true" minOccurs="0"/>
			<xsd:element name="color" type="damageColor" nillable="true" minOccurs="0"/>
			<xsd:element name="repStatus" type="damageRepairStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="dmgAct" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="actionRef" type="actionRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="dmgChar" type="damageCharacteristic" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="dmgDefRef" type="damageDefinitionRef" minOccurs="0"/>
			<xsd:element name="damItem" type="damagedItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itemPos" type="positionReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dmg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageAnalysis">
		<xsd:annotation>
			<xsd:documentation>
    DamageAnalysis is an AnalysisActivity that represents the objective for, and outcome of, a damage analysis carried out for the AnalysisCandidateItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DamageAnalysis</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="anlysType" type="analysisActivityType"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="anlysact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageAnalysisRevision">
		<xsd:annotation>
			<xsd:documentation>
    DamageAnalysisRevision is an AnalysisActivityRevision representing an iteration applied to a DamageAnalysis.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DamageAnalysisRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="analysisActivityRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="anlysDcsn" type="analysisActivityDecision" nillable="true" minOccurs="0"/>
			<xsd:element name="dcsnRtnle" type="analysisActivityDecisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anlysDescr" type="analysisActivityDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anlysObj" type="analysisActivityObjective" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anlysMthd" type="analysisActivityMethod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anlysRslt" type="analysisActivityResult" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="statusDescr" type="analysisActivityStatusDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="analysisActivityRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="analysisActivityRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="analysisActivityRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="dmgDef" type="damageDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="anlysrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageCharacteristic">
		<xsd:annotation>
			<xsd:documentation>
    DamageCharacteristic is a [class] that allows to document the characteristics of a Damage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DamageCharacteristic</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="charId" type="damageCharacteristicIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="damType" type="damageCharacteristicType" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="damageCharacteristicDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="dim" type="damageDimensions" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dmgchar[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageDefinition">
		<xsd:annotation>
			<xsd:documentation>
    DamageDefinition is a [class] that represents a loss or reduction of functionality due to external causes or use outside specified limits. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DamageDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="dmgName" type="damageDefinitionName" maxOccurs="unbounded"/>
			<xsd:element name="dmgFmly" type="damageDefinitionFamily" nillable="true" minOccurs="0"/>
			<xsd:element name="dmgDescr" type="damageDefinitionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="dmgDefCause" type="damageDefinitionCause" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmgDefImpct" type="damageDefinitionImpact" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dmgd[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageDefinitionCause">
		<xsd:annotation>
			<xsd:documentation>
    DamageDefinitionCause is a [relationship] where a DamageDefinition relates to a SpecialEventDefinition that in some way is associated with the 
    DamageDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DamageDefinitionCause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="spEvDefRef" type="specialEventDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dmgdcse[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageDefinitionImpact">
		<xsd:annotation>
			<xsd:documentation>
    DamageDefinitionImpact is a [relationship] that defines a consequence resulting from the identified DamageDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DamageDefinitionImpact</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="impctRo" type="damageDefinitionImpactRatio" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fModeRef" type="failureModeRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dmgdimpct[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataRequestByClassName">
		<xsd:annotation>
			<xsd:documentation>
    DataRequestByClassName is a [class] that allows an exchange party to request a specific data set by using the class name
    

   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DataRequestByClassName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="datareq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataRequestByIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    DataRequestByIdentifier is a [class] that allows an exchange party to request a specific data set by using one identifier.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DataRequestByIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="datareq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataRequestByUseCaseName">
		<xsd:annotation>
			<xsd:documentation>
    DataRequestByUseCaseName is a [class] that allows an exchange party to request a specific data set by using the usecase name
    

   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DataRequestByUseCaseName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="datareq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataSetAsDesigned">
		<xsd:annotation>
			<xsd:documentation>
    DataSetAsDesigned is a class representing a data structure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DataSetAsDesigned</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="partName" type="partName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="dataSetAsDesignedDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="dsasType" type="dataSetAsDesignedType" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="partcd" type="hardwarePartAsDesignedCommerceData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartDsgnData" type="hardwarePartDefinitionDesignData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartSupData" type="hardwarePartDefinitionSupportData" nillable="true" minOccurs="0"/>
			<xsd:element name="partCntrlData" type="partDefinitionControlledItemData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="partsList" type="partDefinitionPartsList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="altPart" type="alternatePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dataRel" type="dataSetAssociatedWith" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataSetAsReleased">
		<xsd:annotation>
			<xsd:documentation>
    DataSetAsReleased is a class representing a set of actual data that are structured as a DataSetAsDesigned.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DataSetAsReleased</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partDefinitionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="swRelId" type="softwarePartAsReleasedIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="relDate" type="softwarePartAsReleasedDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="chkSum" type="softwarePartAsReleasedChecksum" nillable="true" minOccurs="0"/>
			<xsd:element name="relSize" type="softwarePartAsReleasedSize" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="softwarePartAsReleasedDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dsNotes" type="dataSetAsReleasedNotes" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="reldataass" type="releasedDataSetAssociatedWith" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swos" type="softwareOS" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swpl" type="softwarePlatform" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swPartRef" type="softwarePartDefinitionRef" minOccurs="0"/>
			<xsd:element name="dataPartRef" type="dataSetAsDesignedRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infItem" type="infrastructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="relswpart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataSetAssociatedWith">
		<xsd:annotation>
			<xsd:documentation>
    DataSetAssociatedWith is a [relationship] that allows to associate a DataSetAsDesigned to a PartAsDesigned
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DataSetAssociatedWith</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="dataAsoc" type="dataAssociatedWithType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="partRef" type="partDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="datarel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="datedClassification">
		<xsd:annotation>
			<xsd:documentation>
    DatedClassification is a [compoundAttribute] that represents a classification in conjunction with its recording date.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DatedClassification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="nonEmptyString" nillable="true"/>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dateRange">
		<xsd:annotation>
			<xsd:documentation>
    DateRange is a [compoundAttribute] that identifies an interval of dates.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DateRange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dateTimeRange">
		<xsd:annotation>
			<xsd:documentation>
    DateTimeRange is a [compoundAttribute] that identifies an interval of date and times.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DateTimeRange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dateTimeType">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:DateTimeType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="dateType">
		<xsd:annotation>
			<xsd:documentation>
    DateType is an S-Series IPS specifications defined [primitive&gt; that represent calendar dates. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DateType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="decisionTreeTemplate">
		<xsd:annotation>
			<xsd:documentation>
    DecisionTreeTemplate is a [class] that enables the representation of a decision process including a set of defined steps and binary decisions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DecisionTreeTemplate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="dcsnTmplId" type="decisionTreeTemplateIdentifier" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dcsnt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="degradationMechanism">
		<xsd:annotation>
			<xsd:documentation>
    DegradationMechanism is a class that represents a physical, chemical or other process that ultimately leads to a damage or failure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DegradationMechanism</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="degrMechName" type="degradationMechanismName" maxOccurs="unbounded"/>
			<xsd:element name="degrMechDescr" type="degradationMechanismDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="degrmech[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="degradationMechanismAcceptanceCriteria">
		<xsd:annotation>
			<xsd:documentation>
    DegradationMechanismAcceptanceCriteria is a class that represents the acceptable degradation that can be applied to a feature so that the part remains 
    operational.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DegradationMechanismAcceptanceCriteria</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="accptCritId" type="partFeatureDegradationMechanismAcceptanceCriteriaIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="accptCritDescr" type="partFeatureDegradationMechanismAcceptanceCriteriaDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="accptCritVal" type="partFeatureDegradationMechanismAcceptanceCriteriaAssertValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="valueCompOp" type="partFeatureDegradationMechanismAcceptanceCriteriaComparisonOperator" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="degrMechRef" type="degradationMechanismRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="feataccptcrit[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="derivedChangeRequestRequirement">
		<xsd:annotation>
			<xsd:documentation>
    DerivedChangeRequestRequirement is a [relationship] that allows to associate a Requirement or more of them to an existing ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DerivedChangeRequestRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="crReq" type="requirementRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dercrreq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="descriptorType">
		<xsd:annotation>
			<xsd:documentation>
    DescriptorType is an S-Series IPS specifications defined [primitive] that represents any form of textual data (free form) along with its core 
    characterizations. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DescriptorType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMeanCapability">
		<xsd:annotation>
			<xsd:documentation>
    DetectionMeanCapability is a class that identifies the capability to detect a failure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DetectionMeanCapability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="capId" type="detectionMeanCapabilityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="detectionMeanCapabilityDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="capType" type="detectionMeanCapabilityCapabilityType" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="detmec" type="detectionMechanism" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="detmecap[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMechanism">
		<xsd:annotation>
			<xsd:documentation>
    DetectionMechanism is a class that allows to define the mechanism by means of which a failure is detected.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DetectionMechanism</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="detMecid" type="detectionMechanismIdentifier"/>
			<xsd:element name="descr" type="detectionMechanismDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="mecType" type="detectionMechanismType" nillable="true" minOccurs="0"/>
			<xsd:element name="present" type="detectionMechanismPresentation" nillable="true" minOccurs="0"/>
			<xsd:element name="rate" type="detectionMechanismFalseAlarmRate" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fd" type="failureDetection" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="detmec[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="digitalFile">
		<xsd:annotation>
			<xsd:documentation>
    DigitalFile is a [class] that provides the identification of data stored on an electronic device that can be interpreted by a computer.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DigitalFile</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="filePath" type="digitalFileLocator" maxOccurs="unbounded"/>
			<xsd:element name="fileType" type="digitalFileType" nillable="true" minOccurs="0"/>
			<xsd:element name="fileCont" type="digitalFileContentClass" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fileDescr" type="digitalFileContentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fileRepr" type="digitalFileRepresentation" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fileRef" type="digitalFileReference" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="file[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="digitalFileReference">
		<xsd:annotation>
			<xsd:documentation>
    DigitalFileReference is a [relationship] that allows a DigitalFile to reference a DigitalFileReferencedItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DigitalFileReference</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="refJust" type="digitalFileReferenceJustification" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="refItem" type="digitalFileReferencedItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fileref[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="discreteTimeLimit">
		<xsd:annotation>
			<xsd:documentation>
    DiscreteTimeLimit is a TimeLimit that is distinct, where its next possible occurrence cannot be scheduled.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DiscreteTimeLimit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="limDescr" type="timeLimitDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="limHarmnz" type="timeLimitHarmonizationIndicator" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="thld" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:group ref="thresholdDefinitionNonAbstractClasses"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="trig" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:group ref="thresholdDefinitionNonAbstractClasses"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="sampls" type="samplingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="timelim[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalLocation">
		<xsd:annotation>
			<xsd:documentation>
    DisposalLocation is a [relationship] that allows to associate the different locations involved in a DisposalRequirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DisposalLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="dispLocRole" type="disposalLocationRole" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="dispSite" type="disposalSite" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="disploc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalRequirement">
		<xsd:annotation>
			<xsd:documentation>
    DisposalRequirement is a Requirement to proceed with the disposal of an item, waste or hazardous material.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DisposalRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispReqWhy" type="disposalRequirementReason" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispReqDue" type="disposalRequirementDueDate" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqHow" type="disposalRequirementMethod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispReqJust" type="disposalRequirementJustification" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="unaccept" type="unacceptableCondition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="dispLoc" type="disposalLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispTransReq" type="disposalTransportRequirement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPCEfy" type="effectiveOnProductConfiguration" nillable="true" minOccurs="0"/>
			<xsd:element name="dispOrg" type="involvedDisposalOrganization" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispPol" type="requiredDisposalPolicy" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<xsd:element name="wcRef" type="warrantyClaimRef" minOccurs="0"/>
			<xsd:element name="dispReqCtxt" type="disposalRequirementContext" nillable="true" minOccurs="0"/>
			<xsd:element name="wasteItem" type="wasteItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalTransportRequirement">
		<xsd:annotation>
			<xsd:documentation>
    DisposalTransportRequirement is a [relationship] that a allows to associate a DisposalRequirement with a TransportRequirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DisposalTransportRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="transReqRef" type="transportRequirementRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="disptrreq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="document">
		<xsd:annotation>
			<xsd:documentation>
    Document is a [class] that represents a compiled set of information that serves a purpose. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Document</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="docIss" type="documentIssue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentIssue">
		<xsd:annotation>
			<xsd:documentation>
    DocumentIssue is a [class] that represents a specific release of a Document
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DocumentIssue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dociss[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentParty">
		<xsd:annotation>
			<xsd:documentation>
    DocumentParty is a [relationship] where a Document relates to a DocumentStakeholderParty that in some way is associated with the Document.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DocumentParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="ptyRole" type="documentPartyRole"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="documentStakeholderParty" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="docp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="downTimePeriod">
		<xsd:annotation>
			<xsd:documentation>
    DownTimePeriod is a class representing a planned or actual downtime for a SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DownTimePeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="downId" type="downTimeIdentifier"/>
			<xsd:element name="downPeriod" type="downTimePeriodValue" nillable="true" minOccurs="0"/>
			<xsd:element name="downReason" type="downTimePeriodReason" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="downTimeStatus" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dwntp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="effectiveOnProductConfiguration">
		<xsd:annotation>
			<xsd:documentation>
    EffectiveOnProductConfiguration is a [relationship] that identifies that a EffectiveOnProductConfigurationItem, included in the Breakdown for the overall 
    Product, is effective in the associated AllowedProductConfigurationItem. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EffectiveOnProductConfiguration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="efyRange" type="applicableSerialNumberRange" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="nonConf" type="nonConformanceData" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="allwdPCItem" type="allowedProductConfigurationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="iipc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environment">
		<xsd:annotation>
			<xsd:documentation>
    Environment is a class that represents the actual environment in which the Product operation or maintenance takes place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Environment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="envId" type="environmentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="name" type="environmentName" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="environmentDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="envType" type="environmentType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envCond" type="environmentCondition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="envRev" type="environmentRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="envRel" type="environmentRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="env[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinition">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentDefinition is a [class] that specifies the circumstances, objects, events and/or conditions by which something can be surrounded and that 
    influence the performance of an associated item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EnvironmentDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="envId" type="environmentDefinitionIdentifier" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="envDefRev" type="environmentDefinitionRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="envDefRel" type="environmentDefinitionRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="envdef[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionCharacteristic">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentDefinitionCharacteristic is a [class] that represents a measurable or observable characteristic  for a circumstance, object, event or condition 
    that is significant to the EnvironmentDefinition. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EnvironmentDefinitionCharacteristic</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="charName" type="environmentDefinitionCharacteristicName" maxOccurs="unbounded"/>
			<xsd:element name="charVal" type="environmentDefinitionCharacteristicValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="valCompOp" type="environmentDefinitionCharacteristicValueComparisonOperator" nillable="true" minOccurs="0"/>
			<xsd:element name="charDescr" type="environmentDefinitionCharacteristicDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="envdch[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionRelationship">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentDefinitionRelationship is a [relationship] where one EnvironmentDefinition relates to another EnvironmentDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EnvironmentDefinitionRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="environmentDefinitionRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="envDefRef" type="environmentDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="envdrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionRevision">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentDefinitionRevision is a [class] representing an iteration applied to an EnvironmentDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EnvironmentDefinitionRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="environmentDefinitionRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="envName" type="environmentDefinitionName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envDescr" type="environmentDefinitionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="environmentDefinitionRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="environmentDefinitionRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="environmentDefinitionRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="envDefChar" type="environmentDefinitionCharacteristic" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="envdrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRelationship">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentRelationship is a [relationship] that allows associations between two different Environments to be defined.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EnvironmentRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="environmentRelationshipType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="envRef" type="environmentRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="envrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRevision">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentRevision is a [class] representing an iteration applied to an Environment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EnvironmentRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="envRevId" type="environmentRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="rationale" type="environmentRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revStatus" type="environmentRevisionStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="revDate" type="environmentRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="envRevType" type="environmentRevisionType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="envRevVal" type="environmentRevisionValidity" nillable="true" minOccurs="0"/>
			<xsd:element name="envRevCon" type="environmentRevisionCondition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="envDefRevRef" type="environmentDefinitionRevisionRef" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="envrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="equipmentOperation">
		<xsd:annotation>
			<xsd:documentation>
    EquipmentOperation is a [relationship] that defines which Party has operated a SerializedHardwarePart during a specific time period.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EquipmentOperation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="period" type="equipmentOperatingPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="eqop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="equipmentOwner">
		<xsd:annotation>
			<xsd:documentation>
    EquipmentOwner is a [relationship] defining who and to what extent is the equipment owner during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EquipmentOwner</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="ownPeriod" type="equipmentOwnershipPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="eqown[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByAssertionOfClassInstance">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationByAssertionOfClassInstance is an EvaluationCriteria that identifies a class instance to be used as an assert item and be mapped to a Boolean 
    expression which can be evaluated to be either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EvaluationByAssertionOfClassInstance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="assrtRole" type="evaluationByAssertionRole" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="assrtItem" type="classInstanceAssertItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByAssertionOfCondition">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationByAssertionOfCondition is an EvaluationCriteria that identifies a combination of a defined condition and a defined value to be used as an assert 
    item and be mapped to a Boolean expression which can be evaluated to be either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EvaluationByAssertionOfCondition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="condMembRef" type="conditionTypeAssertMemberRef" minOccurs="0"/>
			<xsd:element name="condDef" type="conditionDefinitionItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByAssertionOfDateRange">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationByAssertionOfDateRange is an EvaluationCriteria that specifies a date range to be asserted and be mapped to a Boolean expression which can be 
    evaluated to be either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EvaluationByAssertionOfDateRange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="applicPeriod" type="applicabilityDateRange" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByAssertionOfSerializedItems">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationByAssertionOfSerializedItems is an EvaluationCriteria that identifies a class instance together with an associated serial number range to be used 
    as an assert item and be mapped to a Boolean expression which can be evaluated to be either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EvaluationByAssertionOfSerializedItems</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="snRange" type="applicableSerialNumberRange" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="assrtItem" type="serializedAssertItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByNestedApplicabilityStatement">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationByNestedApplicabilityStatement is an EvaluationCriteria that enables an ApplicabilityStatement to be reused as part of this EvaluationCriteria.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EvaluationByNestedApplicabilityStatement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="applicDefRef" type="applicabilityStatementRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByNestedExpression">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationByNestedExpression is an EvaluationCriteria that defines a Boolean expression between additional EvaluationCriteria that can be evaluated to 
    either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EvaluationByNestedExpression</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="expevRef" type="expressionEvaluationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="event">
		<xsd:annotation>
			<xsd:documentation>
    Event is an important happening or occurrence at a specific point in time that requires to be documented or recorded.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Event</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="eventId" type="eventIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="evTime" type="eventOcurrenceDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="evGroup" type="eventGroup" nillable="true" minOccurs="0"/>
			<xsd:element name="severity" type="eventSeverity" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="eventDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="eventConfirmedStatus" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="evAct" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="actionRef" type="actionRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="consq" type="consequence" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="evabe" type="eventAffectedBreakdownElement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evEx" type="eventExplanation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evr" type="eventRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evRelItem" type="eventRelationshipItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evntRep" type="eventReporter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTPRef" type="downTimePeriodRef" minOccurs="0"/>
			<xsd:element name="logeRef" type="logBookEntryRef" minOccurs="0"/>
			<xsd:element name="pupRef" type="productUsagePhaseRef" minOccurs="0"/>
			<xsd:element name="locItem" type="locationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="ev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventAffectedBreakdownElement">
		<xsd:annotation>
			<xsd:documentation>
    EventAffectedBreakdownElement is a [relationship] that allows to associate an Event to the BreakdownElements affected by it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EventAffectedBreakdownElement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="beRef" type="breakdownElementRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="evabe[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventExplanation">
		<xsd:annotation>
			<xsd:documentation>
    EventExplanation is a [relationship] that allows to associate an Event to the ExplanatoryFactors that explain it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EventExplanation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="expfRef" type="explanatoryFactorRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="evex[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventRelationship">
		<xsd:annotation>
			<xsd:documentation>
    EventRelationship is a [relationship] describing the association between two different events.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EventRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="eventRelationshipType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="evRef" type="eventRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="evr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventRelationshipItem">
		<xsd:annotation>
			<xsd:documentation>
    EventRelationshipItem is a [relationship] that allows to associate an Event to an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EventRelationshipItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="evItemRole" type="eventRelationshipItemRole" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="evItem" type="eventItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="evrelitem[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventReporter">
		<xsd:annotation>
			<xsd:documentation>
    EventReporter is a [relationship] that permits to associate an event to the Party that has reported that Event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EventReporter</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="repTime" type="eventReporterDateTime" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="evntrep[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventThresholdDefinition">
		<xsd:annotation>
			<xsd:documentation>
    EventThresholdDefinition is a ThresholdDefinition that is driven by occurrences of related TimeLimitEventItems.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EventThresholdDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="nrOfEvnts" type="eventThresholdNumberOfEventOccurrences" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="evntItem" type="timeLimitEventItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="thres[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="explanatoryFactor">
		<xsd:annotation>
			<xsd:documentation>
    ExplanatoryFactor is a class that provides information about the factor that caused an Event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ExplanatoryFactor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="efId" type="explanatoryFactorIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="name" type="explanatoryFactorName" nillable="true" minOccurs="0"/>
			<xsd:element name="org" type="explanatoryFactorOrganization" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="explanatoryFactorDescription" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="expf[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlLicense">
		<xsd:annotation>
			<xsd:documentation>
    ExportControlLicense is a [class] representing the authorization to one or more parties to export item(s) under the terms of an ExportControlRegulation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ExportControlLicense</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="licId" type="exportControlLicenseIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="licType" type="exportControlLicenseType" nillable="true" minOccurs="0"/>
			<xsd:element name="licDescr" type="exportControlLicenseDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="licPurp" type="exportControlLicensePurpose" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="expLicItem" type="exportControlLicenseItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="expContrPty" type="exportControlParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="exconli[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlLicenseItem">
		<xsd:annotation>
			<xsd:documentation>
    ExportControlLicenseItem is a [relationship] that associates an ExportControlLicense to the export controlled items to which this license applies.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ExportControlLicenseItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="licItemId" type="exportControlLicenseItemidentifier" maxOccurs="unbounded"/>
			<xsd:element name="licItemQty" type="exportControlLicenseItemQuantity" nillable="true" minOccurs="0"/>
			<xsd:element name="licItemCat" type="exportControlLicenseItemCategory" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="expContrItem" type="exportControlledItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="exconliit[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlParty">
		<xsd:annotation>
			<xsd:documentation>
    ExportControlParty is a [relationship] that associates an ExportControlLicense to the parties to which it applies or that control it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ExportControlParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="ecPtyId" type="exportControlPartyIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="ecPtyRole" type="exportControlPartyRole" nillable="true" minOccurs="0"/>
			<xsd:element name="ecPtyCode" type="exportControlPartyClearanceCode" nillable="true" minOccurs="0"/>
			<xsd:element name="ecPtyLvl" type="exportControlPartyClearanceLevel" nillable="true" minOccurs="0"/>
			<xsd:element name="ecPtylDate" type="exportControlPartyClearanceDate" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="exconpty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlRegulation">
		<xsd:annotation>
			<xsd:documentation>
    ExportControlRegulation is a legal document that defines export control restrictions to one or several items or item categories.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ExportControlRegulation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="porPeriod" type="policyOrRegulationPeriod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="legalCode" type="exportControlRegulationLegalCode" nillable="true" minOccurs="0"/>
			<xsd:element name="effectivity" type="policiesAndRegulationsEffectivity" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pecCode" type="exportControlRegulationtPeculiarityCode" nillable="true" minOccurs="0"/>
			<xsd:element name="grp" type="exportControlRequirementGrouping" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="subjPol" type="subjectOfPoliciesAndRegulations" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="exConReqCo" type="exportControlRequirementAppliedToCountry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlRequirementAppliedToCountry">
		<xsd:annotation>
			<xsd:documentation>
    ExportControlRequirementAppliedToCountry is a [relationship] that defines to which countries an ExportControlRegulation is applied.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ExportControlRequirementAppliedToCountry</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="appFor" type="exportControlRequirementAppliedToCountryDuring" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="exportControlRequirementAppliedToCountryDescription" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="countryRef" type="countryRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="exconreqco[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="expressionEvaluation">
		<xsd:annotation>
			<xsd:documentation>
    ExpressionEvaluation is a Boolean expression that can be evaluated to be either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ExpressionEvaluation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="expEvalId" type="expressionEvaluationIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="expressionEvaluationDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evalDates" type="expressionEvaluationDateRange" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:group ref="evaluationCriteriaNonAbstractClasses" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="expev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="externalDocument">
		<xsd:annotation>
			<xsd:documentation>
    ExternalDocument is a specialization of class Document, and represents all documents that do not have a specialied class.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ExternalDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="exDocType" type="externalDocumentType" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facility">
		<xsd:annotation>
			<xsd:documentation>
    Facility is a [class]that represents a physically limited infrastructure which exists, or is intended to be built or installed, and is established to serve 
    a particular purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Facility</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="facInfr" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="infrstrRef" type="infrastructureRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="facSuppEq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="suppeqRef" type="supportEquipmentRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fcltyLoc" type="facilityLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyOper" type="facilityOperator" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="facOwn" type="facilityOwner" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyRel" type="facilityRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fclty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityLocation">
		<xsd:annotation>
			<xsd:documentation>
    FacilityLocation is a [relationship] that defines the past, present or future Location for the Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FacilityLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="fcltyLocId" type="facilityLocationIdentifier"/>
			<xsd:element name="locPeriod" type="facilityLocationPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="locItem" type="locationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fcltyloc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityOperator">
		<xsd:annotation>
			<xsd:documentation>
    FacilityOperator is a [relationship] that identifies the party responsible for running the Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FacilityOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="operPeriod" type="facilityOperatorPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="operator" type="facilityOperatorItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fcltyop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityOwner">
		<xsd:annotation>
			<xsd:documentation>
    FacilityOwner is a [relationship] that defines the total or partial ownership of a facility by a specific party during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FacilityOwner</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="ownFor" type="facilityOwnedDuring" nillable="true" minOccurs="0"/>
			<xsd:element name="ratio" type="facilityOwnershipRatio" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="facown[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityRelationship">
		<xsd:annotation>
			<xsd:documentation>
    FacilityRelationship is a [relationship] where one Facility relates to another Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FacilityRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="facilityRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="facilityRef" type="facilityRef" minOccurs="0"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fcltyrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureDetection">
		<xsd:annotation>
			<xsd:documentation>
    FailureDetection is a [relationship] that allows to define which DetectionMechanism is capable of detecting a specific Failure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FailureDetection</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="rate" type="failureDetectionRate" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fail" type="failure" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fd[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureMode">
		<xsd:annotation>
			<xsd:documentation>
    FailureMode is a [class] that defines a functional consequence of an unacceptable state of the AnalysisActivityItem. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FailureMode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="fModeId" type="failureModeIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="fModeName" type="failureModeName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fModeDescr" type="failureModeDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fModeRo" type="failureModeRatio" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="fModeCause" type="failureModeCause" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fModeComp" type="failureModeCompensatingProvision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fModeEfct" type="failureModeEffect" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fmode[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeAnalysis">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeAnalysis is a [class] that represents failure modes, effects and criticality identified for the associated AnalysisActivityItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FailureModeAnalysis</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="anlysType" type="analysisActivityType"/>
			<xsd:element name="fmeaType" type="failureModeAnalysisType" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="anlysact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeAnalysisRevision">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeAnalysisRevision is a [class] representing an iteration applied to a FailureModeAnalysis.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FailureModeAnalysisRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="analysisActivityRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="anlysDcsn" type="analysisActivityDecision" nillable="true" minOccurs="0"/>
			<xsd:element name="dcsnRtnle" type="analysisActivityDecisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anlysDescr" type="analysisActivityDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anlysObj" type="analysisActivityObjective" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anlysMthd" type="analysisActivityMethod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="anlysRslt" type="analysisActivityResult" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="statusDescr" type="analysisActivityStatusDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="analysisActivityRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="analysisActivityRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="analysisActivityRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="fMode" type="failureMode" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="anlysrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCause">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeCause is a [class] that specifies the physical or chemical process(es) that is the reason for the FailureMode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FailureModeCause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="causeId" type="failureModeCauseIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="causeDescr" type="failureModeCauseDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="causeRo" type="failureModeCauseRatio" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="causeRel" type="failureModeCauseItemRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fmcse[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCauseItemRelationship">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeCauseItemRelationship is a [relationship] where a FailureModeCause relates to the FailureModeCauseItem that in some way is associated with the 
    FailureModeCause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FailureModeCauseItemRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="failureModeCauseItemRelationshipType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="causeItem" type="failureModeCauseItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fmcserel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCompensatingProvision">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeCompensatingProvision is a [class&gt; that represents actions taken to negate or reduce the effect of a failure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FailureModeCompensatingProvision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="compId" type="failureModeCompensatingProvisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="compCat" type="failureModeCompensatingProvisionCategory" nillable="true" minOccurs="0"/>
			<xsd:element name="compDescr" type="failureModeCompensatingProvisionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fmodecpr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeEffect">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeEffect is a [class] that defines the consequences of an identified FailureMode on the operation, function, or status for the referred item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FailureModeEffect</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="efctName" type="failureModeEffectName" maxOccurs="unbounded"/>
			<xsd:element name="efctLevel" type="failureModeEffectLevel" nillable="true" minOccurs="0"/>
			<xsd:element name="efctDescr" type="failureModeEffectDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="efctCrity" type="failureModeCriticality" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="efctRel" type="failureModeEffectItemRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fmefct[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeEffectItemRelationship">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeEffectItemRelationship is a [relationship] where a FailureModeEffect relates to the FailureModeEffectItem that is affected by the FailureMode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FailureModeEffectItemRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="efctItem" type="failureModeEffectItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="efctrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fault">
		<xsd:annotation>
			<xsd:documentation>
    Fault represents an unidentified anomalous behavior that occurred on a specific item at a specific date.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Fault</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="faultId" type="faultIdentifier"/>
			<xsd:element name="detDate" type="faultDetectedDate" nillable="true" minOccurs="0"/>
			<xsd:element name="defToDate" type="faultDeferredToDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="faultStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="fixedDate" type="faultFixedDate" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:group ref="faultSymptomNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fltcau" type="faultCause" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="eqflt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="faultCause">
		<xsd:annotation>
			<xsd:documentation>
    FaultCause is a [relationship] that allows to associate a Fault to its underlying cause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FaultCause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fail" type="failure" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fltcau[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="faultSymptom">
		<xsd:annotation>
			<xsd:documentation>
    FaultSymptom is a [class] that represents an indication of the existence of a Fault.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FaultSymptom</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="sympId" type="faultSymptomIdentifier"/>
			<xsd:element name="sympTime" type="faultSymptomDateTime" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="det" type="detector" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fltsym[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleet">
		<xsd:annotation>
			<xsd:documentation>
    Fleet is a [class] representing a group of SerializedProductVariants that move together, are engaged in the same activity, belong to a same owner or are 
    operated by a same organization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Fleet</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="fltFltReq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="fleetReqRef" type="fleetRequirementRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fltbase" type="fleetBasedAt" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltOp" type="fleetOperatedBy" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltOpLoc" type="fleetOperatesAtLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltRel" type="fleetRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltTskLst" type="fleetTaskList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="traass" type="transportingAsset" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="flt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetBasedAt">
		<xsd:annotation>
			<xsd:documentation>
    FleetBasedAt is a [relationship] that indicates the location at which as Fleet is based at a specific point in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FleetBasedAt</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="basedFor" type="fleetBasedAtDuring" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="opBaseRef" type="operatingBaseRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fltbase[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetOperatedBy">
		<xsd:annotation>
			<xsd:documentation>
    FleetOperatedBy is a [relationship] that allows to assign an Operator to a Fleet during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FleetOperatedBy</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="fleetOpFor" type="fleetOperatedByDuring" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fleetOp" type="fleetOperator" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fltop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetOperatesAtLocation">
		<xsd:annotation>
			<xsd:documentation>
    FleetOperatesAtLocation is a [relationship] that indicates the location at which as Fleet operates at a specific point in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FleetOperatesAtLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="atLoc" type="fleetOperatesAtLocationDuring" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fltoploc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetPlanning">
		<xsd:annotation>
			<xsd:documentation>
    FleetPlanning is a class representing the planned usage of a fleet during a specified period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FleetPlanning</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="planId" type="fleetPlanningIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="period" type="fleetPlanningPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="fleetPlanningStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="fleetPlanningDescription" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="fltplFleetReq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="fleetReqRef" type="fleetRequirementRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fltpl[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetRelationship">
		<xsd:annotation>
			<xsd:documentation>
    FleetRelationship is a [relationship] that indicates how two Fleets are related with each other.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FleetRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="fleetRelationshipType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fleetRef" type="fleetRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fltrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetRequirement">
		<xsd:annotation>
			<xsd:documentation>
    FleetRequirement is a Requirement (need) that a fleet must comply with.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FleetRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fltReqAvail" type="fleetRequirementAvailability" nillable="true" minOccurs="0"/>
			<xsd:element name="minFltSize" type="fleetRequirementMinimumFleetSize" nillable="true" minOccurs="0"/>
			<xsd:element name="reqUse" type="fleetRequirementUsage" nillable="true" minOccurs="0"/>
			<xsd:element name="reqLimit" type="fleetRequirementUsageLimitation" nillable="true" minOccurs="0"/>
			<xsd:element name="fltReqDate" type="fleetRequirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="fltReqPeriod" type="fleetRequirementPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="reqflr" type="requiredFleetRole" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTask">
		<xsd:annotation>
			<xsd:documentation>
    FleetTask is a  planned activity to be carried out by a SerializedProductVariant as part of the activities that the fleet has to perform.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FleetTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="taskId" type="fleetTaskIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="priority" type="fleetTaskPriority" nillable="true" minOccurs="0"/>
			<xsd:element name="expStart" type="fleetTaskExpectedStart" nillable="true" minOccurs="0"/>
			<xsd:element name="expEnd" type="fleetTaskExpectedEnd" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="fleetTaskDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="reqFuel" type="fleetTaskRequiredFuel" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="fltTskRep" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="rptRef" type="reportRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fltTskC" type="fleetTaskCargo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="spva" type="serializedProductVariantAssignment" nillable="true" minOccurs="0"/>
			<xsd:element name="oppRef" type="operationalPeriodRef" minOccurs="0"/>
			<xsd:element name="opRoleRef" type="operationalRoleRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="flttsk[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskCancellationNotice">
		<xsd:annotation>
			<xsd:documentation>
    FleetTaskCancellationNotice is a Document published by an Operator to cancel a FleetTask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FleetTaskCancellationNotice</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="noticeId" type="fleetTaskCancellationNoticeIdentifier"/>
			<xsd:element name="noticeDate" type="fleetTaskCancellationNoticeDatetime" nillable="true" minOccurs="0"/>
			<xsd:element name="reason" type="fleetTaskCancellationNoticeReason" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fltTskRef" type="fleetTaskRef" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fltskcn[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskCargo">
		<xsd:annotation>
			<xsd:documentation>
    FleetTaskCargo is a [relationship] that allows to associate a CargoItem to a FleetTask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FleetTaskCargo</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="cargoRef" type="cargoItemRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="flttskc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskList">
		<xsd:annotation>
			<xsd:documentation>
    FleetTaskList is a [relationship] that defines which FleetTasks are performed by which Fleets for a specific FleetPlanning.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FleetTaskList</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fltTskRef" type="fleetTaskRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="flttsklst[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="geographicalArea">
		<xsd:annotation>
			<xsd:documentation>
    GeographicalArea is a [class] that represents a particular extent of space.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:GeographicalArea</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="areaName" type="geographicalAreaName" maxOccurs="unbounded"/>
			<xsd:element name="areaDescr" type="geographicalAreaDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="areaType" type="geographicalAreaType" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="locRels" type="location" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="geoar[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="globalPosition">
		<xsd:annotation>
			<xsd:documentation>
    GlobalPosition is a [class] that identifies a point in space by a set of coordinates.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:GlobalPosition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="lat" type="latitude"/>
			<xsd:element name="long" type="longitude"/>
			<xsd:element name="alt" type="altitude"/>
			<xsd:element name="coordSyst" type="geographicalCoordinateSystem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="locRels" type="location" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="globpos[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElement">
		<xsd:annotation>
			<xsd:documentation>
    HardwareElement is a BreakdownElement that is realized as a HardwarePartDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:HardwareElement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="beId" type="breakdownElementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="beHwType" type="hardwareElementType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="beHwRev" type="hardwareElementRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="beInZones" type="breakdownElementInZoneItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infItem" type="infrastructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="be[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementAttachingConnector">
		<xsd:annotation>
			<xsd:documentation>
    HardwareElementAttachingConnector is a [class] that specifies a position on the HardwareElement which can be used to attach the 
    HardwareElementAttachingConnector  to another HardwareElement with a defined HardwareElementAttachmentSlot.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:HardwareElementAttachingConnector</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="connId" type="hardwareElementAttachmentConnectorIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="connDescr" type="hardwareElementAttachmentConnectorDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="behwconn[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementAttachmentSlot">
		<xsd:annotation>
			<xsd:documentation>
    HardwareElementAttachmentSlot is a [class] that specifies a position on the HardwareElement where another HardwareElement with a defined 
    HardwareElementAttachingConnector can be attached.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:HardwareElementAttachmentSlot</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="slotId" type="hardwareElementAttachmentSlotIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="slotDescr" type="hardwareElementAttachmentSlotDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="behwslot[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementPartRealization">
		<xsd:annotation>
			<xsd:documentation>
    HardwareElementPartRealization is a [relationship] where a HardwareElementRevision relates to an instance of HardwarePartDefinition which fulfills the 
    HardwareElement specification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:HardwareElementPartRealization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="allwdPCEfys" type="effectiveOnProductConfigurationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="usableOns" type="usableOnItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="hwr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementRevision">
		<xsd:annotation>
			<xsd:documentation>
    HardwareElementRevision is a BreakdownElementRevision representing an iteration applied to a HardwareElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:HardwareElementRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="breakdownElementRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="beName" type="breakdownElementName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beDescr" type="breakdownElementDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beEsc" type="breakdownElementEssentiality" nillable="true" minOccurs="0"/>
			<xsd:element name="beMsi" type="maintenanceSignificantOrRelevant" nillable="true" minOccurs="0"/>
			<xsd:element name="revRtnle" type="breakdownElementRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="breakdownElementRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="breakdownElementRevisionStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="beHwRepl" type="hardwareElementReplaceability" nillable="true" minOccurs="0"/>
			<xsd:element name="beHwRep" type="hardwareElementRepairability" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="beHwConn" type="hardwareElementAttachingConnector" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beHwSlot" type="hardwareElementAttachmentSlot" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="beRel" type="breakdownElementRevisionRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beHwReal" type="hardwareElementPartRealization" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="beInZones" type="breakdownElementInZoneItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="ber[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartContainer">
		<xsd:annotation>
			<xsd:documentation>
    HardwarePartContainer represents a container holding one or several similar HardwareParts that are not managed individually.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:HardwarePartContainer</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="hwPartContId" type="hardwarePartContainerIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="hardwarePartContainerDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="contPart" type="containerPart" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="containerRef" type="containerAsDesignedRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="hwptcont[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartDefinition">
		<xsd:annotation>
			<xsd:documentation>
    HardwarePartDefinition is a PartDefinition that is to be realized as physical items, including non-countable material
    

   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:HardwarePartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="partName" type="partName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="exportControl" type="partExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="majorComp" type="partMajorComponent" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="partDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="partcd" type="hardwarePartAsDesignedCommerceData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartDsgnData" type="hardwarePartDefinitionDesignData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartSupData" type="hardwarePartDefinitionSupportData" nillable="true" minOccurs="0"/>
			<xsd:element name="partCntrlData" type="partDefinitionControlledItemData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="partsList" type="partDefinitionPartsList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="altPart" type="alternatePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="identifierType">
		<xsd:annotation>
			<xsd:documentation>
    IdentifierType is an S-Series IPS specification defined [primitive] that represents any kind of identification along with its core characterizations.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:IdentifierType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="nonEmptyString" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="indicatedFaultSymptom">
		<xsd:annotation>
			<xsd:documentation>
    IndicatedFaultSymptom is a [class] that represents an indication of the existence of a Fault by some measuring or monitoring device.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:IndicatedFaultSymptom</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="sympId" type="faultSymptomIdentifier"/>
			<xsd:element name="sympTime" type="faultSymptomDateTime" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="det" type="detector" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fltsym[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructure">
		<xsd:annotation>
			<xsd:documentation>
    Infrastructure is a [class] that represents the basic physical and organizational structures and facilities needed for the operation of an organization or 
    Product or required for the provision of a service.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Infrastructure</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="infrRev" type="infrastructureRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="infrPty" type="infrastructureParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrRel" type="infrastructureRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureAvailable">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureAvailable is a [relationship] that provides the capability of associating an infrastructure or facility to items that can use it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfrastructureAvailable</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="availPeriod" type="infrastructureAvailablePeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="availType" type="infrastructureAvailableType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="availRestr" type="infrastructureAvailableRestriction" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="infrReqItem" type="infrastructureRequiringItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infritav[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureNode">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureNode is a [class] that specifies an infrastructure node which is part of the defined Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfrastructureNode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="nodeId" type="infrastructureNodeIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="nodeRole" type="infrastructureNodeRole" nillable="true" minOccurs="0"/>
			<xsd:element name="nodeDescr" type="infrastructureNodeDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="nodeAtLoc" type="infrastructureNodeAtLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="nodeReal" type="infrastructureNodeRealization" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="inclnode[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureNodeAtLocation">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureNodeAtLocation is a [relationship] that defines the location at which an IncludedInfrastructureNode is located.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfrastructureNodeAtLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="atLocPeriod" type="infrastructureNodeAtLocationPeriod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="locItem" type="locationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infnodeat[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureNodeRealization">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureNodeRealization is a [relationship] where an InfrastructureNode relates to an instance of InfrastructureNodeItem which is used to realize the 
    InfrastructureNode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfrastructureNodeRealization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="realPeriod" type="infrastructureNodeRealizationPeriod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="nodeRealItem" type="infrastructureNodeItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="nodereal[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureOperatingPeriod">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureOperatingPeriod is a [class] indicating a period of time during which an infrastructure has operated at total or partial capability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfrastructureOperatingPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="id" type="infrastructureOperatingPeriodIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="name" type="infrastructureOperatingPeriodName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="infrastructureOperatingPeriodDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="time" type="infrastructureOperatingPeriodDateTimeRange" nillable="true" minOccurs="0"/>
			<xsd:element name="mode" type="infrastructureOperatingPeriodMode" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="consPeriod" type="consumptionPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="subsEmPeriod" type="substanceEmissionPeriod" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureParty">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureParty is a [relationship] that identifies a Party that is associated with the Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfrastructureParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="ptyRole" type="infrastructurePartyRole"/>
			<xsd:element name="ptyPeriod" type="infrastructurePartyPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infrepty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureRelationship">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureRelationship is a [relationship] where one Infrastructure relates to another Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfrastructureRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="infrastructureRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="infrstrRef" type="infrastructureRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infrrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureRevision">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureRevision  is a [class] representing an iteration applied to an Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfrastructureRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="infrastructureRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="infrName" type="infrastructureName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrDesc" type="infrastructureDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrPeriod" type="infrastructureRevisionValidityPeriod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="infrastructureRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="infrastructureRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="infrastructureRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="infrNode" type="infrastructureNode" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infrrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="inServiceOptimizationAnalysis">
		<xsd:annotation>
			<xsd:documentation>
    InServiceOptimizationAnalysis is a [class] that represents the result from an in-service optimization analysis carried out for the 
    InServiceOptimizationAnalysisItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InServiceOptimizationAnalysis</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="isoName" type="inServiceOptimizationAnalysisName" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="isoanlys[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="installationLocation">
		<xsd:annotation>
			<xsd:documentation>
    InstallationLocation is a [class] that represents a position within the associated SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InstallationLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="instLocId" type="installationLocationIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="instLocName" type="installationLocationName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="locDef" type="installationLocationDefinitionItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="instparts" type="installedPartItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="instloc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="installedPart">
		<xsd:annotation>
			<xsd:documentation>
    InstalledPart is a [class] that identifies a period during which a given RealizedPart is, or has been, installed at the InstallationLocation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InstalledPart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="instDate" type="installedDateTime"/>
			<xsd:element name="removDate" type="removedDateTime" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="partReal" type="realizedPart" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="instpart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="inventoryActivity">
		<xsd:annotation>
			<xsd:documentation>
    InventoryActivity is an Activity associated to the management of spares or warehouses-
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InventoryActivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="rptActId" type="reportableActivityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="rptActDate" type="reportableActivityReportingDate" nillable="true" minOccurs="0"/>
			<xsd:element name="rptActPeriod" type="reportableActivityPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="rptActDescr" type="reportableActivityDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="rptActPty" type="reportableActivityParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="rptact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="involvedDisposalOrganization">
		<xsd:annotation>
			<xsd:documentation>
    InvolvedDisposalOrganization is a [relationship] that allows to document the organizations involved in a disposal.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InvolvedDisposalOrganization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="role" type="involvedDisposalOrganizationRole" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="disporg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDisposalOperation">
		<xsd:annotation>
			<xsd:documentation>
    ItemDisposalOperation is a [class] representing the action that has been taken in order to dispose of a DisposableItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ItemDisposalOperation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="id" type="itemDisposalOperationIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="org" type="itemDisposalOperationOrganization" nillable="true" minOccurs="0"/>
			<xsd:element name="method" type="itemDisposalOperationMethod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="methodDet" type="itemDisposalOperationMethodDetails" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="period" type="itemDisposalOperationPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="dispAction" type="itemDisposalOperationAction" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="recovItem" type="recoveredItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispItem" type="disposalItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispSite" type="disposalSite" nillable="true" minOccurs="0"/>
			<xsd:element name="wasteItem" type="wasteItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dispop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDisposalOperationAction">
		<xsd:annotation>
			<xsd:documentation>
    ItemDisposalOperationAction is a [relationship] that allows to associate an ItemDisposalOperation with one or more Actions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ItemDisposalOperationAction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="justification" type="itemDisposalOperationActionJustification" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="actionRef" type="actionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dispact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDisposalRequirement">
		<xsd:annotation>
			<xsd:documentation>
    ItemDisposalRequirement is a DisposalRequirement to proceed with the disposal of an individual item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ItemDisposalRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispReqWhy" type="disposalRequirementReason" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispReqDue" type="disposalRequirementDueDate" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqHow" type="disposalRequirementMethod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispReqJust" type="disposalRequirementJustification" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="dispOper" type="itemDisposalOperation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="unaccept" type="unacceptableCondition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="dispLoc" type="disposalLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispTransReq" type="disposalTransportRequirement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPCEfy" type="effectiveOnProductConfiguration" nillable="true" minOccurs="0"/>
			<xsd:element name="dispOrg" type="involvedDisposalOrganization" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispPol" type="requiredDisposalPolicy" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<xsd:element name="wcRef" type="warrantyClaimRef" minOccurs="0"/>
			<xsd:element name="dispReqCtxt" type="disposalRequirementContext" nillable="true" minOccurs="0"/>
			<xsd:element name="wasteItem" type="wasteItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemExportControlRegulation">
		<xsd:annotation>
			<xsd:documentation>
    ItemExportControlRegulation is a [relationship] that allows to associate an ItemUnderExportControl with the ExportControlRegulation that governs its export,
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ItemExportControlRegulation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="clas" type="itemExportControlRegulationClassification" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="exConRegRef" type="exportControlRegulationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="itexcore[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemWarranty">
		<xsd:annotation>
			<xsd:documentation>
    ItemWarranty is a [relationship] that defines the association between a WarrantyItem and the legal justification for the warranty of the WarrantyItem , 
    such as a contract or contract clause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ItemWarranty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="waType" type="serializedItemWarrantyType" nillable="true" minOccurs="0"/>
			<xsd:element name="waPeriod" type="serializedItemWarrantyPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="wtyItem" type="warrantyItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="siw[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="laborRates">
		<xsd:annotation>
			<xsd:documentation>
    LaborRates is a [relationship] that allows to assign labor rates to different skills, skill levels and trades.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LaborRates</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="labRate" type="laborRate" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="labRateItem" type="laborRateItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="labrate[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="localPosition">
		<xsd:annotation>
			<xsd:documentation>
    LocalPosition is a [class] representing the local coordinates that uniquely identify a position within a ReferencedPositionItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LocalPosition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="posId" type="localPositionIdentifier"/>
			<xsd:element name="posName" type="localPositionName" nillable="true" minOccurs="0"/>
			<xsd:element name="posDescr" type="localPositionDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="posRef" type="localPositionRefType" nillable="true" minOccurs="0"/>
			<xsd:element name="xPosCoord" type="xCoordinate" nillable="true" minOccurs="0"/>
			<xsd:element name="yPosCoord" type="yCoordinate" nillable="true" minOccurs="0"/>
			<xsd:element name="zPosCoord" type="zCoordinate" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="posRefItem" type="referencedPositionItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="localpos[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="locationRelationship">
		<xsd:annotation>
			<xsd:documentation>
    LocationRelationship is a [relationship] where one LocationItem relates to another LocationItem
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LocationRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="locationRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="locItem" type="locationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="locrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="locator">
		<xsd:annotation>
			<xsd:documentation>
    Locator is a functional area that indicates where an item is physically placed at a specific location.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Locator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="lctrId" type="locatorIdentifier"/>
			<xsd:element name="name" type="locatorName" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="locatorDescription" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="loctr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBook">
		<xsd:annotation>
			<xsd:documentation>
    LogBook is a class that represents a set of records called LogBookEntries that compile critical activities or events that need to be registered for a 
    defined purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LogBook</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="logId" type="logBookIdentifier"/>
			<xsd:element name="logtype" type="logBookType" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="logBookDescription" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="loge" type="logBookEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="log[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBookEntry">
		<xsd:annotation>
			<xsd:documentation>
    LogBookEntry is an individual entry into a logbook, defining one critical activity or event to be included in the LogBook.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LogBookEntry</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="entryId" type="logBookEntryIdentifier"/>
			<xsd:element name="time" type="logBookEntryDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="logType" type="logBookEntryType" nillable="true" minOccurs="0"/>
			<xsd:element name="comment" type="logBookEntryComment" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="opms" type="operationalModeStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="logec" type="logBookEntryMeasurementPoint" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="opMomItem" type="operationalMomentItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="loge[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBookEntryMeasurementPoint">
		<xsd:annotation>
			<xsd:documentation>
    LogBookEntryMeasurementPoint represents a measurement point  in a SerializedItem corresponding to a specific LogBookEntry.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LogBookEntryMeasurementPoint</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="id" type="logbookEntryMeasurementPointIdentifier"/>
			<xsd:element name="measType" type="logbookEntryMeasurementPointType" nillable="true" minOccurs="0"/>
			<xsd:element name="note" type="logbookEntryMeasurementPointNote" nillable="true" minOccurs="0"/>
			<xsd:element name="value" type="logbookEntryMeasurementPointValue" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="logec[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logicalAnd">
		<xsd:annotation>
			<xsd:documentation>
    LogicalAnd is an EvaluationCriteria that defines a boolean operation where the results of all its associated EvaluationCriteria must be TRUE for the result 
    to be TRUE, otherwise the result is FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LogicalAnd</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:group ref="evaluationCriteriaNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logicalNot">
		<xsd:annotation>
			<xsd:documentation>
    LogicalNot is an EvaluationCriteria that defines a boolean operation where the result from its associated EvaluationCriteria must be FALSE for the result 
    to be TRUE, otherwise the result is FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LogicalNot</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:group ref="evaluationCriteriaNonAbstractClasses" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logicalOr">
		<xsd:annotation>
			<xsd:documentation>
    LogicalOr is an EvaluationCriteria that defines a boolean operation where the result from at least one of its associated EvaluationCriteria must be TRUE 
    for the result to be TRUE, otherwise the result is FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LogicalOr</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:group ref="evaluationCriteriaNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logicalXor">
		<xsd:annotation>
			<xsd:documentation>
    LogicalXor is an EvaluationCriteria that defines a boolean operation where the result from one and only one of its associated EvaluationCriteria must be 
    TRUE for the result to be TRUE, otherwise the result is FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LogicalXor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:group ref="evaluationCriteriaNonAbstractClasses" minOccurs="0" maxOccurs="2"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="looseWaste">
		<xsd:annotation>
			<xsd:documentation>
    LooseWaste is a [class] representing a certain volume of solid waste that cannot be easily transported by means of containers or is not stored in 
    containers at the source location.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LooseWaste</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="id" type="looseWasteIdentifier"/>
			<xsd:element name="type" type="looseWasteType" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="looseWasteName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="looseWasteDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="volume" type="looseWasteVolume" nillable="true" minOccurs="0"/>
			<xsd:element name="weight" type="looseWasteWeight" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="loosewaste[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivity">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceActivity is a ReportableActivity that is associated to a maintenance task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceActivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="rptActId" type="reportableActivityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="rptActDate" type="reportableActivityReportingDate" nillable="true" minOccurs="0"/>
			<xsd:element name="rptActPeriod" type="reportableActivityPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="rptActDescr" type="reportableActivityDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="seq" type="maintenanceActivitySequence" nillable="true" minOccurs="0"/>
			<xsd:element name="note" type="maintenanceActivityNote" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="mactp" type="maintenanceActivityPlan" nillable="true" minOccurs="0"/>
			<xsd:element name="mactr" type="maintenanceActivityRecord" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="mactd" type="maintenanceActivityDocument" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mactpty" type="maintenanceActivityParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptActPty" type="reportableActivityParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="suppused" type="suppliesUsed" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="suppewu" type="supportEquipmentUsed" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pactRef" type="partActionRef" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mevRef" type="maintenanceEventRef" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskRevRef" type="taskRevisionRef" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beZoneRef" type="zoneElementRef" minOccurs="0"/>
			<xsd:element name="maintItem" type="maintenanceItem" nillable="true" minOccurs="0"/>
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="rptact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityDocument">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceActivityDocument is a [relationship] that allows to associate documents (relating) to a MaintenanceActivity requiring them (related).
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceActivityDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mactd[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityParty">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceActivityParty is a [relationship] that allows to associate a MaintenanceActivity to the person who is going to carry out the MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceActivityParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partyRole" type="maintenanceActivityPartyRole" nillable="true" minOccurs="0"/>
			<xsd:element name="partyTime" type="maintenanceActivityPartyTime" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="mpRef" type="maintenancePersonRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mactpty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceEvent">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceEvent is an event that consists in the realization of one or several maintenance activities or occurs as the result of a maintenance activity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceEvent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="eventId" type="eventIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="evTime" type="eventOcurrenceDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="evGroup" type="eventGroup" nillable="true" minOccurs="0"/>
			<xsd:element name="severity" type="eventSeverity" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="eventDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="eventConfirmedStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="evType" type="maintenanceEventCategoryType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="evAct" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="actionRef" type="actionRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="consq" type="consequence" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="evabe" type="eventAffectedBreakdownElement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evEx" type="eventExplanation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evr" type="eventRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evRelItem" type="eventRelationshipItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evntRep" type="eventReporter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTPRef" type="downTimePeriodRef" minOccurs="0"/>
			<xsd:element name="logeRef" type="logBookEntryRef" minOccurs="0"/>
			<xsd:element name="pupRef" type="productUsagePhaseRef" minOccurs="0"/>
			<xsd:element name="locItem" type="locationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="ev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacility">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceFacility is a Facility that is mainly established for providing product support.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceFacility</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="fcltyId" type="facilityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="fcltyName" type="facilityName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyDescr" type="facilityDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cleans" type="facilityCleansiness" nillable="true" minOccurs="0"/>
			<xsd:element name="dim" type="facilityDimensions" nillable="true" minOccurs="0"/>
			<xsd:element name="weight" type="facilityWeight" nillable="true" minOccurs="0"/>
			<xsd:element name="existsFor" type="facilityExistsDuring" nillable="true" minOccurs="0"/>
			<xsd:element name="facPerm" type="facilityPermanenceType" nillable="true" minOccurs="0"/>
			<xsd:element name="mFcltyType" type="maintenanceFacilityType" nillable="true" minOccurs="0"/>
			<xsd:element name="shifts" type="maintenanceFacilityShifts" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="facInfr" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="infrstrRef" type="infrastructureRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="facSuppEq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="suppeqRef" type="supportEquipmentRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="mfacs" type="maintenanceFacilitySlot" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fcltyLoc" type="facilityLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyOper" type="facilityOperator" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="facOwn" type="facilityOwner" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyRel" type="facilityRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mfacl" type="maintenanceFacilityLevel" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fclty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilityLevel">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceFacilityLevel is a [relationship> that defines the MaintenanceLevels of a Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceFacilityLevel</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="mlvRef" type="maintenanceLevelRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mfacl[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilitySlot">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceFacilitySlot is a fixed position within a MaintenanceFacility in which exactly one SerializedProductVariant can be accommodated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceFacilitySlot</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="slotId" type="maintenanceFacilitySlotIdentifier"/>
			<xsd:element name="slotType" type="maintenanceFacilitySlotType" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="maintenanceFacilitySlotDescription" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="mfacspu" type="maintenanceFacilitySlotPlannedUsage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mfacs[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilitySlotAccomodation">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceFacilitySlotAccomodation is a [relationship] that defines which ProductVariants can be accommodated in a specific MaintenanceFacilitySlot.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceFacilitySlotAccomodation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="mfacsRef" type="maintenanceFacilitySlotRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mfacsa[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilitySlotPlannedUsage">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceFacilitySlotPlannedUsage is a [relationship] that indicates the planned allocation of a MaintenanceFacilitySlot to a specific 
    SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceFacilitySlotPlannedUsage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="period" type="maintenanceFacilitySlotPlannedUsagePeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="serialPVRef" type="serializedProductVariantRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mfacspu[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceLevel">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceLevel is a [class] that represents the definition of a set of maintenance capabilities which will be made available to support a defined Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceLevel</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="mlvId" type="maintenanceLevelIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="mlvName" type="maintenanceLevelName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mlvDescr" type="maintenanceLevelDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mlv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceLicense">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceLicense is a class representing the authorization of an authority to a MaintenancePerson to perform specific maintenance tasks.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceLicense</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="licId" type="maintenanceLicenceIdentifier"/>
			<xsd:element name="licType" type="maintenanceLicenceType" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="maintenanceLicenceName" nillable="true" minOccurs="0"/>
			<xsd:element name="licVal" type="maintenanceLicenceValidity" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mlic[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceOrganization">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceOrganization is an organization approved to perform maintenance tasks on a specific set of Products or ProductVariants.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceOrganization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="orgId" type="organizationIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="orgName" type="organizationName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="orgType" type="organizationType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="orgDescr" type="organizationDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="orgPeriod" type="organizationPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="morgap" type="maintenanceOrganizationApproval" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodvm" type="productVariantMaintenance" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="budgtItem" type="budgetingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgStrs" type="organizationalBreakdownStructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="ptyInfo" type="partyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="org[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceOrganizationApproval">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceOrganizationApproval is a [relationship] that identifies the authorization of an Organization to operate as a Maintenanceorganization for a 
    specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceOrganizationApproval</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="moaType" type="maintenanceOrganizationApprovalType" nillable="true" minOccurs="0"/>
			<xsd:element name="moaFor" type="maintenanceOrganizationApprovalDuring" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="morgap[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenancePerson">
		<xsd:annotation>
			<xsd:documentation>
    MaintenancePerson is a person with the skills to be able to perform maintenance activities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenancePerson</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="persId" type="personIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="persName" type="personName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="midName" type="personMiddleName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="lastName" type="personFamilyName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prefix" type="personPrefixTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="suffix" type="personSuffixTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="personDate" type="personDates" nillable="true" minOccurs="0"/>
			<xsd:element name="jobType" type="maintenancePersonJobType" nillable="true" minOccurs="0"/>
			<xsd:element name="rem" type="maintenancePersonRemarks" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="mlic" type="maintenanceLicense" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="mpap" type="maintenancePersonApprovedProduct" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mpf" type="maintenancePersonFacility" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="personCat" type="personGroup" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="ptyInfo" type="partyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="perCompItem" type="personCompetenceItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="pers[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenancePersonApprovedProduct">
		<xsd:annotation>
			<xsd:documentation>
    MaintenancePersonApprovedProduct is a [relationship] that defines which MaintenancePersons have been approved to carry out maintenance on specific 
    ProductVariants, possibly with a specific approval by an organization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenancePersonApprovedProduct</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="pApPeriod" type="maintenancePersonApprovedProductPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<xsd:element name="prodVarRef" type="productVariantRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mpap[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenancePersonFacility">
		<xsd:annotation>
			<xsd:documentation>
    MaintenancePersonFacility is a [relationship] that documents the MaintenanceFacility where a MaintenancePerson is working during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenancePersonFacility</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="period" type="maintenancePersonFacilityPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mpf[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceProgram">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceProgram is a class that represents a set of TaskRequirements that must be applied to a ProductVariant so as to maintain the ProductVariant in an 
    operational state.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceProgram</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="progType" type="maintenanceProgramType" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="mprr" type="maintenanceProgramRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceProgramRevision">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceProgramRevision is an iteration of a MaintenanceProgram.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceProgramRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docIssId" type="documentIssueIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docIssRtnle" type="documentIssueRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docIssDate" type="documentIssueIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docIssStatus" type="documentIssueStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="issReason" type="documentIssueReason" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="maintenanceProgramRevisionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="mprrTaskRev" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="taskRevRef" type="taskRevisionRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="authReqRef" type="authorityRequirementRef" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dociss[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceRequirement">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceRequirement is a Requirement to carry out one or several maintenance actions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<xsd:element name="mPointRef" type="measurementPointRef" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="majorComponent">
		<xsd:annotation>
			<xsd:documentation>
    MajorComponent is a [relationship] declaring that a SerializedHardwarePart is of special importance within a SerializedProductVariant and therefore needs 
    special tracking.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MajorComponent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="managedFleet">
		<xsd:annotation>
			<xsd:documentation>
    ManagedFleet is a [relationship] that allows to associate a FleetManager to the Fleet that it manages during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ManagedFleet</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="fleetManFor" type="managedFleetDuring" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fleetRef" type="fleetRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fleetman[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="material">
		<xsd:annotation>
			<xsd:documentation>
    Material is a solid substance that can be refined in a manufacturing process.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Material</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="matId" type="materialIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="name" type="materialName" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="materialDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="mRisk" type="materialRiskFactor" nillable="true" minOccurs="0"/>
			<xsd:element name="matRskDescr" type="materialRiskDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="SubsCat" type="materialSubstanceUsageCategory" nillable="true" minOccurs="0"/>
			<xsd:element name="matDate" type="materialCharacteristicsRecordingDate" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mat[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinition">
		<xsd:annotation>
			<xsd:documentation>
    MaterialDefinition is a [class] that represents a substance or mixture of substances which is not dependent upon geometry and is subject to be processed in 
    a manufacturing or maintenance process.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaterialDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="mtrlId" type="materialDefinitionIdentifier" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="mtrlDefRev" type="materialDefinitionRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mtrldef[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionRevision">
		<xsd:annotation>
			<xsd:documentation>
    MaterialDefinitionRevision is a [class] representing an iteration applied to a MaterialDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaterialDefinitionRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="materialDefinitionRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="mtrlName" type="materialDefinitionName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mtrlDescr" type="materialDefinitionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="riskFact" type="materialDefinitionRiskFactor" nillable="true" minOccurs="0"/>
			<xsd:element name="riskDescr" type="materialDefinitionRiskDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="safeHandlDescr" type="materialDefinitionSafeHandlingRequirement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDescr" type="materialDefinitionWasteProductsDisposalDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="materialDefinitionRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="materialDefinitionRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="materialDefinitionRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mtrldefrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="measurementPoint">
		<xsd:annotation>
			<xsd:documentation>
    MeasurementPoint is a [class] that represents a measured value recorded for the associated item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MeasurementPoint</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="mPointId" type="measurementPointIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="mPointVal" type="measurementPointValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="mPointDefRef" type="measuringPointDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mpoint[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="measuringPointDefinition">
		<xsd:annotation>
			<xsd:documentation>
    MeasuringPointDefinition is a [class] that specifies a characteristic which can be measured for the MeasuringPointDefinitionItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MeasuringPointDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="mpDefId" type="measuringPointDefinitionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="mpDefName" type="measuringPointDefinitionName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mpDefType" type="measuringPointDefinitionType" nillable="true" minOccurs="0"/>
			<xsd:element name="mpDefDescr" type="measuringPointDefinitionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mpointdef[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageContext">
		<xsd:annotation>
			<xsd:documentation>
    MessageContext is a [relationship] between a Message and the context for which it is being provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MessageContext</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="context" type="messageContextItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="msgcxt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageParty">
		<xsd:annotation>
			<xsd:documentation>
    MessageParty is a [relationship] between a Message and a stakeholder for the Message.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MessageParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="ptyType" type="messagePartyType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="messagePartyItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="msgpty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageRelationship">
		<xsd:annotation>
			<xsd:documentation>
    MessageRelationship is a [relationship] where one Message relates to another Message.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MessageRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="messageRelationshipType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="msgRef" type="messageRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="msgrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinition">
		<xsd:annotation>
			<xsd:documentation>
    MissionDefinition is a [class] that represents the defining information for a Product operational scenario.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MissionDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="missnDName" type="missionDefinitionName" maxOccurs="unbounded"/>
			<xsd:element name="missnDType" type="missionDefinitionType" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="missnDRev" type="missionDefinitionRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="missndef[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinitionRevision">
		<xsd:annotation>
			<xsd:documentation>
    MissionDefinitionRevision is a [class] representing an iteration applied to a MissionDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MissionDefinitionRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="missionDefinitionRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="missnDDescr" type="missionDefinitionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="missnDObj" type="missionDefinitionObjective" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="missnDFreq" type="missionDefinitionFrequency" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="missionDefinitionRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="missionDefinitionRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="missionDefinitionRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="missndrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movement">
		<xsd:annotation>
			<xsd:documentation>
    Movement represents the act of autonomously changing the physical location or position of a SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Movement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="movId" type="movementIdentifier"/>
			<xsd:element name="movType" type="movementType" nillable="true" minOccurs="0"/>
			<xsd:element name="transit" type="movementTransit" nillable="true" minOccurs="0"/>
			<xsd:element name="result" type="movementResult" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="movleg" type="movementLeg" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="dest" type="locationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="source" type="locationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="consPeriod" type="consumptionPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="opMom" type="operationalMoment" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="subsEmPeriod" type="substanceEmissionPeriod" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLeg">
		<xsd:annotation>
			<xsd:documentation>
    MovementLeg is a class representing one of the individual displacements performed during a Movement, which will be at least one MovementLeg.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MovementLeg</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="legid" type="movementLegIdentifier"/>
			<xsd:element name="seq" type="movementLegSequence" nillable="true" minOccurs="0"/>
			<xsd:element name="period" type="movementLegPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="result" type="movementLegResult" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="mvld" type="movementLegDelay" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="mvlg" type="movementLegPosition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dest" type="locationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="source" type="locationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="consPeriod" type="consumptionPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="opMom" type="operationalMoment" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="subsEmPeriod" type="substanceEmissionPeriod" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="movleg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegDelay">
		<xsd:annotation>
			<xsd:documentation>
    MovementLegDelay is a class representing a delay that occurred during a travelLeg.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MovementLegDelay</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="delayId" type="movementLegDelayIdentifier"/>
			<xsd:element name="delayDate" type="movementLegDelayDate" nillable="true" minOccurs="0"/>
			<xsd:element name="duration" type="movementLegDelayDuration" nillable="true" minOccurs="0"/>
			<xsd:element name="delayType" type="movementLegDelayType" nillable="true" minOccurs="0"/>
			<xsd:element name="cause" type="movementLegDelayCause" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mvld[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegPosition">
		<xsd:annotation>
			<xsd:documentation>
    MovementLegPosition is a [relationship] that defines at which point in space a Product was at a certain moment during a MovementLeg.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MovementLegPosition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="locTime" type="movementLegGeoLocationTime" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="locItem" type="locationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mvlg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="mRONetwork">
		<xsd:annotation>
			<xsd:documentation>
    MRONetwork is an Infrastructure consisting of Maintenance, Repair and Overhaul (MRO) facilities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MRONetwork</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="infrId" type="infrastructureIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="infrType" type="infrastructureType" nillable="true" minOccurs="0"/>
			<xsd:element name="infName" type="infrastructureName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infDesc" type="infrastructureDescription" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="infrRev" type="infrastructureRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="infrPty" type="infrastructureParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrRel" type="infrastructureRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nameType">
		<xsd:annotation>
			<xsd:documentation>
    NameType is an S-Series IPS specifications defined [primitive] that represents an informal identification. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:NameType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nestedAllowedProductConfiguration">
		<xsd:annotation>
			<xsd:documentation>
    NestedAllowedProductConfiguration is a [relationship] that defines that one AllowedProductConfiguration includes a subordinate AllowedProductConfiguration. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:NestedAllowedProductConfiguration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="allwdPCItem" type="allowedProductConfigurationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="napc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nestedProductVariant">
		<xsd:annotation>
			<xsd:documentation>
    NestedProductVariant is a [relationship] that defines that one ProductVariant includes a subordinate ProductVariant. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:NestedProductVariant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="prodVarRef" type="productVariantRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="npv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nestedSerializedProductVariant">
		<xsd:annotation>
			<xsd:documentation>
    NestedSerializedProductVariant is a [relationship] that that defines that one SerializedProductVariant includes a subordinate SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:NestedSerializedProductVariant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="serialPVRef" type="serializedProductVariantRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="nstspv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nonAvailabilityCause">
		<xsd:annotation>
			<xsd:documentation>
    NonAvailabilityCause is a &lt;class] that describes why a Availability was not achieved at a certain date.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:NonAvailabilityCause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="causeId" type="nonAvailabilityCauseIdentifier"/>
			<xsd:element name="causeType" type="nonAvailabilityCauseType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="nonAvailabilityCauseDescription" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="navCause" type="nonAvailabilityCauseItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="navcau[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="observedFaultSymptom">
		<xsd:annotation>
			<xsd:documentation>
    ObservedFaultSymptom is a [class] that represents an indication of the existence of a Fault by means of physical observation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ObservedFaultSymptom</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="sympId" type="faultSymptomIdentifier"/>
			<xsd:element name="sympTime" type="faultSymptomDateTime" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="det" type="detector" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fltsym[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="obsolescenceParameter">
		<xsd:annotation>
			<xsd:documentation>
    ObsolescenceParameter is a class representing a criterion that allows to evaluate whether an ObsolescenceRequirement has been met.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ObsolescenceParameter</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="obsParamId" type="obsolescenceParameterIdentifier"/>
			<xsd:element name="name" type="obsolescenceParameterName" nillable="true" minOccurs="0"/>
			<xsd:element name="paramType" type="obsolescenceParameterType" nillable="true" minOccurs="0"/>
			<xsd:element name="paramVal" type="obsolescenceParameterValue" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="obsolescenceParameterDescription" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="obscp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="obsolescenceRequirement">
		<xsd:annotation>
			<xsd:documentation>
    ObsolescenceRequirement is a Requirement that indicates when an item becomes obsolete.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ObsolescenceRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="obscp" type="obsolescenceParameter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<xsd:element name="obsItem" type="obsolescenceItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatingBase">
		<xsd:annotation>
			<xsd:documentation>
    OperatingBase is a Facility that is mainly established for providing support for operations.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperatingBase</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="fcltyId" type="facilityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="fcltyName" type="facilityName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyDescr" type="facilityDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cleans" type="facilityCleansiness" nillable="true" minOccurs="0"/>
			<xsd:element name="dim" type="facilityDimensions" nillable="true" minOccurs="0"/>
			<xsd:element name="weight" type="facilityWeight" nillable="true" minOccurs="0"/>
			<xsd:element name="existsFor" type="facilityExistsDuring" nillable="true" minOccurs="0"/>
			<xsd:element name="facPerm" type="facilityPermanenceType" nillable="true" minOccurs="0"/>
			<xsd:element name="baseType" type="operatingBaseType" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="facInfr" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="infrstrRef" type="infrastructureRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="facSuppEq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="suppeqRef" type="supportEquipmentRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fcltyLoc" type="facilityLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyOper" type="facilityOperator" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="facOwn" type="facilityOwner" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyRel" type="facilityRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opbc" type="operatingBaseCapacity" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fclty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatingBaseCapacity">
		<xsd:annotation>
			<xsd:documentation>
    OperatingBaseCapacity is a [relationship] that identifies the capacity of an OperatingBase to allow the operation of a specific ProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperatingBaseCapacity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="capId" type="operatingBaseCapacityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="cap" type="operatingBaseProductVariantCapacity" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="prodVarRef" type="productVariantRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="opbc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatingLocationType">
		<xsd:annotation>
			<xsd:documentation>
    OperatingLocationType is a [class] that represents the definition of the nature of the environment in which a product will be operated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperatingLocationType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="opLocTId" type="operatingLocationTypeIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="opLocTName" type="operatingLocationTypeName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opLocTDescr" type="operatingLocationTypeDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="oplt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalActivity">
		<xsd:annotation>
			<xsd:documentation>
    OperationalActivity is an Activity associated to the operation of a SerializedProduct.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalActivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="rptActId" type="reportableActivityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="rptActDate" type="reportableActivityReportingDate" nillable="true" minOccurs="0"/>
			<xsd:element name="rptActPeriod" type="reportableActivityPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="rptActDescr" type="reportableActivityDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="rptActPty" type="reportableActivityParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="rptact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalApproval">
		<xsd:annotation>
			<xsd:documentation>
    OperationalApproval is a class that represents the authorization to a SerializedProductVariant for a specific mode of operation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalApproval</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="appId" type="operationalApprovalIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="appType" type="operationalApprovalType" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="opap[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEvent">
		<xsd:annotation>
			<xsd:documentation>
    OperationalEvent is a class representing an Event during the SerializedProductVariant operation that can have an impact on the operation itself, on 
    maintenance, or on safety.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalEvent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="eventId" type="eventIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="evTime" type="eventOcurrenceDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="evGroup" type="eventGroup" nillable="true" minOccurs="0"/>
			<xsd:element name="severity" type="eventSeverity" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="eventDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="eventConfirmedStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="repDate" type="operationalEventReportedDate" nillable="true" minOccurs="0"/>
			<xsd:element name="catType" type="operationalEventCategoryType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opMode" type="operationalEventOperationalMode" nillable="true" minOccurs="0"/>
			<xsd:element name="opSymp" type="operationalEventSymptom" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opNotTime" type="operationalEventMaintenanceNotificationDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="maintRelTime" type="operationalEventMaintenanceReleasedDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="maintDown" type="operationalEventMaintenanceDown" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="evAct" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="actionRef" type="actionRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="consq" type="consequence" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevm" type="operationalEventMessage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodpoev" type="productParameterAtOperationalEvent" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="evabe" type="eventAffectedBreakdownElement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evEx" type="eventExplanation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evr" type="eventRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evRelItem" type="eventRelationshipItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evntRep" type="eventReporter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opevo" type="operationalEventOperator" nillable="true" minOccurs="0"/>
			<xsd:element name="dwnTPRef" type="downTimePeriodRef" minOccurs="0"/>
			<xsd:element name="logeRef" type="logBookEntryRef" minOccurs="0"/>
			<xsd:element name="pupRef" type="productUsagePhaseRef" minOccurs="0"/>
			<xsd:element name="locItem" type="locationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="ev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventMessage">
		<xsd:annotation>
			<xsd:documentation>
    OperationalEventMessage is a message, failure code or acoustic or visual warning that occurred during an OperationalEvent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalEventMessage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="msgId" type="operationalEventMessageIdentifier"/>
			<xsd:element name="msgSeq" type="operationalEventMessageSequence" nillable="true" minOccurs="0"/>
			<xsd:element name="msgTxt" type="operationalEventMessageText" nillable="true" minOccurs="0"/>
			<xsd:element name="msgType" type="operationalEventMessageType" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="opevm[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventOperator">
		<xsd:annotation>
			<xsd:documentation>
    OperationalEventOperator is a [relationship] that allows to associate an OperationalEvent to the Party that was operating the ProductVariant at that moment 
    in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalEventOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="opevo[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalMode">
		<xsd:annotation>
			<xsd:documentation>
    OperationalMode represents the actual usage mode of a SerializedProductVariant during a specific OperationalPeriod.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalMode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="opModId" type="operationalModeIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="name" type="operationalModeName" nillable="true" minOccurs="0"/>
			<xsd:element name="opMode" type="operationalModeClassification" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="operationalModeDescription" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="opm[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriod">
		<xsd:annotation>
			<xsd:documentation>
    OperationalPeriod is a class that defines the characteristics of a time frame during which a SerializedProductVariant was operated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="periodId" type="operationalPeriodIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="name" type="operationalPeriodName" nillable="true" minOccurs="0"/>
			<xsd:element name="periodPh" type="operationalPeriodPhase" nillable="true" minOccurs="0"/>
			<xsd:element name="periodSch" type="operationalPeriodScheduled" nillable="true" minOccurs="0"/>
			<xsd:element name="periodAct" type="operationalPeriodActual" nillable="true" minOccurs="0"/>
			<xsd:element name="periodRes" type="operationalPeriodResult" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="mv" type="movement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="oppo" type="operationalPeriodOperator" nillable="true" minOccurs="0"/>
			<xsd:element name="oppr" type="operationalPeriodRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="consPeriod" type="consumptionPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="opMom" type="operationalMoment" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="subsEmPeriod" type="substanceEmissionPeriod" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="opp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriodOperator">
		<xsd:annotation>
			<xsd:documentation>
    OperationalPeriodOperator is a [relationship] that defines which Party has carried out the operation during an OperationalPeriod.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalPeriodOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="operOrgRef" type="operatorOrganizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="oppo[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriodRelationship">
		<xsd:annotation>
			<xsd:documentation>
    OperationalPeriodRelationship is a [relationship] that defines the association between two different OperationalPeriods.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalPeriodRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="operationalPeriodRelationshipType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="oppRef" type="operationalPeriodRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="oppr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRequirement">
		<xsd:annotation>
			<xsd:documentation>
    OperationalRequirement is a Requirement to perform a specific operation with a Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="period" type="operationalRequirementPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="oprp" type="operationalRequirementsPlanning" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRequirementsPlanning">
		<xsd:annotation>
			<xsd:documentation>
    OperationalRequirementsPlanning is a [relationship] that relates an OperationalRquirement to the FleetPlanning during one or several OperationalPeriods.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalRequirementsPlanning</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fltplRef" type="fleetPlanningRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="oprp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRole">
		<xsd:annotation>
			<xsd:documentation>
    OperationalRole defines the capabilities that a product must be able to provide so as to perform a specific task or mission as part of its operation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="opRoleId" type="operationalRoleidentifier" maxOccurs="unbounded"/>
			<xsd:element name="opRoleType" type="operationalRoleType" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="operationalRoleDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="opDelta" type="operationalRoleDelta" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRoleTime" type="operationalRoleTime" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="arc" type="allowedRoleChange" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rolec" type="roleCapability" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="oprole[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRoleKitImpact">
		<xsd:annotation>
			<xsd:documentation>
    OperationalRoleKitImpact is a [class] that specifies how an installed ProductOperationalRoleKit can affect the characteristics and/or performance on the 
    ProductOperationalRoleKitItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalRoleKitImpact</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="kitImpctId" type="operationalRoleKitImpactIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="kitImpctType" type="operationalRoleKitImpactType" nillable="true" minOccurs="0"/>
			<xsd:element name="kitImpctDescr" type="operationalRoleKitImpactDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="rolekitimp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalTask">
		<xsd:annotation>
			<xsd:documentation>
    OperationalTask is a Task that is required to support the use of a product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="taskId" type="taskIdentifier" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="taskRev" type="taskRevision" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="task[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatorOrganization">
		<xsd:annotation>
			<xsd:documentation>
    OperatorOrganization is an Organization that operates one or several instances of  SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperatorOrganization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="orgId" type="organizationIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="orgName" type="organizationName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="orgType" type="organizationType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="orgDescr" type="organizationDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="orgPeriod" type="organizationPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="operOrgAppr" type="organizationOperationsApproval" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="budgtItem" type="budgetingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="fltMgr" type="fleetManager" nillable="true" minOccurs="0"/>
			<xsd:element name="orgStrs" type="organizationalBreakdownStructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="ptyInfo" type="partyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="org[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatorPerson">
		<xsd:annotation>
			<xsd:documentation>
    OperatorPerson is a Person that operates one or several instances of SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperatorPerson</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="persId" type="personIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="persName" type="personName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="midName" type="personMiddleName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="lastName" type="personFamilyName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prefix" type="personPrefixTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="suffix" type="personSuffixTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="personDate" type="personDates" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="personCat" type="personGroup" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="operPersAppr" type="personOperationsApproval" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="fltMgr" type="fleetManager" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="ptyInfo" type="partyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="perCompItem" type="personCompetenceItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="pers[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organization">
		<xsd:annotation>
			<xsd:documentation>
    Organization is a [class] that represents an administrative structure with a particular purpose belonging to a legal entity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Organization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="orgId" type="organizationIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="orgName" type="organizationName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="orgType" type="organizationType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="orgDate" type="organizationDates" nillable="true" minOccurs="0"/>
			<xsd:element name="orgDesc" type="organizationDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="budgtItem" type="budgetingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgStrs" type="organizationalBreakdownStructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="ptyInfo" type="partyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="org[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalBreakdownStructure">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalBreakdownStructure is a [class] that represents the systematic arrangement of human resources in an organization so as to achieve common 
    business objectives.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OrganizationalBreakdownStructure</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="strType" type="organizationalBreakdownStructureType"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="orgStrRev" type="organizationalBreakdownStructureRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="orgstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalBreakdownStructureRevision">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalBreakdownStructureRevision is a [class] representing an iteration applied to a OrganizationalBreakdownStructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OrganizationalBreakdownStructureRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="organizationalBreakdownStructureRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="strPeriod" type="organizationalBreakdownStructureRevisionPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="revRtnle" type="organizationalBreakdownStructureRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="organizationalBreakdownStructureRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revState" type="organizationalBreakdownStructureRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgUnits" type="organizationalUnitItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="strrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationDates">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:organizationDates</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnit">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalUnit is a [class] that represents division of labor within an Organization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OrganizationalUnit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="unitId" type="organizationalUnitIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="unitName" type="organizationalUnitName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="unitObj" type="organizationalUnitObjective" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="unitMemb" type="organizationalUnitMember" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="unitRel" type="organizationalUnitRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgUnits" type="organizationalUnitItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="ptyInfo" type="partyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="orgunit[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitMember">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalUnitMember is a [class] that specifies a  type of personnel that is part of the OrganizationalUnit.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OrganizationalUnitMember</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="membRole" type="organizationalUnitMemberRole" maxOccurs="unbounded"/>
			<xsd:element name="membDescr" type="organizationalUnitMemberDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="membQty" type="organizationalUnitMemberQuantity" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="membItem" type="organizationalUnitMemberItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="unitmemb[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitRelationship">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalUnitRelationship is a [relationship] where one OrganizationalUnit relates to another OrganizationalUnit.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OrganizationalUnitRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="organizationalUnitRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="orgUnitRef" type="organizationalUnitRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="unitrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationOperationsApproval">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationOperationsApproval is a [relationship] that identifies the authorization of an OperatorOrganization to operate a specific ProductVariant for a 
    specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OrganizationOperationsApproval</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="apprPeriod" type="organizationOperationsApprovalPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<xsd:element name="prodVarRef" type="productVariantRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="orgoa[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="otherFacility">
		<xsd:annotation>
			<xsd:documentation>
    OtherFacility is a Facility that has no specific classification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OtherFacility</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="fcltyId" type="facilityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="fcltyName" type="facilityName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyDescr" type="facilityDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cleans" type="facilityCleansiness" nillable="true" minOccurs="0"/>
			<xsd:element name="dim" type="facilityDimensions" nillable="true" minOccurs="0"/>
			<xsd:element name="weight" type="facilityWeight" nillable="true" minOccurs="0"/>
			<xsd:element name="existsFor" type="facilityExistsDuring" nillable="true" minOccurs="0"/>
			<xsd:element name="facPerm" type="facilityPermanenceType" nillable="true" minOccurs="0"/>
			<xsd:element name="type" type="otherFacilityType" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="facInfr" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="infrstrRef" type="infrastructureRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="facSuppEq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="suppeqRef" type="supportEquipmentRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fcltyLoc" type="facilityLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyOper" type="facilityOperator" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="facOwn" type="facilityOwner" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyRel" type="facilityRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fclty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="parameterThresholdDefinition">
		<xsd:annotation>
			<xsd:documentation>
    ParameterThresholdDefinition is a ThresholdDefinition that is continuously measured and evaluated, and when reached, activates the associated trigger 
    threshold.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ParameterThresholdDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="thldVal" type="thresholdValue" nillable="true" minOccurs="0"/>
			<xsd:element name="valQual" type="thresholdValueQualifier" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="thres[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="parkingFacility">
		<xsd:annotation>
			<xsd:documentation>
    ParkingFacility is a Facility used to park SerializedProductVariants that are mobile and can move beween different Locations.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ParkingFacility</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="fcltyId" type="facilityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="fcltyName" type="facilityName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyDescr" type="facilityDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cleans" type="facilityCleansiness" nillable="true" minOccurs="0"/>
			<xsd:element name="dim" type="facilityDimensions" nillable="true" minOccurs="0"/>
			<xsd:element name="weight" type="facilityWeight" nillable="true" minOccurs="0"/>
			<xsd:element name="existsFor" type="facilityExistsDuring" nillable="true" minOccurs="0"/>
			<xsd:element name="facPerm" type="facilityPermanenceType" nillable="true" minOccurs="0"/>
			<xsd:element name="type" type="parkingFacilityType" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="facInfr" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="infrstrRef" type="infrastructureRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="facSuppEq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="suppeqRef" type="supportEquipmentRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fcltyLoc" type="facilityLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyOper" type="facilityOperator" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="facOwn" type="facilityOwner" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyRel" type="facilityRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fclty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partAction">
		<xsd:annotation>
			<xsd:documentation>
    PartAction is an action performed on a part as a result of a MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartAction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="actId" type="partActionIdentifier"/>
			<xsd:element name="actType" type="partActionType" nillable="true" minOccurs="0"/>
			<xsd:element name="actDate" type="partActionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="cause" type="partActionCause" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="partActionCauseDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="sinceNew" type="partActionTimeSinceNew" nillable="true" minOccurs="0"/>
			<xsd:element name="sinceOver" type="partActionTimeSinceOverhaul" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="instLocRef" type="installationLocationRef" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="logeRef" type="logBookEntryRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="pact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDefinitionPartsList">
		<xsd:annotation>
			<xsd:documentation>
    PartDefinitionPartsList is a [class] that represents the definitional information for the collection of PartDefinitionPartsListEntry included in the 
    assembly of the parent PartDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartDefinitionPartsList</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="pListType" type="partsListType"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="pListRev" type="partDefinitionPartsListRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="plist[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDefinitionPartsListEntry">
		<xsd:annotation>
			<xsd:documentation>
    PartDefinitionPartsListEntry is a [class] that represents the inclusion of a PartDefinition in a PartDefinitionPartsListRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartDefinitionPartsListEntry</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="entryId" type="partsListEntryIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="entryQty" type="partsListEntryQuantity" nillable="true" minOccurs="0"/>
			<xsd:element name="entryRfd" type="referenceDesignator" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="substPart" type="substitutePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="partRef" type="partDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="allwdPCEfys" type="effectiveOnProductConfigurationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="usableOns" type="usableOnItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="ple[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDefinitionPartsListRelationship">
		<xsd:annotation>
			<xsd:documentation>
    PartDefinitionPartsListRelationship is a [relationship] where one PartDefinitionPartsList relates to another PartDefinitionPartsList.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartDefinitionPartsListRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="partDefinitionPartsListRelationshipType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="pListRevRef" type="partDefinitionPartsListRevisionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="plrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDefinitionPartsListRevision">
		<xsd:annotation>
			<xsd:documentation>
    PartDefinitionPartsListRevision is a [class] representing an iteration applied to a PartDefinitionPartsList.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartDefinitionPartsListRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="partsListRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="partsListRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="partsListRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="partsListRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="pListEntry" type="partDefinitionPartsListEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="pListRel" type="partDefinitionPartsListRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="allwdPCEfys" type="effectiveOnProductConfigurationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="usableOns" type="usableOnItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="plrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partInPool">
		<xsd:annotation>
			<xsd:documentation>
    PartInPool is a [relationship] that indicates the period during which a part has been in a defined Pool of parts.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartInPool</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="inPoolFor" type="partInPoolPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="poolQty" type="partInPoolQuantityDuringPeriod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="poolItem" type="poolItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="sppartp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partInWarehouse">
		<xsd:annotation>
			<xsd:documentation>
    PartInWarehouse is a [relationship] that defines the time that a SerializedHardwarePart has been stored in a Warehouse.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartInWarehouse</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="period" type="partInWarehousePeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="qPeriod" type="partInWarehouseQuantityDuringPeriod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="whRef" type="warehouseRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="partw[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partOwner">
		<xsd:annotation>
			<xsd:documentation>
    PartOwner is a [relationship] that allows to associate a SerializedHardwarePart with its owning Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartOwner</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partOwnId" type="partOwnerIdentifier"/>
			<xsd:element name="period" type="partOwnerPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="partowner[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyAddress">
		<xsd:annotation>
			<xsd:documentation>
    PartyAddress is a [relationship] that defines the association between a Party and an Address.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartyAddress</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="addrType" type="partyAddressType" nillable="true" minOccurs="0"/>
			<xsd:element name="addrPeriod" type="partyAddressPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="strAddrRef" type="streetAddressRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="ptya[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyRelationship">
		<xsd:annotation>
			<xsd:documentation>
    PartyRelationship is a relationship where one Party relates to another Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartyRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="partyRelationshipType"/>
			<xsd:element name="relDescr" type="partyRelationshipDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="relPeriod" type="partyRelationshipPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="ptyr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="penalty">
		<xsd:annotation>
			<xsd:documentation>
    Penalty is a [class] that represents a punishment imposed for breaking or not complying with a contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Penalty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="penId" type="penaltyIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="penDate" type="penaltyDate" nillable="true" minOccurs="0"/>
			<xsd:element name="amount" type="penaltyAmount" nillable="true" minOccurs="0"/>
			<xsd:element name="settledAt" type="penaltySettledAt" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="penaltyDescription" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="docItem" type="documentItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="rptmRef" type="reportableMetricRef" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="slacRef" type="serviceLevelAgreementClauseRef" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="pty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameter">
		<xsd:annotation>
			<xsd:documentation>
    PerformanceParameter is a [class] that represents a metric that if changed, or not fulfilled, can have a major impact on the performance, schedule, cost 
    and/or risk for the PerformanceParameterItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PerformanceParameter</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="prfmPType" type="performanceParameterType"/>
			<xsd:element name="limitQual" type="performanceParameterValueLimitQualifier" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="prfmPRev" type="performanceParameterRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="prfmpara[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterRevision">
		<xsd:annotation>
			<xsd:documentation>
    PerformanceParameterRevision is a [class] that represents an iteration applied to a PerformanceParameter.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PerformanceParameterRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="performanceParameterRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="performanceParameterRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="performanceParameterRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="performanceParameterRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="prfmPValGrp" type="performanceParameterValueGroup" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="prfmprev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="periodicTimeLimit">
		<xsd:annotation>
			<xsd:documentation>
    PeriodicTimeLimit is a TimeLimit that is repeated and its next occurrence can be scheduled.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PeriodicTimeLimit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="limDescr" type="timeLimitDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="limHarmnz" type="timeLimitHarmonizationIndicator" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="repDef" type="repeatDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="timelim[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="person">
		<xsd:annotation>
			<xsd:documentation>
    Person is a class that represents a human being.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Person</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="persId" type="personIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="name" type="personName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="midName" type="personMiddleName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="lastName" type="personFamilyName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prefix" type="personPrefixTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="suffix" type="personSuffixTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="personDate" type="personDates" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="personCat" type="personGroup" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="ptyInfo" type="partyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="perCompItem" type="personCompetenceItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="pers[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personCompetence">
		<xsd:annotation>
			<xsd:documentation>
    PersonCompetence is a [relationship] that defines the competences that a Person has acquired.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PersonCompetence</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="compDate" type="personCompetenceAcquired" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="defComp" type="competencyDefinitionItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mpc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personGroup">
		<xsd:annotation>
			<xsd:documentation>
    PersonGroup is a [relationship] that allows to associate a Person to different types of persons.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PersonGroup</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="persTypeRef" type="typeOfPersonRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="personcat[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personOperationsApproval">
		<xsd:annotation>
			<xsd:documentation>
    PersonOperationsApproval is a [relationship] that documents the authorization by an Organization to an OperatorPerson to operate a ProductVariant during a 
    specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PersonOperationsApproval</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="apprPeriod" type="personOperationsApprovalPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<xsd:element name="prodVarRef" type="productVariantRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="persoa[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedItemUpgrade">
		<xsd:annotation>
			<xsd:documentation>
    PlannedItemUpgrade is a [class] that defines the planning for the upgrade for a ChangeEmbodimentRequirement for one or several items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PlannedItemUpgrade</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="upgrId" type="plannedItemUpgradeIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="priority" type="plannedItemUpgradePriority" nillable="true" minOccurs="0"/>
			<xsd:element name="reason" type="plannedItemUpgradeReason" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="pliuTime" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="plutRef" type="plannedUpgradeTimescalesRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="pliu[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedPartInstallationLocation">
		<xsd:annotation>
			<xsd:documentation>
    PlannedPartInstallationLocation is a [relationship] that allows to indicate which Part was installed or uninstalled at which location on a specific 
    SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PlannedPartInstallationLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="pactRef" type="partActionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="plpil[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedTaskUsage">
		<xsd:annotation>
			<xsd:documentation>
    PlannedTaskUsage is a TaskUsage that expands the definition of a required Task in the context of a given support solution.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PlannedTaskUsage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AttributeGroups -->
			<xsd:element name="taskFreq" type="taskFrequency" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="taskLoc" type="allocatedTaskLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="plndTask" type="plannedTaskItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="timeLimits" type="timeLimitItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="taskuse[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedUpgradeTimescales">
		<xsd:annotation>
			<xsd:documentation>
    PlannedUpgradeTimescales is a class that defines the planned periods of times during which a PlannedUpgrade will be performed on specific items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PlannedUpgradeTimescales</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="timeId" type="plannedUpgradeTimescaleIdentifier"/>
			<xsd:element name="timeVersion" type="plannedUpgradeTimescaleVersion"/>
			<xsd:element name="period" type="plannedUpgradePeriod" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="plut[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="policiesAndRegulations">
		<xsd:annotation>
			<xsd:documentation>
    PoliciesAndRegulations is a Document that defines mandatory practices for a Project, Product, Contract, Service or major item requiring specific guidelines.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PoliciesAndRegulations</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="effectivity" type="policiesAndRegulationsEffectivity" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="subjPol" type="subjectOfPoliciesAndRegulations" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="pool">
		<xsd:annotation>
			<xsd:documentation>
    Pool is a set of parts that are managed as a functional group and that is shared by different Parties.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Pool</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="poolId" type="poolIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="name" type="poolName" nillable="true" minOccurs="0"/>
			<xsd:element name="poolType" type="poolType" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="poolDescription" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="poolContr" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="contrRef" type="contractRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="sppartp" type="partInPool" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="poolo" type="poolOwner" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="pinwhr" type="poolStockedInWareHouse" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="poolUsr" type="poolUser" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqpslp" type="requiredPartStockLevelInPool" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="pool[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolOwner">
		<xsd:annotation>
			<xsd:documentation>
    PoolOwner is a [relationship] that defines the ownership ration and period of a Party over a Pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PoolOwner</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="ownedFor" type="poolOwnershipDuring" nillable="true" minOccurs="0"/>
			<xsd:element name="ratio" type="poolOwnershipRatio" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="poolo[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolStockedInWareHouse">
		<xsd:annotation>
			<xsd:documentation>
    PoolStockedInWareHouse is a [relationship] that allows to indicate the Warehouse or Warehouses where a Pool of parts is stocked.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PoolStockedInWareHouse</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="inStcokFor" type="poolStockedInWareHouseDuring" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="whRef" type="warehouseRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="pinwhr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolUser">
		<xsd:annotation>
			<xsd:documentation>
    PoolUser is a [relationship] that associates a spare Pool with the Parties that are allowed to access and use that SparePool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PoolUser</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="usgType" type="poolUsageType" nillable="true" minOccurs="0"/>
			<xsd:element name="during" type="poolUsageDuring" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="poolUsageDescription" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="poolUsr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="port">
		<xsd:annotation>
			<xsd:documentation>
    Port is an infrastructure used for the docking of ships.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Port</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="infrId" type="infrastructureIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="infrType" type="infrastructureType" nillable="true" minOccurs="0"/>
			<xsd:element name="infName" type="infrastructureName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infDesc" type="infrastructureDescription" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="infrRev" type="infrastructureRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="infrPty" type="infrastructureParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrRel" type="infrastructureRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="powerGrid">
		<xsd:annotation>
			<xsd:documentation>
    PowerGrid is an Infrastructure used to generate, transport and distribute power.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PowerGrid</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="infrId" type="infrastructureIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="infrType" type="infrastructureType" nillable="true" minOccurs="0"/>
			<xsd:element name="infName" type="infrastructureName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infDesc" type="infrastructureDescription" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="infrRev" type="infrastructureRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="infrPty" type="infrastructureParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrRel" type="infrastructureRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="pressureSensor">
		<xsd:annotation>
			<xsd:documentation>
    PressureSensor is a SensorType that measures pressure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PressureSensor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="partName" type="partName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="exportControl" type="partExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="majorComp" type="partMajorComponent" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="partDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detRange" type="sensorDetectionRange" nillable="true" minOccurs="0"/>
			<xsd:element name="sensRate" type="sensorSamplingRate" nillable="true" minOccurs="0"/>
			<xsd:element name="sensit" type="sensorSensitivity" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="partcd" type="hardwarePartAsDesignedCommerceData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartDsgnData" type="hardwarePartDefinitionDesignData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartSupData" type="hardwarePartDefinitionSupportData" nillable="true" minOccurs="0"/>
			<xsd:element name="partCntrlData" type="partDefinitionControlledItemData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="partsList" type="partDefinitionPartsList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="snsr" type="sensor" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="altPart" type="alternatePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="product">
		<xsd:annotation>
			<xsd:documentation>
    Product is [class] that represents a family of items which share the same underlying design purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Product</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="prodId" type="productIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="prodName" type="productName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="prodVar" type="productVariant" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="usePhses" type="productUsagePhaseItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="prod[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRole">
		<xsd:annotation>
			<xsd:documentation>
    ProductOperationalRole is a class that defines a specific use that the associated ProductOperationalRoleItem must be able to perform.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductOperationalRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="opRoleId" type="productOperationalRoleIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="opRoleName" type="productOperationalRoleName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRoleType" type="productOperationalRoleType" nillable="true" minOccurs="0"/>
			<xsd:element name="opRoleDescr" type="productOperationalRoleDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="opRoleConf" type="productOperationalRoleConfiguration" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="oprole[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfiguration">
		<xsd:annotation>
			<xsd:documentation>
    ProductOperationalRoleConfiguration is a [class] that defines a permitted combination of product operational role kits  to be used in order to realize the 
    associated ProductOperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductOperationalRoleConfiguration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="roleConfId" type="productOperationalRoleConfigurationIdentifier" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="roleConfRev" type="productOperationalRoleConfigurationRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="oproleconf[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfigurationRevision">
		<xsd:annotation>
			<xsd:documentation>
    ProductOperationalRoleConfigurationRevision is a [class] representing an iteration applied to a ProductOperationalRoleConfiguration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductOperationalRoleConfigurationRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="productOperationalRoleConfigurationRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="roleConfName" type="productOperationalRoleConfigurationName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="roleConfDescr" type="productOperationalRoleConfigurationDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="productOperationalRoleConfigurationRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="productOperationalRoleConfigurationRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="productOperationalRoleConfigurationRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="roleConfKit" type="productOperationalRoleConfigurationRoleKit" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="confrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfigurationRoleKit">
		<xsd:annotation>
			<xsd:documentation>
    ProductOperationalRoleConfigurationRoleKit is a [relationship] that identifies a ProductOperationalRoleKit defined for the product, which can or must be 
    installed on the product when configured to perform the specified ProductOperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductOperationalRoleConfigurationRoleKit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="roleconfkit[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleKit">
		<xsd:annotation>
			<xsd:documentation>
    ProductOperationalRoleKit is a [class] that specifies a combination of hardware that must be installed as a whole in order to support one or many product 
    operational roles.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductOperationalRoleKit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="roleKitId" type="productOperationalRoleKitIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="roleKitName" type="productOperationalRoleKitName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="roleKitDescr" type="productOperationalRoleKitDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="roleKitImpct" type="operationalRoleKitImpact" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="oprolekit[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productParameterAtOperationalEvent">
		<xsd:annotation>
			<xsd:documentation>
    ProductParameterAtOperationalEvent provides the value of a Product parameter when an operational event occurred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductParameterAtOperationalEvent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="paramId" type="productParametersAtOperationalEventIdentifier"/>
			<xsd:element name="name" type="productParameterAtOperationalEventName" nillable="true" minOccurs="0"/>
			<xsd:element name="paramAtEv" type="productParameterAtOperationalEventValue" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="prodpoev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhase">
		<xsd:annotation>
			<xsd:documentation>
    ProductUsagePhase is a distinct period of time during which a Product, ProductVariant or SerializedProductVariant will be used in a specific way, which is 
    different from any other ProductUsagePhase.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductUsagePhase</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="phseRel" type="productUsagePhaseRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="pup[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseHierarchicalRelationship">
		<xsd:annotation>
			<xsd:documentation>
    ProductUsagePhaseHierarchicalRelationship is a [relationship] that allows to define a hierarchical association between two ProductUsagePhases.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductUsagePhaseHierarchicalRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="productUsagePhaseRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="pupRef" type="productUsagePhaseRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="puprel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseRelationship">
		<xsd:annotation>
			<xsd:documentation>
    ProductUsagePhaseRelationship is a [relationship] where one ProductUsagePhase relates to another ProductUsagePhase.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductUsagePhaseRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="productUsagePhaseRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="pupRef" type="productUsagePhaseRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="puprel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseSequentialRelationship">
		<xsd:annotation>
			<xsd:documentation>
    ProductUsagePhaseSequentialRelationship is a [relationship] that allows to define a sequential association between two ProductUsagePhases.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductUsagePhaseSequentialRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="productUsagePhaseRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="pupRef" type="productUsagePhaseRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="puprel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariant">
		<xsd:annotation>
			<xsd:documentation>
    ProductVariant is a [class] that defines a member of a Product family which is configured for a specific purpose and is made available to the market.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductVariant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="prodVarId" type="productVariantIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="prodVarName" type="productVariantName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodDate" type="productVariantProductionDates" nillable="true" minOccurs="0"/>
			<xsd:element name="eisDate" type="productVariantEntryIntoServiceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="lastDate" type="productVariantLastBuyDate" nillable="true" minOccurs="0"/>
			<xsd:element name="dim" type="productVariantDimensions" nillable="true" minOccurs="0"/>
			<xsd:element name="weight" type="productVariantWeight" nillable="true" minOccurs="0"/>
			<xsd:element name="pvDesc" type="productVariantDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="mfacsa" type="maintenanceFacilitySlotAccomodation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="nestedPV" type="nestedProductVariant" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodvsp" type="productVariantSupportedByPool" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infItem" type="infrastructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="opTimeItem" type="operationalTimeItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="usePhses" type="productUsagePhaseItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="traass" type="transportingAsset" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="prodv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantMaintenance">
		<xsd:annotation>
			<xsd:documentation>
    ProductVariantMaintenance is a [relationship] allowing to associate a MaintenanceOrganisation (relating) to the ProductVariants it can maintain (related).
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductVariantMaintenance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="period" type="productVariantMaintenancePeriod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="prodVarRef" type="productVariantRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="prodvm[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantSupportedByPool">
		<xsd:annotation>
			<xsd:documentation>
    ProductVariantSupportedByPool is a [relationship] that indicates that a ProductVariant is supported by a defined part Pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductVariantSupportedByPool</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="pvPoolSup" type="productVariantSupportedByPoolDuring" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="poolRef" type="poolRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="prodvsp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="project">
		<xsd:annotation>
			<xsd:documentation>
    Project is a [class] that represents the overall set of Integrated Product Support (IPS) activities defined for a Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Project</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="projId" type="projectIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="projName" type="projectName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="projDescr" type="projectDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="projDuration" type="projectPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="projContr" type="projectContract" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="projRel" type="projectRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="budgtItem" type="budgetingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgStrs" type="organizationalBreakdownStructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="proj[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="projectContract">
		<xsd:annotation>
			<xsd:documentation>
    ProjectContract is a [relationship] that establishes an association between a Project and a Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProjectContract</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="contrRef" type="contractRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="projcontr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="projectRelationship">
		<xsd:annotation>
			<xsd:documentation>
    ProjectRelationship is a [relationship] where one Project relates to another Project.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProjectRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="projectRelationshipType"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="projRef" type="projectRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="projr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="projectSpecificAttribute">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:ProjectSpecificAttribute</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="attrName" type="value:projectSpecificAttributeNames" nillable="true"/>
			<!--UML-CompositionRelationships-->
			<xsd:group ref="projectSpecificAttributeValue" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="recordedFaultSymptom">
		<xsd:annotation>
			<xsd:documentation>
    RecordedFaultSymptom is a [class] that represents an indication of the existence of a Fault that has been recorded by a monitoring device.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RecordedFaultSymptom</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="sympId" type="faultSymptomIdentifier"/>
			<xsd:element name="sympTime" type="faultSymptomDateTime" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="det" type="detector" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fltsym[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="recoveredItem">
		<xsd:annotation>
			<xsd:documentation>
    RecoveredItem is a [relationship] that allows to identify the items that have been recovered as part of an ItemDisposalOperation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RecoveredItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="value" type="recoveredItemValue" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="recoveredItemStatus" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="recovitem[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="rectangle">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:Rectangle</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="rectLength" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:lengthUnit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="rectWidth" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:lengthUnit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="rectifyingTask">
		<xsd:annotation>
			<xsd:documentation>
    RectifyingTask is a Task that ensures or returns the function of the associated item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RectifyingTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="taskId" type="taskIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="packTask" type="packagedTask" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="taskRev" type="taskRevision" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="task[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="referencedDigitalFile">
		<xsd:annotation>
			<xsd:documentation>
    ReferencedDigitalFile is a [relationship> that allows an item to refer to a DigitalFile.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReferencedDigitalFile</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="refJust" type="referencedDigitalFileJustification" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fileRef" type="digitalFileRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="reffile[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="referencedDocument">
		<xsd:annotation>
			<xsd:documentation>
    ReferencedDocument is a [relationship] where one DocumentReferencingItem relates to a DocumentItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReferencedDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docRole" type="referencedDocumentRole" nillable="true" minOccurs="0"/>
			<xsd:element name="docPortion" type="referencedDocumentPortion" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="docItem" type="documentItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="docasg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="referencedOrganization">
		<xsd:annotation>
			<xsd:documentation>
    ReferencedOrganization is a [relationship] where one OrganizationReferencingItem relates to an Organization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReferencedOrganization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="orgRole" type="referencedOrganizationRole" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="reforg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="releasedDataSetAssociatedWith">
		<xsd:annotation>
			<xsd:documentation>
    ReleasedDataSetAssociatedWith is a [relationship] that allows to associate DataSetAsReleased with an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReleasedDataSetAssociatedWith</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="rDataAssoc" type="releasedDataSetAssociatedWithType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="relData" type="releasedDataSetItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="reldataass[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="repeatDefinition">
		<xsd:annotation>
			<xsd:documentation>
    RepeatDefinition is a [class] that represents the set of circumstances which define the PeriodicTimeLimit.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RepeatDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="thld" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:group ref="thresholdDefinitionNonAbstractClasses"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="trig" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:group ref="thresholdDefinitionNonAbstractClasses"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="sampls" type="samplingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="repdef[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="report">
		<xsd:annotation>
			<xsd:documentation>
    Report is a Document that provides information about the execution of certain activities or significant events that have taken place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Report</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="rptPeriod" type="reportPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="rptItem" type="reportableItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="rptCxt" type="reportContext" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptParty" type="reportParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableActivity">
		<xsd:annotation>
			<xsd:documentation>
    ReportableActivity is a class that represents an activity which is part of a work item that is deemed to be of sufficient importance as to be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportableActivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="rptActId" type="reportableActivityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="rptActDate" type="reportableActivityReportingDate" nillable="true" minOccurs="0"/>
			<xsd:element name="rptActPeriod" type="reportableActivityPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="rptActDescr" type="reportableActivityDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="rptActPty" type="reportableActivityParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="rptact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableActivityParty">
		<xsd:annotation>
			<xsd:documentation>
    ReportableActivityParty is a [relationship] that identifies a ReportableActivity stakeholder.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportableActivityParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="ptyRole" type="reportableActivityPartyRole"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="rptaparty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableMetric">
		<xsd:annotation>
			<xsd:documentation>
    ReportableMetric is a measure of a specific characteristic that can evolve over time and is reported periodically for program or contract management 
    purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportableMetric</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="metricId" type="reportableMetricIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="metricType" type="reportableMetricType" nillable="true" minOccurs="0"/>
			<xsd:element name="period" type="reportableMetricPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="metric" type="reportableMetricValue" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="reportableMetricDescription" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="prfmPRevRef" type="performanceParameterRevisionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="rptm[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportContext">
		<xsd:annotation>
			<xsd:documentation>
    ReportContext is a [relationship] that associates a Report to its context.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportContext</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="rptCxtItem" type="reportContextItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="rptctxt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedIssue">
		<xsd:annotation>
			<xsd:documentation>
    ReportedIssue is a [class] that specifies an important subject or problem for debate or discussion.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportedIssue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="issId" type="reportedIssueIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="issTitle" type="reportedIssueTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="issDescr" type="reportedIssueDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="issCat" type="reportedIssueCategory" nillable="true" minOccurs="0"/>
			<xsd:element name="issDate" type="reportedIssueDate" nillable="true" minOccurs="0"/>
			<xsd:element name="issPrio" type="reportedIssuePriority" nillable="true" minOccurs="0"/>
			<xsd:element name="issStatus" type="reportedIssueStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="issDcsn" type="reportedIssueDecisionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="repissue[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedMetric">
		<xsd:annotation>
			<xsd:documentation>
    ReportedMetric is a class that represents the measure of a specific characteristic that can evolve over time and is reported periodically for program or 
    contract management purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportedMetric</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="metrId" type="reportedMetricIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="metrType" type="reportedMetricType" nillable="true" minOccurs="0"/>
			<xsd:element name="metrPeriod" type="reportedMetricPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="metrVal" type="reportedMetricValue" nillable="true" minOccurs="0"/>
			<xsd:element name="metrDescr" type="reportedMetricDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="prfmPRevRef" type="performanceParameterRevisionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="repmet[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportParty">
		<xsd:annotation>
			<xsd:documentation>
    ReportParty is a [relationship] that allows a ReportingParty to be associated to a Report.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="rptPtyRole" type="reportPartyRole" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="repParty" type="reportingParty" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="rptparty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requiredDisposalPolicy">
		<xsd:annotation>
			<xsd:documentation>
    RequiredDisposalPolicy is a [relationship] that allows to indicate the policies to be applied when disposing of an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RequiredDisposalPolicy</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="mandate" type="requiredDisposalPolicyMandate" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="polRegRef" type="policiesAndRegulationsRef" minOccurs="0"/>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="disppol[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requiredFleetRole">
		<xsd:annotation>
			<xsd:documentation>
    RequiredFleetRole is a [relationship] that allows to define the OperationalRoles that a FleetRequirement must meet.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RequiredFleetRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="avail" type="requiredFleetRoleAvailability" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="opRoleRef" type="operationalRoleRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="reqflr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requiredPartStockLevelInPool">
		<xsd:annotation>
			<xsd:documentation>
    RequiredPartStockLevelInPool is a [relationship] that defines the number of parts that must be stored in a Pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RequiredPartStockLevelInPool</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqStockLev" type="requiredPartStockLevelValue" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="reqpslp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requiredSafetyAction">
		<xsd:annotation>
			<xsd:documentation>
    RequiredSafetyAction is a [class] representing the action to be taken as part of a SpecialSafetyInstruction so as to ensure the Product safety.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RequiredSafetyAction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="actnId" type="actionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="actnCat" type="actionCategory" nillable="true" minOccurs="0"/>
			<xsd:element name="actnDescr" type="actionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="actnPrio" type="actionPriority" nillable="true" minOccurs="0"/>
			<xsd:element name="creaDate" type="actionCreationDate" nillable="true" minOccurs="0"/>
			<xsd:element name="scheDate" type="actionScheduledDate" nillable="true" minOccurs="0"/>
			<xsd:element name="closDate" type="actionCloseDate" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="reqSafeImp" type="requiredSafetyActionImplementation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="action[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirement">
		<xsd:annotation>
			<xsd:documentation>
    Requirement is a documented need that has to be implemented.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Requirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementParty">
		<xsd:annotation>
			<xsd:documentation>
    RequirementParty is a [relationship] that associates a Requirement with a Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RequirementParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="role" type="requirementPartyRole" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="reqpty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementRelationship">
		<xsd:annotation>
			<xsd:documentation>
    RequirementRelationship is a [relationship] that defines the association between two Requirements.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RequirementRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="requirementRelationshipType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="reqRelReq" type="requirementRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="reqrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecification">
		<xsd:annotation>
			<xsd:documentation>
    ResourceSpecification is a [class] that defines a resource by its characteristics.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ResourceSpecification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="specId" type="resourceSpecificationIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="specType" type="resourceSpecificationType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="resSpecRev" type="resourceSpecificationRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="ressp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationRealization">
		<xsd:annotation>
			<xsd:documentation>
    ResourceSpecificationRealization is a [relationship] where a ResourceSpecification relates to an instance of ResourceSpecificationRealizationItem that 
    fulfills the ResourceSpecification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ResourceSpecificationRealization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="resrz[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationRevision">
		<xsd:annotation>
			<xsd:documentation>
    ResourceSpecificationRevision is a [class] representing an iteration applied to a ResourceSpecification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ResourceSpecificationRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="resourceSpecificationRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="specName" type="resourceSpecificationName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="specDescr" type="resourceSpecificationDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="resourceSpecificationRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="resourceSpecificationRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="resourceSpecificationRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="resSpecReal" type="resourceSpecificationRealization" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="resspecrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceUsageParty">
		<xsd:annotation>
			<xsd:documentation>
    ResourceUsageParty is a [relationship] that defines which party request which one to use a resource.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ResourceUsageParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="role" type="resourceUsagePartyRole" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="resup[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceUsageRequest">
		<xsd:annotation>
			<xsd:documentation>
    ResourceUsageRequest is a class representing a demand from a party to use a resource belonging to a different party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ResourceUsageRequest</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="resourceUsageRequestIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="reqDate" type="resourceUsageRequestDate" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="resourceUsageRequestDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="resourceUsageRequestName" nillable="true" minOccurs="0"/>
			<xsd:element name="period" type="resourceUsageRequestPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="resourceUsageRequestStatus" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="resItem" type="resourceItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="resup" type="resourceUsageParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrRef" type="contractRef" minOccurs="0"/>
			<xsd:element name="budgRef" type="budgetRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="resusr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="restriction">
		<xsd:annotation>
			<xsd:documentation>
    Restriction is a class that specifies a reduced capability or restriction that applies to an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Restriction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="restrId" type="restrictionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="restrName" type="restrictionName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="restrDescr" type="restrictionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="restrType" type="restrictionType" nillable="true" minOccurs="0"/>
			<xsd:element name="restrQualif" type="restrictionQualifier" nillable="true" minOccurs="0"/>
			<xsd:element name="restrVal" type="restrictionValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="valLimQual" type="restrictionValueLimitQualifier" nillable="true" minOccurs="0"/>
			<xsd:element name="restrIssOrg" type="restrictionIssuingOrganization" nillable="true" minOccurs="0"/>
			<xsd:element name="restrPeriod" type="restrictionPeriod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="prfmParaRef" type="performanceParameterRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="restr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resultingDataModule">
		<xsd:annotation>
			<xsd:documentation>
    ResultingDataModule is a [relationship] that identifies a data module issue in which a TaskRevision is further detailed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ResultingDataModule</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="s1000dDMIssRef" type="s1000DDataModuleIssueRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dmscop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="roleCapability">
		<xsd:annotation>
			<xsd:documentation>
    RoleCapability is a [relationship] that defines which product capabilities are provided by a specific OperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RoleCapability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="CapLvl" type="roleCapabilityLevel" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="capRef" type="capabilityRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="rolec[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="s1000DDataModule">
		<xsd:annotation>
			<xsd:documentation>
    S1000DDataModule is a Document that is written in accordance with an S1000D schema.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:S1000DDataModule</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="modelIdentCode" type="modelIdentificationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="systemDiffCode" type="systemDifferenceCode" nillable="true" minOccurs="0"/>
			<xsd:element name="micc" type="materialItemCategoryCode" nillable="true" minOccurs="0"/>
			<xsd:element name="systemCode" type="system" nillable="true" minOccurs="0"/>
			<xsd:element name="subSystemCode" type="subSystem" nillable="true" minOccurs="0"/>
			<xsd:element name="subSubSystemCode" type="subSubSystem" nillable="true" minOccurs="0"/>
			<xsd:element name="assyCode" type="assembly" nillable="true" minOccurs="0"/>
			<xsd:element name="disassyCode" type="disassemblyCode" nillable="true" minOccurs="0"/>
			<xsd:element name="disassyCodeVariant" type="disassemblyCodeVariant" nillable="true" minOccurs="0"/>
			<xsd:element name="infoCode" type="informationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="infoCodeVariant" type="informationCodeVariant" nillable="true" minOccurs="0"/>
			<xsd:element name="itemLocationCode" type="itemLocationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="learnCode" type="learnCode" nillable="true" minOccurs="0"/>
			<xsd:element name="learnEventCode" type="learnEventCode" nillable="true" minOccurs="0"/>
			<xsd:element name="extensionProducer" type="extensionProducer" nillable="true" minOccurs="0"/>
			<xsd:element name="extensionCode" type="extensionCode" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="s1000dDMIss" type="s1000DDataModuleIssue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="s1000DDataModuleIssue">
		<xsd:annotation>
			<xsd:documentation>
    S1000DDataModuleIssue is a DocumentIssue that identifies a specific issue of a data module produced in accordance with S1000D.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:S1000DDataModuleIssue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dociss[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="s1000DPublicationModule">
		<xsd:annotation>
			<xsd:documentation>
    S1000DPublicationModule is a Document that identifies a publication published in accordance with S1000D.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:S1000DPublicationModule</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="modelIdentCode" type="modelIdentificationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="pmIssuer" type="publicationModuleIssuer" nillable="true" minOccurs="0"/>
			<xsd:element name="pmNumber" type="publicationModuleNumber" nillable="true" minOccurs="0"/>
			<xsd:element name="pmVolume" type="publicationModuleVolume" nillable="true" minOccurs="0"/>
			<xsd:element name="extensionProducer" type="extensionProducer" nillable="true" minOccurs="0"/>
			<xsd:element name="extensionCode" type="extensionCode" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="s1000dPMIss" type="s1000DPublicationModuleIssue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="s1000DPublicationModuleIssue">
		<xsd:annotation>
			<xsd:documentation>
    S1000DPublicationModuleIssue is a DocumentIssue that identifies a specific issue of a publication module published in accordance with S1000D.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:S1000DPublicationModuleIssue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="dociss[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyDocument">
		<xsd:annotation>
			<xsd:documentation>
    SafetyDocument is a Document associated to the safety of an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SafetyDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="crit" type="safetyDocumentCriticality" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="safeItem" type="safetyItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyIssue">
		<xsd:annotation>
			<xsd:documentation>
    SafetyIssue is a SafetyDocument reporting a safety issue associated to the safety of a Product, Service or Part (hardware or software) item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SafetyIssue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="crit" type="safetyDocumentCriticality" nillable="true" minOccurs="0"/>
			<xsd:element name="idTime" type="safetyIssueFirstIdentificationDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="repTime" type="safetyIssueReportingDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="assBy" type="safetyIssueAssessmentBy" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="safeIssEv" type="safetyIssueEvent" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="safeItem" type="safetyItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyIssueEvent">
		<xsd:annotation>
			<xsd:documentation>
    SafetyIssueEvent is a [relationship] that allows to associate a SafetyIssue to associated Events.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SafetyIssueEvent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="evRef" type="eventRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="safeissev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyRequirement">
		<xsd:annotation>
			<xsd:documentation>
    SafetyRequirement is a Requirement that has to be applied for safety purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SafetyRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyRequirementsDocument">
		<xsd:annotation>
			<xsd:documentation>
    SafetyRequirementsDocument is a SafetyDocument that defines the necessary SafetyRequirements for a specific purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SafetyRequirementsDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="crit" type="safetyDocumentCriticality" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="docReq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="safeReqRef" type="safetyRequirementRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="safeItem" type="safetyItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyWarning">
		<xsd:annotation>
			<xsd:documentation>
    SafetyWarning is a SafetyDocument that provides information about potential safety issues associated to a Product, service or hardware or software items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SafetyWarning</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="crit" type="safetyDocumentCriticality" nillable="true" minOccurs="0"/>
			<xsd:element name="prior" type="safetyWarningPriority" nillable="true" minOccurs="0"/>
			<xsd:element name="apDate" type="safetyWarningAplicabilityDates" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="safeissRef" type="safetyIssueRef" minOccurs="0"/>
			<xsd:element name="safeItem" type="safetyItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sCORMContentPackage">
		<xsd:annotation>
			<xsd:documentation>
    SCORMContentPackage is a specialization of class Document and represents a SCORM content package.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SCORMContentPackage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="securityClass">
		<xsd:annotation>
			<xsd:documentation>
    SecurityClass is a [class] that identifies a level of confidentiality which can be used to protect something against unauthorized access.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SecurityClass</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="secClass" type="securityClassValue" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="scc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="securityClassification">
		<xsd:annotation>
			<xsd:documentation>
    SecurityClassification is a [relationship] that associates a given SecurityClass with the item that must be protected against unauthorized access or 
    distribution
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SecurityClassification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="secAuth" type="securityClassificationAuthority"/>
			<xsd:element name="secDate" type="securityClassificationDate" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="secClassDefRef" type="securityClassRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="sc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sensor">
		<xsd:annotation>
			<xsd:documentation>
    Sensor is an individual SensorType that has a unique identity and can be used to measure values of a specific type.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Sensor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="sensId" type="sensorIdentifier"/>
			<xsd:element name="name" type="sensorName" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="snsrsmp" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="snsrsmpRef" type="sensorSampleRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="serialPVRef" type="serializedProductVariantRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="snsr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sensorSample">
		<xsd:annotation>
			<xsd:documentation>
    SensorSample is a particular reading of an individual sensor at a specific point in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SensorSample</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="mPointId" type="measurementPointIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="mPointVal" type="measurementPointValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="mode" type="sensorSamplingMode" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="mPointDefRef" type="measuringPointDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="mpoint[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sensorType">
		<xsd:annotation>
			<xsd:documentation>
    SensorType is HardwarePartAsDesigned that measures physical events and provides the information to external devices.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SensorType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="partName" type="partName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="exportControl" type="partExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="majorComp" type="partMajorComponent" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="partDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detRange" type="sensorDetectionRange" nillable="true" minOccurs="0"/>
			<xsd:element name="sensRate" type="sensorSamplingRate" nillable="true" minOccurs="0"/>
			<xsd:element name="sensit" type="sensorSensitivity" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="partcd" type="hardwarePartAsDesignedCommerceData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartDsgnData" type="hardwarePartDefinitionDesignData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartSupData" type="hardwarePartDefinitionSupportData" nillable="true" minOccurs="0"/>
			<xsd:element name="partCntrlData" type="partDefinitionControlledItemData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="partsList" type="partDefinitionPartsList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="snsr" type="sensor" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="altPart" type="alternatePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePart">
		<xsd:annotation>
			<xsd:documentation>
    SerializedHardwarePart is [class] that represent an actual physical part which can be identified as an individual.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedHardwarePart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partDefinitionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="serialId" type="serializedPartIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="manufDate" type="serializedHardwarePartManufacturingDate" nillable="true" minOccurs="0"/>
			<xsd:element name="servPeriod" type="serializedHardwarePartInServicePeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="authLife" type="serializedHardwarePartAuthorizedLife" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dim" type="serializedHardwarePartDimensions" nillable="true" minOccurs="0"/>
			<xsd:element name="weight" type="serializedHardwarePartWeight" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="serializedHardwarePartDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="eqst" type="equipmentStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="calib" type="calibration" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serPartPos" type="serializedPartsListPosition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="eqOp" type="equipmentOperation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="eqOwn" type="equipmentOwner" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="partOwner" type="partOwner" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="partMod" type="serializedHardwarePartModification" nillable="true" minOccurs="0"/>
			<xsd:element name="spda" type="serializedPartDesignAssociation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infItem" type="infrastructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itemDam" type="itemDamage" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="serItm" type="serializedItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="spart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePartModification">
		<xsd:annotation>
			<xsd:documentation>
    SerializedHardwarePartModification is a [relationship] where a modified SerializedHardwarePart relates back to its previous design standard and its history.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedHardwarePartModification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="modDate" type="serializedHardwarePartModificationDate" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="shwmodof[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedItemOwner">
		<xsd:annotation>
			<xsd:documentation>
    SerializedItemOwner is a [relationship] describing the party holding the partial or total ownership of an item implementing the SerializedItem [interface].
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedItemOwner</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="ownedFor" type="serializedItemOwnerDuring" nillable="true" minOccurs="0"/>
			<xsd:element name="ratio" type="serializedItemOwnerRatio" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="siow[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedPartDesignAssociation">
		<xsd:annotation>
			<xsd:documentation>
    SerializedPartDesignAssociation is a [relationship] that associates a SerializedHardwarePart to the HardwarePartAsDesigned that defines its functionality 
    during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedPartDesignAssociation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="spEffPeriod" type="serializedPartEffectivityPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="spda[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedPartsListPosition">
		<xsd:annotation>
			<xsd:documentation>
    SerializedPartsListPosition is a [class] that represents a position within the associated SerializedHardwarePart.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedPartsListPosition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="posId" type="serializedPartsListPositionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="posName" type="serializedPartsListPositionName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="instparts" type="installedPartItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="serplpos[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductOperationalPeriod">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductOperationalPeriod is a [relationship] that describes the specific operational role of a SerializedProductVariant during a particular 
    operational period.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedProductOperationalPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="spopmode" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="opmRef" type="operationalModeRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="spoprole" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="opRoleRef" type="operationalRoleRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="oppRef" type="operationalPeriodRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="sproop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariant">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariant is [class] that represent an actual product variant which is identified as an individual.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedProductVariant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="prodId" type="productDefinitionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="prodVarId" type="productVariantDefinitionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="serPVId" type="serializedProductVariantIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="serPVDescr" type="serializedProductVariantDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serPVDim" type="serializedProductVariantDimensions" nillable="true" minOccurs="0"/>
			<xsd:element name="serPVMass" type="serializedProductVariantMass" nillable="true" minOccurs="0"/>
			<xsd:element name="entryInServ" type="serializedProductVariantEntryIntoServiceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="endOfServ" type="serializedProductVariantEndOfServiceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="manufOrg" type="serializedProductVariantManufacturer" nillable="true" minOccurs="0"/>
			<xsd:element name="manufDate" type="serializedProductVariantManufacturingDate" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="serialPVOpAp" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="opapRef" type="operationalApprovalRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="serialPVOpev" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="opevRef" type="operationalEventRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="dwnTP" type="downTimePeriod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="instLoc" type="installationLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="mc" type="majorComponent" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="nstspv" type="nestedSerializedProductVariant" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="plpil" type="plannedPartInstallationLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="sproop" type="serializedProductOperationalPeriod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serPVConf" type="serializedProductVariantConfigurationConformance" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="inFleet" type="serializedProductVariantInFleet" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="spvob" type="serializedProductVariantOperatingBase" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serPVoper" type="serializedProductVariantOperator" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opRoleRef" type="operationalRoleRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infItem" type="infrastructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itemDam" type="itemDamage" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="opTimeItem" type="operationalTimeItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="usePhses" type="productUsagePhaseItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="serItm" type="serializedItem" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="traass" type="transportingAsset" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="serialpv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantAssignment">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariantAssignment is a [relationship] between a FleetTask and the vehicle that has been assigned to perform that FleetTask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedProductVariantAssignment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="assId" type="serializedProductVariantAssignmentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="assDate" type="serializedProductVariantAssignmentDate" nillable="true" minOccurs="0"/>
			<xsd:element name="assType" type="serializedProductVariantAssignmentType" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="serializedProductVariantAssignmentStatus" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="serialPVRef" type="serializedProductVariantRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="spva[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantConfigurationConformance">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariantConfigurationConformance is a [relationship] that identifies the allowed product configuration to which the 
    SerializedProductVariant complies with during a defined period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedProductVariantConfigurationConformance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="startDate" type="configurationConformanceStartDateTime"/>
			<xsd:element name="endDate" type="configurationConformanceEndDateTime" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="allwdPCItem" type="allowedProductConfigurationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="pcconf[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantInFleet">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariantInFleet is a [relationship] that defines the association between a SerializedProductVariant and the Fleet to which it belongs.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedProductVariantInFleet</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="inFleet" type="serializedProductVariantInFleetDuring" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fleetRef" type="fleetRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="spvof[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantOperatingBase">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariantOperatingBase is a [relationship] that establishes in which OperatingBase a SerializedProductVariant has been operating during a 
    specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedProductVariantOperatingBase</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="opBasePer" type="serializedProductVariantOperatingBasePeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="opBaseRef" type="operatingBaseRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="spvob[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantOperator">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariantOperator is a [relationship] defining the operation of a SerializedProductVariant during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedProductVariantOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="operPeriod" type="serializedProductVariantOperatorPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="operItem" type="operatorItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="spvoper[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantZone">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariantZone is a [relationship] that allows to associate a Damage to a serialied ProductVariantZone.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedProductVariantZone</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="serialPVRef" type="serializedProductVariantRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itemDam" type="itemDamage" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="spvz[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedSupportEquipment">
		<xsd:annotation>
			<xsd:documentation>
    SerializedSupportEquipment is a SerialiedHardwarePart that is used exclusively for support purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedSupportEquipment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partDefinitionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="serialId" type="serializedHardwarePartIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="batchId" type="serializedHardwarePartBatchIdentifier" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="manufDate" type="serializedHardwarePartManufacturingDate" nillable="true" minOccurs="0"/>
			<xsd:element name="servPeriod" type="serializedHardwarePartInServicePeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="authLife" type="serializedHardwarePartAuthorizedLife" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dim" type="serializedHardwarePartDimensions" nillable="true" minOccurs="0"/>
			<xsd:element name="weight" type="serializedHardwarePartWeight" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="serializedHardwarePartDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="eqst" type="equipmentStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="calib" type="calibration" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="serPartPos" type="serializedPartsListPosition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="shopf" type="shopFindings" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="eqOp" type="equipmentOperation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="eqOwn" type="equipmentOwner" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="partOwner" type="partOwner" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="partMod" type="serializedHardwarePartModification" nillable="true" minOccurs="0"/>
			<xsd:element name="spda" type="serializedPartDesignAssociation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infItem" type="infrastructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itemDam" type="itemDamage" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="serItm" type="serializedItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="spart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serialNumberRange">
		<xsd:annotation>
			<xsd:documentation>
    SerialNumberRange is a [compoundAttribute] that identifies an interval of serialized items. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerialNumberRange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="lowBound" type="nonEmptyString" nillable="true" minOccurs="0"/>
			<xsd:element name="uppBound" type="nonEmptyString" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="service">
		<xsd:annotation>
			<xsd:documentation>
    Service is a contract where technical or intellectual work is performed but no delivery of goods takes place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Service</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="servReq" type="serviceRequest" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="servc" type="serviceContract" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="budgtItem" type="budgetingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="serv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceBulletin">
		<xsd:annotation>
			<xsd:documentation>
    ServiceBulletin is a class representing a set of documentation, material, spares and possibly other resources required to embody a change embodiment 
    requirement into a ProductVariant or SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ServiceBulletin</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="sbType" type="serviceBulletinType" nillable="true" minOccurs="0"/>
			<xsd:element name="priority" type="serviceBulletinPriority" nillable="true" minOccurs="0"/>
			<xsd:element name="limit" type="serviceBulletinEmbodimentLimit" nillable="true" minOccurs="0"/>
			<xsd:element name="cost" type="serviceBulletinCost" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceContract">
		<xsd:annotation>
			<xsd:documentation>
    ServiceContract is a  [relationship] that allows a service being provided to be associated to a specific contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ServiceContract</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="period" type="serviceContractPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="contrRef" type="contractRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="servc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceLevelAgreementClause">
		<xsd:annotation>
			<xsd:documentation>
    ServiceLevelAgreementClause is a contractual clause related to a service that determines the level of service to be provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ServiceLevelAgreementClause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="clauseId" type="contractClauseIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="clauseDescr" type="contractClauseDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="clausePeriod" type="contractClauseValidityPeriod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="slaDescr" type="serviceLevelAgreementClauseDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="clauseRel" type="contractClauseRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="siw" type="itemWarranty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="labRate" type="laborRates" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="budgtItem" type="budgetingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="contrLabors" type="contractLaborItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="contrc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequest">
		<xsd:annotation>
			<xsd:documentation>
    ServiceRequest is a class representing a demand from one party to another partyto provide a service.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ServiceRequest</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="serviceRequestIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="reqTime" type="serviceRequestDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="serviceRequestDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="serviceRequestName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="serviceRequestType" nillable="true" minOccurs="0"/>
			<xsd:element name="prior" type="serviceRequestPriority" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="srvReqReq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="reqRef" type="requirementRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="servReqItem" type="serviceRequestItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servrl" type="serviceRequestLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="servrp" type="serviceRequestParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="srvReqr" type="serviceRequestRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rptActRef" type="reportableActivityRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="servreq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestCancellation">
		<xsd:annotation>
			<xsd:documentation>
    ServiceRequestCancellation is a [class] that allows to cancel one or more Services by a Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ServiceRequestCancellation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="canId" type="serviceRequestCancellationIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="reason" type="serviceRequestCancellationReason" nillable="true" minOccurs="0"/>
			<xsd:element name="canDet" type="serviceRequestCancellationDetails" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="servReqRef" type="serviceRequestRef" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="servrc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestItem">
		<xsd:annotation>
			<xsd:documentation>
    ServiceRequestItem is a [relationship] that allows to associate one or several items of a same type to a ServiceRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ServiceRequestItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="qty" type="serviceRequestItemQuantity" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="servItem" type="serviceItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="sereit[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestLocation">
		<xsd:annotation>
			<xsd:documentation>
    ServiceRequestLocation is a [relationship] stating the locating where a ServiceRequest has to be complied with.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ServiceRequestLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="locFor" type="serviceRequestLocationDuring" nillable="true" minOccurs="0"/>
			<xsd:element name="note" type="serviceRequestLocationNotes" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="locItem" type="locationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="servrl[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestParty">
		<xsd:annotation>
			<xsd:documentation>
    ServiceRequestParty is a [relationship] that associates a ServiceRequest to the party that has demanded it or has to provide it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ServiceRequestParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="role" type="serviceRequestPartyRole" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="servrp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestRelationship">
		<xsd:annotation>
			<xsd:documentation>
    ServiceRequestRelationship is a  [relationship] that indicates the association between two different ServiceRequests.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ServiceRequestRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="relType" type="serviceRequestRelationshipType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="servReqRef" type="serviceRequestRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="srvreqr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="shopFindings">
		<xsd:annotation>
			<xsd:documentation>
    ShopFindings is a class representing the results of a fault investigation performed on an equipment in a workshop.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ShopFindings</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="findId" type="shopFindingsIdentifier"/>
			<xsd:element name="recDate" type="shopReceivedDate" nillable="true" minOccurs="0"/>
			<xsd:element name="reason" type="reasonForShopSubmission" nillable="true" minOccurs="0"/>
			<xsd:element name="faultCode" type="shopFindingsFaultCode" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="faultConf" type="shopFindingsFaultConfirmed" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="shopFindingsDescription" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="fail" type="failure" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="shopfd" type="shopFindingsDeterminedBy" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrRef" type="contractRef" minOccurs="0"/>
			<xsd:element name="facilityRef" type="facilityRef" minOccurs="0"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="shopf[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="shopFindingsDeterminedBy">
		<xsd:annotation>
			<xsd:documentation>
    ShopFindingsDeterminedBy is a [relationship] that allows ShopFindings to be associated to the DetectionMeans that allowed such findings.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ShopFindingsDeterminedBy</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="det" type="detector" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="shopfd[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="singleValuePropertyType">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:SingleValuePropertyType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="skill">
		<xsd:annotation>
			<xsd:documentation>
    Skill is a [class] that represents human cognitive, psychomotor, and affective abilities. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Skill</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="skillCode" type="skillCode"/>
			<!-- UML-Extends -->
			<xsd:element name="compFrwks" type="competencyFrameworkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="skill[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="skillLevel">
		<xsd:annotation>
			<xsd:documentation>
    SkillLevel is a [class] that represents a defined proficiency of a Trade.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SkillLevel</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="skLvlName" type="skillLevelName" maxOccurs="unbounded"/>
			<xsd:element name="skLvlDescr" type="skillLevelDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="compFrwks" type="competencyFrameworkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="sklev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareElement">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareElement is a BreakdownElement that is realized as a SoftwarePartDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SoftwareElement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="beId" type="breakdownElementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="beSwType" type="softwareElementType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="beInZones" type="breakdownElementInZoneItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infItem" type="infrastructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="be[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareElementPartRealization">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareElementPartRealization is a [relationship] where a SoftwareElementRevision relates to an instance of SoftwarePartDefinition which fulfills the 
    SoftwareElement specification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SoftwareElementPartRealization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="swPartRef" type="softwarePartDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="allwdPCEfys" type="effectiveOnProductConfigurationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="usableOns" type="usableOnItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="swr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareElementRevision">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareElementRevision is a BreakdownElementRevision representing an iteration applied to a SoftwareElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SoftwareElementRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="breakdownElementRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="beName" type="breakdownElementName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beDescr" type="breakdownElementDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beEsc" type="breakdownElementEssentiality" nillable="true" minOccurs="0"/>
			<xsd:element name="beMsi" type="maintenanceSignificantOrRelevant" nillable="true" minOccurs="0"/>
			<xsd:element name="revRtnle" type="breakdownElementRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="breakdownElementRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="breakdownElementRevisionStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="swSize" type="softwareElementSize" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swModFreq" type="softwareElementModificationFrequency" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="beRel" type="breakdownElementRevisionRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beSwReal" type="softwareElementPartRealization" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="beInZones" type="breakdownElementInZoneItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="ber[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareError">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareError is a [class] that represents a fault detected during the execution of a SoftwarePartAsReleased.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SoftwareError</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="errId" type="softwareErrorIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="reproc" type="softwareErrorReproducibility" nillable="true" minOccurs="0"/>
			<xsd:element name="sever" type="softwareErrorSeverity" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="softwareErrorName" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="softwareErrorDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="steps" type="softwareErrorStepsToReproduce" nillable="true" minOccurs="0"/>
			<xsd:element name="errTime" type="softwareErrorDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="fixPri" type="softwareErrorFixPriority" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="swerros" type="softwareErrorOS" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swerrp" type="softwareErrorPlatform" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swErrInSW" type="softwarePartAsReleasedRef" minOccurs="0"/>
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="swerr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorOS">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareErrorOS is a [relationship] that indicates the operating system on which a SoftwarePartAsReleased was executing when a SoftwareError was detected.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SoftwareErrorOS</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="swErrOsPart" type="softwarePartAsReleasedRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="swerros[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorPlatform">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareErrorPlatform is a [relationship] that indicates the HardwarePartAsDesigned on which a SoftwarePartAsReleased was executing when a SoftwareError 
    was detected.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SoftwareErrorPlatform</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="swerrp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareOS">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareOS is a [relationship] that defines the operating system on which a SoftwarePartAsReleased executes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SoftwareOS</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="swOSPart" type="softwarePartAsReleasedRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="swos[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwarePartAsReleased">
		<xsd:annotation>
			<xsd:documentation>
    SoftwarePartAsReleased is [class] that represents actual build of a software which is delivered.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SoftwarePartAsReleased</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partDefinitionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="swRelId" type="softwareReleaseIdentifier"/>
			<xsd:element name="relDate" type="softwarePartAsReleasedDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="chkSum" type="softwarePartAsReleasedChecksum" nillable="true" minOccurs="0"/>
			<xsd:element name="relSize" type="softwarePartAsReleasedSize" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="softwarePartAsReleasedDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="swos" type="softwareOS" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swpl" type="softwarePlatform" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="swPartRef" type="softwarePartDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infItem" type="infrastructureItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="relswpart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwarePartDefinition">
		<xsd:annotation>
			<xsd:documentation>
    SoftwarePartDefinition is a PartDefinition that is produced as an executable software or as a data file.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SoftwarePartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="partName" type="partName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="partcd" type="hardwarePartAsDesignedCommerceData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartDsgnData" type="hardwarePartDefinitionDesignData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartSupData" type="hardwarePartDefinitionSupportData" nillable="true" minOccurs="0"/>
			<xsd:element name="partCntrlData" type="partDefinitionControlledItemData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="partsList" type="partDefinitionPartsList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="altPart" type="alternatePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwarePlatform">
		<xsd:annotation>
			<xsd:documentation>
    SoftwarePlatform is a [relationship] that indicates the HardwarePartAsDesigned on which a SoftwarePartAsReleased can execute.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SoftwarePlatform</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="swpl[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="specialEventDefinition">
		<xsd:annotation>
			<xsd:documentation>
    SpecialEventDefinition is a [class] that represents a typical happening which can be induced to the item under analysis during its normal operation, and 
    can lead to damages.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SpecialEventDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="spEvName" type="specialEventDefinitionName" maxOccurs="unbounded"/>
			<xsd:element name="spEvCat" type="specialEventDefinitionCauseCategory" nillable="true" minOccurs="0"/>
			<xsd:element name="spEvDescr" type="specialEventDefinitionDecription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="spEvOccVal" type="specialEventDefinitionOccurrenceValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="speed[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="specialSafetyInstruction">
		<xsd:annotation>
			<xsd:documentation>
    SpecialSafetyInstruction is a SafetyDocument providing specific mandatory instructions to be followed in addition to those existing in the standard 
    documentation so as that special safety issues can be addressed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SpecialSafetyInstruction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docId" type="documentIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="docType" type="documentType" nillable="true" minOccurs="0"/>
			<xsd:element name="docTitle" type="documentTitle" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDescr" type="documentDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docDate" type="documentIssuanceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="docStatus" type="documentStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="crit" type="safetyDocumentCriticality" nillable="true" minOccurs="0"/>
			<xsd:element name="prior" type="specialSafetyInstructionPriority" nillable="true" minOccurs="0"/>
			<xsd:element name="appDate" type="specialSafetyInstructionApplicabilityDates" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="ssafeinsReqsa" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="reqsaRef" type="requiredSafetyActionRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="safeissRef" type="safetyIssueRef" minOccurs="0"/>
			<xsd:element name="safeItem" type="safetyItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docChar" type="documentCharacteristicItem" nillable="true" minOccurs="0"/>
			<xsd:element name="docPtys" type="documentPartyItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sphere">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:Sphere</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="sphDiam" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:unit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="stateType">
		<xsd:annotation>
			<xsd:documentation>
    StateType is an S-Series IPS specifications defined [primitive] that represents a particular condition that something is in at a particular time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:StateType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="nonEmptyString" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="strainGauge">
		<xsd:annotation>
			<xsd:documentation>
    StrainGauge is a SensorType whose resistance varies with applied force; it converts force, pressure, tension, weight, etc, into a change in electrical 
    resistance which can then be measured.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:StrainGauge</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="partName" type="partName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="exportControl" type="partExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="majorComp" type="partMajorComponent" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="partDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detRange" type="sensorDetectionRange" nillable="true" minOccurs="0"/>
			<xsd:element name="sensRate" type="sensorSamplingRate" nillable="true" minOccurs="0"/>
			<xsd:element name="sensit" type="sensorSensitivity" nillable="true" minOccurs="0"/>
			<xsd:element name="factor" type="strainGaugeFactor" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="partcd" type="hardwarePartAsDesignedCommerceData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartDsgnData" type="hardwarePartDefinitionDesignData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartSupData" type="hardwarePartDefinitionSupportData" nillable="true" minOccurs="0"/>
			<xsd:element name="partCntrlData" type="partDefinitionControlledItemData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="partsList" type="partDefinitionPartsList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="snsr" type="sensor" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="altPart" type="alternatePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="streetAddress">
		<xsd:annotation>
			<xsd:documentation>
    StreetAddress is a [class&gt; that represents a locatable position along a road. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:StreetAddress</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="streetName" type="streetName" maxOccurs="unbounded"/>
			<xsd:element name="streetNr" type="streetNumber"/>
			<xsd:element name="cityName" type="cityName" maxOccurs="unbounded"/>
			<xsd:element name="postCode" type="postalCode"/>
			<xsd:element name="addInfo" type="additionalAddressInformation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="openingTime" type="openingTimes" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="locRels" type="location" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="straddr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinition">
		<xsd:annotation>
			<xsd:documentation>
    SubstanceDefinition is a [class] that identifies high concern physical matter.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubstanceDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="subsRev" type="substanceDefinitionRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="subs[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionRevision">
		<xsd:annotation>
			<xsd:documentation>
    SubstanceDefinitionRevision is a [class] representing an iteration applied to a SubstanceDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubstanceDefinitionRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="substanceDefinitionRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="subsName" type="substanceDefinitionName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subsDescr" type="substanceDefinitionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subsHaz" type="substanceDefinitionHazardousClass" nillable="true" minOccurs="0"/>
			<xsd:element name="packGrp" type="substanceDefinitionPackingGroup" nillable="true" minOccurs="0"/>
			<xsd:element name="spProv" type="substanceDefinitionSpecialProvisionsClass" nillable="true" minOccurs="0"/>
			<xsd:element name="passLimQty" type="substanceDefinitionPassengerAirOrRailLimitedQuantity" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cargoLimQty" type="substanceDefinitionCargoAircraftLimitedQuantity" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="excptQty" type="substanceDefinitionExceptedQuantityClass" nillable="true" minOccurs="0"/>
			<xsd:element name="useCat" type="substanceDefinitionUsageCategory" nillable="true" minOccurs="0"/>
			<xsd:element name="riskDescr" type="substanceDefinitionRiskDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="riskFact" type="substanceDefinitionRiskFactor" nillable="true" minOccurs="0"/>
			<xsd:element name="revRtnle" type="substanceDefinitionRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="substanceDefinitionRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="substanceDefinitionRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="subsrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceEmission">
		<xsd:annotation>
			<xsd:documentation>
    SubstanceEmission is a [relationship] that allows to document emissions of one or several substances during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubstanceEmission</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="value" type="substanceEmissionValue" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="subsRef" type="substanceDefinitionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="subsem[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substitutePartDefinition">
		<xsd:annotation>
			<xsd:documentation>
    SubstitutePartDefinition is a [relationship] that defines a substitute PartDefinitionPartsListEntry which can replace the base PartDefinitionPartsListEntry 
    in the context of the parent PartDefinitionPartsListRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubstitutePartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="sbtpt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskByDefinition">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskByDefinition is a Subtask that provides detailed information of the defined work step.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubtaskByDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="subtId" type="subtaskIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="subtRole" type="subtaskRole" nillable="true" minOccurs="0"/>
			<xsd:element name="subtName" type="subtaskName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subtInfoCode" type="subtaskInformationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="subtDescr" type="subtaskDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subtDuration" type="subtaskDuration" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="maintLoc" type="subtaskMaintenanceLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="eiObjState" type="subtaskEndItemObjectiveState" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="cbSettings" type="circuitBreakerSettings" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="inZone" type="subtaskInZone" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="sourceDoc" type="subtaskSourceDocument" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="subtTarg" type="subtaskTarget" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="precSubt" type="subtaskTimeline" nillable="true" minOccurs="0"/>
			<xsd:element name="subtWcn" type="subtaskWarningCautionNote" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="subt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskByTaskReference">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskByTaskReference is a Subtask where the details of the subtask are defined as a separate Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubtaskByTaskReference</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="subtId" type="subtaskIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="subtRole" type="subtaskRole" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="precSubt" type="subtaskTimeline" nillable="true" minOccurs="0"/>
			<xsd:element name="subtWcn" type="subtaskWarningCautionNote" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskRef" type="taskRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="subt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskInZone">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskInZone is a [relationship] that identifies the zone where the Subtask is to be performed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubtaskInZone</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="beZoneRef" type="zoneElementRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="subtiz[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskSourceDocument">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskSourceDocument is a [relationship] that identifies an external Document where the Subtask is originally defined and more details are given.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubtaskSourceDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="docPortion" type="sourceDocumentPortion" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="docItem" type="documentItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="subtsrc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskTarget">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskTarget is a [relationship] that identifies the item on which the Subtask is to be performed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubtaskTarget</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="targItem" type="subtaskTargetItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="subttg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskTimeline">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskTimeline is a [relationship] that identifies that there is a time dependency between two Subtasks within the same Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubtaskTimeline</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="evnt" type="subtaskTimelineEvent" nillable="true" minOccurs="0"/>
			<xsd:element name="lag" type="subtaskTimelineLag" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="subtRef" type="subtaskRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="subtt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskWarningCautionNote">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskWarningCautionNote is a [relationship] that identifies a WarningCautionNote that is associated with a given Subtask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubtaskWarningCautionNote</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="wcnRef" type="warningCautionNoteRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="subwcn[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="suppliesUsed">
		<xsd:annotation>
			<xsd:documentation>
    SuppliesUsed is a [relationship] that describes the amount of supplies used for a MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SuppliesUsed</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="amount" type="suppliesUsedAmount" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="suppItem" type="supplyItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="suppused[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportEquipment">
		<xsd:annotation>
			<xsd:documentation>
    SupportEquipment is a HardwareElement used exclusively for support purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SupportEquipment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="partName" type="partName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="exportControl" type="partExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="majorComp" type="partMajorComponent" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="partDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="seqType" type="supportEquipmentType" nillable="true" minOccurs="0"/>
			<xsd:element name="power" type="supportEquipmentPower" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="calibReq" type="supportEquipmentCalibrationRequired" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="partcd" type="hardwarePartAsDesignedCommerceData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartDsgnData" type="hardwarePartDefinitionDesignData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartSupData" type="hardwarePartDefinitionSupportData" nillable="true" minOccurs="0"/>
			<xsd:element name="partCntrlData" type="partDefinitionControlledItemData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="partsList" type="partDefinitionPartsList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="altPart" type="alternatePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportEquipmentUsed">
		<xsd:annotation>
			<xsd:documentation>
    SupportEquipmentUsed is a [relationship] that defines the equipment that has been used to perform a specific MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SupportEquipmentUsed</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="amount" type="supportEquipmentUsedAmount" nillable="true" minOccurs="0"/>
			<xsd:element name="duration" type="supportEquipmentUsedDuration" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="supEqItem" type="supportEquipmentItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="suppewu[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportingTask">
		<xsd:annotation>
			<xsd:documentation>
    SupportingTask is a Task that does not meet a TaskRequirement, but identifies a set of work steps which will be carried out as part of multiple Tasks. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SupportingTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="taskId" type="taskIdentifier" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="taskRev" type="taskRevision" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="task[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportingTaskUsage">
		<xsd:annotation>
			<xsd:documentation>
    SupportingTaskUsage is a TaskUsage that expands the definition of an embedded reusable Task in the context of a given support solution.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SupportingTaskUsage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AttributeGroups -->
			<xsd:element name="taskFreq" type="taskFrequency" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="supTaskRef" type="supportingTaskRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="taskuse[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="tachometer">
		<xsd:annotation>
			<xsd:documentation>
    Tachometer is a SensorType that measures revolutions of a rotating item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Tachometer</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="partName" type="partName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="exportControl" type="partExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="majorComp" type="partMajorComponent" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="partDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detRange" type="sensorDetectionRange" nillable="true" minOccurs="0"/>
			<xsd:element name="sensRate" type="sensorSamplingRate" nillable="true" minOccurs="0"/>
			<xsd:element name="sensit" type="sensorSensitivity" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="partcd" type="hardwarePartAsDesignedCommerceData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartDsgnData" type="hardwarePartDefinitionDesignData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartSupData" type="hardwarePartDefinitionSupportData" nillable="true" minOccurs="0"/>
			<xsd:element name="partCntrlData" type="partDefinitionControlledItemData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="partsList" type="partDefinitionPartsList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="snsr" type="sensor" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="altPart" type="alternatePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskJustification">
		<xsd:annotation>
			<xsd:documentation>
    TaskJustification is a [relationship] that identifies a TaskRequirement that defines the need for the existence of a Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskJustification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="trRevRef" type="taskRequirementRevisionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="tjust[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskPersonnelResourceCompetence">
		<xsd:annotation>
			<xsd:documentation>
    TaskPersonnelResourceCompetence is a [relationship] that identifies the proficiency required for TaskPersonnelResource.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskPersonnelResourceCompetence</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="defComp" type="competencyDefinitionItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="tprc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirement">
		<xsd:annotation>
			<xsd:documentation>
    TaskRequirement is a [class] that represents the need for a procedure to be developed and documented.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="trId" type="taskRequirementIdentifier" maxOccurs="unbounded"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="authTaskReq" type="authorityDrivenTaskRequirement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="trRev" type="taskRequirementRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="treq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementJustification">
		<xsd:annotation>
			<xsd:documentation>
    TaskRequirementJustification is a [relationship] that identifies a source which defines the need for a task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskRequirementJustification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="justDescr" type="taskRequirementJustificationDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="justItem" type="taskRequirementJustificationItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="trjust[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementRevision">
		<xsd:annotation>
			<xsd:documentation>
    TaskRequirementRevision is a [class] representing an iteration applied to a TaskRequirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskRequirementRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="taskRequirementRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="trName" type="taskRequirementName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="trDescr" type="taskRequirementDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="spResReq" type="taskRequirementSpecialResourceRequirement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="trInfoCode" type="taskRequirementInformationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="chgDescr" type="taskRequirementRevisionChangeDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="taskRequirementRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="taskRequirementRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="taskRequirementRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="trJust" type="taskRequirementJustification" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="timeLimits" type="timeLimitItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="trrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRevision">
		<xsd:annotation>
			<xsd:documentation>
    TaskRevision is a [class] representing an iteration applied to a Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="taskRevisionIdentifier" nillable="true" minOccurs="0"/>
			<xsd:element name="taskDescr" type="taskRevisionDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="taskName" type="taskName" nillable="true" minOccurs="0"/>
			<xsd:element name="chgDescr" type="taskRevisionChangeDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="taskInfoCode" type="taskInformationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="taskDuration" type="taskDuration" nillable="true" minOccurs="0"/>
			<xsd:element name="laborTime" type="taskTotalLaborTime" nillable="true" minOccurs="0"/>
			<xsd:element name="revRtnle" type="taskRevisionRationale" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="taskRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:group ref="subtaskNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="resDM" type="resultingDataModule" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskJust" type="taskJustification" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="taskWcn" type="taskRevisionWarningCautionNote" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="maintReqRef" type="maintenanceRequirementRef" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="taskrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRevisionWarningCautionNote">
		<xsd:annotation>
			<xsd:documentation>
    TaskRevisionWarningCautionNote is a [relationship] that identifies a WarningCautionNote that is associated with a given Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskRevisionWarningCautionNote</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="wcnRef" type="warningCautionNoteRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="tskwcn[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="technicalOrder">
		<xsd:annotation>
			<xsd:documentation>
    TechnicalOrder is a WorkItem raised by Maintenance Engineering to carry out a change or maintenance on a SerializedItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TechnicalOrder</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="itemId" type="workItemIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="itemType" type="workItemType" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="workItemStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="period" type="workItemPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="workItemDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="toPri" type="technicalOrderPriority" nillable="true" minOccurs="0"/>
			<xsd:element name="implDate" type="technicalOrderRequiredImplementationDate" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="wiRpta" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="rptActRef" type="reportableActivityRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="costItemRef" type="costItemRef" minOccurs="0"/>
			<xsd:element name="servBuRef" type="serviceBulletinRef" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wi[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="technicalOrderEmbodied">
		<xsd:annotation>
			<xsd:documentation>
    TechnicalOrderEmbodied is a [relationship] that allows to report the WorkOrder that embodies a TechnicalOrder on the item on which it needs to be embodied.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TechnicalOrderEmbodied</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="embDate" type="technicalOrderEmbodimentDate" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="crItem" type="changeRequestItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="toemb[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="temperatureSensor">
		<xsd:annotation>
			<xsd:documentation>
    TemperatureSensor is a SensorType that measures temperature.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TemperatureSensor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partId" type="partIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="partName" type="partName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="exportControl" type="partExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="majorComp" type="partMajorComponent" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="partDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="detRange" type="sensorDetectionRange" nillable="true" minOccurs="0"/>
			<xsd:element name="sensRate" type="sensorSamplingRate" nillable="true" minOccurs="0"/>
			<xsd:element name="sensit" type="sensorSensitivity" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="partcd" type="hardwarePartAsDesignedCommerceData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartDsgnData" type="hardwarePartDefinitionDesignData" nillable="true" minOccurs="0"/>
			<xsd:element name="hwPartSupData" type="hardwarePartDefinitionSupportData" nillable="true" minOccurs="0"/>
			<xsd:element name="partCntrlData" type="partDefinitionControlledItemData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="partsList" type="partDefinitionPartsList" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="snsr" type="sensor" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="altPart" type="alternatePartDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="bkdns" type="breakdownItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="stpt" type="storedPart" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trckPrt" type="trackablePart" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="textPropertyType">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:TextPropertyType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="timeStampedClassification">
		<xsd:annotation>
			<xsd:documentation>
    TimeStampedClassification is [compoundAttribute] that represents a classification in conjunction with its recording time stamp. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TimeStampedClassification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="nonEmptyString" nillable="true"/>
			<xsd:element name="classDate" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="timeType">
		<xsd:annotation>
			<xsd:documentation>
    TimeType is an S-Series IPS specifications defined [primitive&gt; that represent the time of a day without specifying the date or day. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TimeType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="time" type="xsd:time" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="trade">
		<xsd:annotation>
			<xsd:documentation>
    Trade is a [class] that represents a craft or profession which requires specific skills.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Trade</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="tradeName" type="tradeName" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="skillLevel" type="skillLevel" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="compFrwks" type="competencyFrameworkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="trade[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportCapability">
		<xsd:annotation>
			<xsd:documentation>
    TransportCapability is a Capability associated to the capacity of transporting things.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TransportCapability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="capId" type="capabilityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="name" type="capabilityName" nillable="true" minOccurs="0"/>
			<xsd:element name="capType" type="capabilityType" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="capabilityDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="qty" type="transportCapabilityQuantity" nillable="true" minOccurs="0"/>
			<xsd:element name="dim" type="transportCapabilityDimensions" nillable="true" minOccurs="0"/>
			<xsd:element name="range" type="transportCapabilityRange" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="capLim" type="capabilityLimitation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="tracapus" type="transportCapabilityUsage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="capDefRevRef" type="capabilityDefinitionRevisionRef" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="cap[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportCapabilityUsage">
		<xsd:annotation>
			<xsd:documentation>
    TransportCapabilityUsage is a [relationship] that allows to associate a TransportCapability with the TransportableItems that it transports at a certain 
    moment in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TransportCapabilityUsage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="usgId" type="transportCapabilityUsageIdentifier"/>
			<xsd:element name="period" type="transportCapabilityUsagePeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="transportCapabilityUsageDescription" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="opMomItem" type="operationalMomentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="trItem" type="transportableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="transpPos" type="transportPosition" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="tracapus[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportNetwork">
		<xsd:annotation>
			<xsd:documentation>
    TransportNetwork is an Infrastructure used to transport items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TransportNetwork</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="infrId" type="infrastructureIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="infrType" type="infrastructureType" nillable="true" minOccurs="0"/>
			<xsd:element name="infName" type="infrastructureName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infDesc" type="infrastructureDescription" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="infrRev" type="infrastructureRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="infrPty" type="infrastructureParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="infrRel" type="infrastructureRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="traass" type="transportingAsset" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportRequirement">
		<xsd:annotation>
			<xsd:documentation>
    TransportRequirement is a Requirement defining the condictions under which a TransportableItem can be transported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TransportRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="triangle">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:Triangle</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="triBase" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:lengthUnit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="triOpAngle" nillable="true">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:angleUnit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="typeOfPerson">
		<xsd:annotation>
			<xsd:documentation>
    TypeOfPerson is a [class] representing a neutral non-individual person that presents a set of shared common characteristics of multiple Persons.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TypeOfPerson</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="perCompItem" type="personCompetenceItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="genperson[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="umlBoolean">
		<xsd:annotation>
			<xsd:documentation>
    umlBoolean is a UML-defined primitive that is used for logical expressions, consisting of the predefined values true and false.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:umlBoolean</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="umlInteger">
		<xsd:annotation>
			<xsd:documentation>
    umlInteger is a UML-defined primitive type representing integer values.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:umlInteger</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="umlReal">
		<xsd:annotation>
			<xsd:documentation>
    umlReal is a UML-defined primitive type representing the mathematical concept of real.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:umlReal</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:decimal" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="umlString">
		<xsd:annotation>
			<xsd:documentation>
    umlString is a UML-defined sequence of characters in some suitable character set used to display information about the model. Character sets may include 
    non-Roman alphabets and characters
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:umlString</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="umlUnlimitedNatural">
		<xsd:annotation>
			<xsd:documentation>
    umlUnlimitedNatural is a UML-defined primitive type representing unlimited natural values.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:umlUnlimitedNatural</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:nonNegativeInteger" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="unacceptableCondition">
		<xsd:annotation>
			<xsd:documentation>
    UnacceptableCondition is a justification for the disposal of an item in case that it is no longer fit for purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:UnacceptableCondition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="unAcceptId" type="unacceptableConditionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="reason" type="unacceptableConditionReason" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="unacceptableConditionDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="unaccept[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="upgradeRequirement">
		<xsd:annotation>
			<xsd:documentation>
    UpgradeRequirement is a Requirement that must be applied during the embodiment of a change (upgrade).
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:UpgradeRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<xsd:element name="pliuRef" type="plannedItemUpgradeRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="usableOnProductVariant">
		<xsd:annotation>
			<xsd:documentation>
    UsableOnProductVariant is a [relationship] that defines that a UsableOnItem, included in the Breakdown for the overall Product, is effective in the 
    associated ProductVariant. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:UsableOnProductVariant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="efyRange" type="applicableSerialNumberRange" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="prodVarRef" type="productVariantRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="iipv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="valueRangePropertyType">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:ValueRangePropertyType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="lowVal" type="xsd:decimal"/>
			<xsd:element name="uppVal" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="valueWithTolerancesPropertyType">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:ValueWithTolerancesPropertyType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="nomVal" type="xsd:decimal"/>
			<xsd:element name="lowOff" type="xsd:decimal"/>
			<xsd:element name="uppOff" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warehouse">
		<xsd:annotation>
			<xsd:documentation>
    Warehouse is a Facility that is mainly established for part storage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Warehouse</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="fcltyId" type="facilityIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="fcltyName" type="facilityName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyDescr" type="facilityDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cleans" type="facilityCleansiness" nillable="true" minOccurs="0"/>
			<xsd:element name="dim" type="facilityDimensions" nillable="true" minOccurs="0"/>
			<xsd:element name="weight" type="facilityWeight" nillable="true" minOccurs="0"/>
			<xsd:element name="existsFor" type="facilityExistsDuring" nillable="true" minOccurs="0"/>
			<xsd:element name="facPerm" type="facilityPermanenceType" nillable="true" minOccurs="0"/>
			<xsd:element name="whType" type="warehouseType" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="facInfr" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="infrstrRef" type="infrastructureRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="facSuppEq" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="suppeqRef" type="supportEquipmentRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fcltyLoc" type="facilityLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyOper" type="facilityOperator" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="facOwn" type="facilityOwner" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="fcltyRel" type="facilityRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="flta" type="availabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capItem" type="capabilityItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqItem" type="disposalRequiringItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="infrAvails" type="infrastructureAvailableItem" nillable="true" minOccurs="0"/>
			<xsd:element name="itexco" type="itemUnderExportControl" nillable="true" minOccurs="0"/>
			<xsd:element name="mprogit" type="maintenanceProgramItem" nillable="true" minOccurs="0"/>
			<xsd:element name="matContItem" type="materialContainingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rptmItem" type="reportableMetricItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="TransportFeatures" type="transportFeatures" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="fclty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warningCautionNote">
		<xsd:annotation>
			<xsd:documentation>
    WarningCautionNote is a [class] that defines advice concerning safety, legal and health aspects.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WarningCautionNote</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="wcnId" type="warningCautionNoteIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="wcnDescr" type="warningCautionNoteDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcnType" type="warningCautionNoteType" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wcn[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaim">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyClaim is a class representing a customer's claim for repair or replacement of a defective item or non-performance of that item as established in a 
    warranty contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WarrantyClaim</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="claimId" type="warrantyClaimIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="claimType" type="warrantyClaimType" nillable="true" minOccurs="0"/>
			<xsd:element name="occDate" type="warrantyClaimOccurrenceDate" nillable="true" minOccurs="0"/>
			<xsd:element name="fileDate" type="warrantyClaimFilingDate" nillable="true" minOccurs="0"/>
			<xsd:element name="settleDate" type="warrantyClaimSettlementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="commMeans" type="warrantyClaimCommunicationMeans" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="wtyAct" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="actionRef" type="actionRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="wcf" type="warrantyClaimFollowUp" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcr" type="warrantyClaimResolution" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="wcc" type="warrantyClaimContact" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wcev" type="warrantyClaimEvents" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="contrClauseRef" type="contractClauseRef" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="slacRef" type="serviceLevelAgreementClauseRef" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimContact">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyClaimContact is a [relationship] that associates a WarrantyClaim to a Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WarrantyClaimContact</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="conType" type="warrantyClaimContactType" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wcc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimEvents">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyClaimEvents is a [relationship] that associates WarrantyClaims to WarrantyEvents.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WarrantyClaimEvents</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="wevRef" type="warrantyEventRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wcev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimFollowUp">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyClaimFollowUp is a class that represents any follow-up associated to a WarrantyClaim.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WarrantyClaimFollowUp</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="notes" type="warrantyClaimFollowUpNotes" nillable="true" minOccurs="0"/>
			<xsd:element name="followDate" type="warrantyClaimFollowUpDate" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wcf[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimResolution">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyClaimResolution is a class that represents the conclusion of the WarrantyClaim.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WarrantyClaimResolution</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="resolId" type="warrantyClaimResolutionIdentifier"/>
			<xsd:element name="resolDate" type="warrantyClaimResolutionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="resolType" type="warrantyClaimResolutionType" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="warrantyClaimResolutionDescription" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wcr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyEvent">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyEvent is an Event that has as the consequence that a WarrantyClaim is raised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WarrantyEvent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="eventId" type="eventIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="evTime" type="eventOcurrenceDateTime" nillable="true" minOccurs="0"/>
			<xsd:element name="evGroup" type="eventGroup" nillable="true" minOccurs="0"/>
			<xsd:element name="severity" type="eventSeverity" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="eventDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="eventConfirmedStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="reason" type="warrantyEventReason" nillable="true" minOccurs="0"/>
			<xsd:element name="period" type="warrantyEventPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="evAct" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="actionRef" type="actionRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="consq" type="consequence" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dmg" type="damage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="evabe" type="eventAffectedBreakdownElement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evEx" type="eventExplanation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evr" type="eventRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evRelItem" type="eventRelationshipItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="evntRep" type="eventReporter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dwnTPRef" type="downTimePeriodRef" minOccurs="0"/>
			<xsd:element name="logeRef" type="logBookEntryRef" minOccurs="0"/>
			<xsd:element name="pupRef" type="productUsagePhaseRef" minOccurs="0"/>
			<xsd:element name="locItem" type="locationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wtyItem" type="warrantyItem" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="envItem" type="environmentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="ev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteContainer">
		<xsd:annotation>
			<xsd:documentation>
    WasteContainer is a Container containing waste or hazardous material (HAZMAT) substances that need to be recycled or be disposed of in an acceptable manner.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WasteContainer</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="wasteConId" type="wasteContainerIdentifier"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="containerRef" type="containerAsDesignedRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="contSubss" type="substanceContainingItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wastecont[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteDisposalOperation">
		<xsd:annotation>
			<xsd:documentation>
    WasteDisposalOperation is a [class] representing the action that has been taken in order to dispose of a waste item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WasteDisposalOperation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="wasteDispOpId" type="wasteDisposalOperationIdentifier"/>
			<xsd:element name="org" type="wasteDisposalOperationOrganization" nillable="true" minOccurs="0"/>
			<xsd:element name="method" type="wasteDisposalOperationMethod" nillable="true" minOccurs="0"/>
			<xsd:element name="details" type="wasteDisposalOperationMethodDetails" nillable="true" minOccurs="0"/>
			<xsd:element name="opDate" type="wasteDisposalOperationDate" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="wasteDispOpAct" type="wasteDisposalOperationAction" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteRecov" type="wasteRecoveredItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispSite" type="disposalSite" nillable="true" minOccurs="0"/>
			<xsd:element name="wasteItem" type="wasteItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wasteop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteDisposalOperationAction">
		<xsd:annotation>
			<xsd:documentation>
    WasteDisposalOperationAction is a [relationship] that allows to associate a DisposalOperation with additional actions taken as a result of it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WasteDisposalOperationAction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="justification" type="wasteDisposalOperationActionJustification" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="actionRef" type="actionRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wasteact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteDisposalRequirement">
		<xsd:annotation>
			<xsd:documentation>
    WasteDisposalRequirement is a DisposalRequirement oriented towards the disposal of waste.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WasteDisposalRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="reqId" type="requirementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="requirementDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="name" type="requirementName" nillable="true" minOccurs="0"/>
			<xsd:element name="reqBy" type="requirementRaisedBy" nillable="true" minOccurs="0"/>
			<xsd:element name="reqType" type="requirementType" nillable="true" minOccurs="0"/>
			<xsd:element name="reqDate" type="requirementDate" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="requirementStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispReqWhy" type="disposalRequirementReason" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispReqDue" type="disposalRequirementDueDate" nillable="true" minOccurs="0"/>
			<xsd:element name="dispReqHow" type="disposalRequirementMethod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispReqJust" type="disposalRequirementJustification" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="unaccept" type="unacceptableCondition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wasteDispOp" type="wasteDisposalOperation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="dispLoc" type="disposalLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispTransReq" type="disposalTransportRequirement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="allwdPCEfy" type="effectiveOnProductConfiguration" nillable="true" minOccurs="0"/>
			<xsd:element name="dispOrg" type="involvedDisposalOrganization" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="dispPol" type="requiredDisposalPolicy" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqpty" type="requirementParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="reqReqRel" type="requirementRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="docRef" type="documentRef" minOccurs="0"/>
			<xsd:element name="wcRef" type="warrantyClaimRef" minOccurs="0"/>
			<xsd:element name="dispReqCtxt" type="disposalRequirementContext" nillable="true" minOccurs="0"/>
			<xsd:element name="wasteItem" type="wasteItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="polregit" type="policiesAndRegulationsCompliantItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteRecoveredItem">
		<xsd:annotation>
			<xsd:documentation>
    WasteRecoveredItem is a [relationship] that allows to document the recovered material or substances from a WasteDisposalOperation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WasteRecoveredItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="quantity" type="wasteRecoveredItemQuantity" nillable="true" minOccurs="0"/>
			<xsd:element name="value" type="wasteRecoveredItemValue" nillable="true" minOccurs="0"/>
			<xsd:element name="quality" type="wasteRecoveredItemQuality" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="recovMatSubs" type="recoveredMaterialOrSubstances" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wasterec[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workBreakdown">
		<xsd:annotation>
			<xsd:documentation>
    WorkBreakdown is a class used to group all the different activities  associated to a particular purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WorkBreakdown</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="wbsRev" type="workBreakdownRevision" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wbs[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workBreakdownRevision">
		<xsd:annotation>
			<xsd:documentation>
    WorkBreakdownRevision is a class representing an iteration applied to a WorkBreakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WorkBreakdownRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="workBreakdownRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="wbsName" type="workBreakdownName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="wbsDescr" type="workBreakdownDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revRtnle" type="workBreakdownRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="workBreakdownRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="workBreakdownRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wbrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workItem">
		<xsd:annotation>
			<xsd:documentation>
    WorkItem is a generic concept defined to group individual activities for planning, costing or program management purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WorkItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="itemId" type="workItemIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="itemType" type="workItemType" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="workItemStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="period" type="workItemPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="workItemDescription" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="wiRpta" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="rptActRef" type="reportableActivityRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="costItemRef" type="costItemRef" minOccurs="0"/>
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wi[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workOrder">
		<xsd:annotation>
			<xsd:documentation>
    WorkOrder is an instruction to perform maintenance work on a SerializedItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WorkOrder</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="woId" type="workOrderIdentifier"/>
			<xsd:element name="woDate" type="workOrderDateRaised" nillable="true" minOccurs="0"/>
			<xsd:element name="exPeriod" type="workOrderExecutionPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="descr" type="workOrderDescription" nillable="true" minOccurs="0"/>
			<xsd:element name="status" type="workOrderStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="woType" type="workOrderType" nillable="true" minOccurs="0"/>
			<xsd:element name="prior" type="workOrderPriority" nillable="true" minOccurs="0"/>
			<xsd:element name="implTL" type="workOrderImplementationTimeLimit" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="woMact" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="mactRef" type="maintenanceActivityRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="toemb" type="technicalOrderEmbodied" nillable="true" minOccurs="0"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef" minOccurs="0"/>
			<xsd:element name="party" type="party" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mWOSrc" type="maintenanceWorkOrderSource" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="wo[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="zoneElement">
		<xsd:annotation>
			<xsd:documentation>
    ZoneElement is a BreakdownElement that represents a three-dimensional space related to a Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ZoneElement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="beId" type="breakdownElementIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="beZoneType" type="zoneElementType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="beInZones" type="breakdownElementInZoneItem" nillable="true" minOccurs="0"/>
			<xsd:element name="capDefs" type="capabilityDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="costBkCx" type="costBreakdownContext" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="wbcx" type="workBreakdownContext" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="be[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="zoneElementRevision">
		<xsd:annotation>
			<xsd:documentation>
    ZoneElementRevision is a BreakdownElementRevision representing an iteration applied to a ZoneElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ZoneElementRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="revId" type="breakdownElementRevisionIdentifier" maxOccurs="unbounded"/>
			<xsd:element name="beName" type="breakdownElementName" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beDescr" type="breakdownElementDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="beEsc" type="breakdownElementEssentiality" nillable="true" minOccurs="0"/>
			<xsd:element name="beMsi" type="maintenanceSignificantOrRelevant" nillable="true" minOccurs="0"/>
			<xsd:element name="revRtnle" type="breakdownElementRevisionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="revDate" type="breakdownElementRevisionDate" nillable="true" minOccurs="0"/>
			<xsd:element name="revStatus" type="breakdownElementRevisionStatus" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="beRel" type="breakdownElementRevisionRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="spvz" type="serializedProductVariantZone" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="beInZones" type="breakdownElementInZoneItem" nillable="true" minOccurs="0"/>
			<xsd:element name="chgs" type="changeControlledItem" nillable="true" minOccurs="0"/>
			<xsd:element name="detmean" type="detectionMean" nillable="true" minOccurs="0"/>
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="refDocs" type="documentReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="assEnvDefs" type="environmentDefinitionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="mPoints" type="measurementPointItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="prfmParas" type="performanceParameterItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskUses" type="taskAnalysisItem" nillable="true" minOccurs="0"/>
			<xsd:element name="taskReqs" type="taskRequirementAnalysisItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uid" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:ID">
					<xsd:pattern value="ber[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="optional"/>
		<xsd:attribute name="crud" type="crudCode" default="I"/>
	</xsd:complexType>
	<!-- ========================================== UML ATTRIBUTES ========================================== -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="actionCategory">
		<xsd:annotation>
			<xsd:documentation>
    actionCategory is a classification that defines the subject that will be affected by Action.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:actionCategory</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:actionCategoryCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="actionCloseDate">
		<xsd:annotation>
			<xsd:documentation>
    actionCloseDate is the date at which the Action was closed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:actionCloseDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="actionCreationDate">
		<xsd:annotation>
			<xsd:documentation>
    actionCreationDate is the date at which the Action was initiated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:actionCreationDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="actionDescription">
		<xsd:annotation>
			<xsd:documentation>
    actionDescription is a description that gives more information on the Action. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:actionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="actionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    actionIdentifier is an identifier that establishes a unique designator for a Action and to differentiate it from other instances of Action.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:actionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:actionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="actionPriority">
		<xsd:annotation>
			<xsd:documentation>
    actionPriority is a classification that defines the urgency for performing the decided Action.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:actionPriority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:actionPriorityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="actionScheduledDate">
		<xsd:annotation>
			<xsd:documentation>
    actionScheduledDate is a date that specifies when the Action is scheduled to be closed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:actionScheduledDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="additionalAddressInformation">
		<xsd:annotation>
			<xsd:documentation>
    additionalAddressInformation is a description that provides additional information to further locate an address.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:additionalAddressInformation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="aggregatedElementType">
		<xsd:annotation>
			<xsd:documentation>
    aggregatedElementType is a classification that identifies further specialization for an AggregatedElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:aggregatedElementType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:aggregatedElementTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfigurationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    allowedProductConfigurationIdentifier is an identifier that establishes a unique designator for an AllowedProductConfigurationByConfigurationIdentifier and 
    to differentiate it from other instances of AllowedProductConfigurationByConfigurationIdentifier.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:allowedProductConfigurationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:allowedProductConfigurationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfigurationPhysicalDataDimensions">
		<xsd:annotation>
			<xsd:documentation>
    allowedProductConfigurationPhysicalDataDimensions are the dimensions of a ProductVariant when it is in a specific AllowedProductConfiguration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:allowedProductConfigurationPhysicalDataDimensions</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfigurationPhysicalDataParameter">
		<xsd:annotation>
			<xsd:documentation>
    allowedProductConfigurationPhysicalDataParameter is a parameter of a ProductVariant that varies when it is in a specific AllowedProductConfiguration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:allowedProductConfigurationPhysicalDataParameter</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfigurationPhysicalDataWeight">
		<xsd:annotation>
			<xsd:documentation>
    allowedProductConfigurationPhysicalDataWeight is the weight of a ProductVariant when it is in a specific AllowedProductConfiguration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:allowedProductConfigurationPhysicalDataWeight</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedRoleChangeDuration">
		<xsd:annotation>
			<xsd:documentation>
    allowedRoleChangeDuration is the time that it takes to change from one specific OperationalRole to a different associated OperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:allowedRoleChangeDuration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:timeUnit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="altitude">
		<xsd:annotation>
			<xsd:documentation>
    altitude is a string of characters that represents the height above or below a fixed reference point.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:altitude</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityDecision">
		<xsd:annotation>
			<xsd:documentation>
    analysisActivityDecision is a classification that identifies if the AnalysisActivity is to be performed on the AnalysisCandidateItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityDecision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:analysisActivityDecisionCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityDecisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    analysisActivityDecisionRationale is a description that gives more information on the reason for the selection / non-selection of the AnalysisActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityDecisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityDescription">
		<xsd:annotation>
			<xsd:documentation>
    analysisActivityDescription is a description that gives more information on the AnalysisActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityMethod">
		<xsd:annotation>
			<xsd:documentation>
    analysisActivityMethod is a description that provides further information on procedure(s) and technique(s) used to perform the AnalysisActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityMethod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityObjective">
		<xsd:annotation>
			<xsd:documentation>
    analysisActivityObjective is a description that provides further information on the intention and goal for the AnalysisActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityObjective</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityResult">
		<xsd:annotation>
			<xsd:documentation>
    analysisActivityResult is a description that provides information on the AnlaysisActivity outcome together with identified consequences and effects.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityResult</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    analysisActivityRevisionDate is a date that specifies when an AnalysisActivityRevision was defined.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    analysisActivityRevisionIdentifier is an identifier that establishes a unique designator for an AnalysisActivityRevision and to differentiate it from other 
    instances of AnalysisActivityRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:analysisActivityRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    analysisActivityRevisionRationale is a description that gives more information on the justification for revising the defined AnalysisActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    analysisActivityRevisionStatus is a state that identifies the maturity of an AnalysisActivityRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityStatusDescription">
		<xsd:annotation>
			<xsd:documentation>
    analysisActivityStatusDescription is a description that gives further information on the progression of the AnalysisActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityStatusDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityType">
		<xsd:annotation>
			<xsd:documentation>
    analysisActivityType is a classification that identifies further specialization of AnalysisActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:analysisActivityTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisCandidateItemSelectionIndicator">
		<xsd:annotation>
			<xsd:documentation>
    analysisCandidateItemSelectionIndicator is a classification that specifies the extent to which analysis activities will be carried out on the associated 
    AnalysisCandidateItem. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisCandidateItemSelectionIndicator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:analysisCandidateItemSelectionIndicatorCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisCandidateItemSelectionRationale">
		<xsd:annotation>
			<xsd:documentation>
    analysisCandidateItemSelectionRationale is a description that gives more information on the reason for the candidate selection.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisCandidateItemSelectionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="anchoringPointFixed">
		<xsd:annotation>
			<xsd:documentation>
    anchoringPointFixed is a [boolean] that indicates whether an anchoring point is permanent or can be removed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:anchoringPointFixed</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="anchoringPointIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    anchoringPointIdentifier  is a string of text that allows to uniquely identify an AnchoringPoint and differentiate it from other AnchoringPoints.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:anchoringPointIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:anchoringPointIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="anchoringPointMaxLoad">
		<xsd:annotation>
			<xsd:documentation>
    anchoringPointMaxLoad is the maximum load that can be applied to an anchoring point.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:anchoringPointMaxLoad</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="applicabilityDateRange">
		<xsd:annotation>
			<xsd:documentation>
    applicabilityDateRange is a date range that defines the date interval for when the applicability evaluation can result in a TRUE result. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:applicabilityDateRange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="applicabilityStatementDescription">
		<xsd:annotation>
			<xsd:documentation>
    applicabilityStatementDescription is a description that provides a human readable expression of the defined rule.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:applicabilityStatementDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="applicabilityStatementIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    applicabilityStatementIdentifier is an identifier that establishes a unique designator for an ApplicabilityStatement and to differentiate it from other 
    instances of ApplicabilityStatement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:applicabilityStatementIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:applicabilityStatementIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="applicableSerialNumberRange">
		<xsd:annotation>
			<xsd:documentation>
    applicableSerialNumberRange is a serial number range that identifies a limited effectivity with respect to a given interval of serialized items of the 
    associated item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:applicableSerialNumberRange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="lowBound" type="nonEmptyString" nillable="true" minOccurs="0"/>
			<xsd:element name="uppBound" type="nonEmptyString" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="assembly">
		<xsd:annotation>
			<xsd:documentation>
    assembly is a string of characters that represents the unit or assembly attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:assembly</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="associatedActualEnvironmentPeriod">
		<xsd:annotation>
			<xsd:documentation>
    associatedActualEnvironmentPeriod is the period of time during which the association between an EnvironmentItem and an ActualEnvironment is or was 
    applicable.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:associatedActualEnvironmentPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="associatedDegradationMechanismEffectDescription">
		<xsd:annotation>
			<xsd:documentation>
    associatedDegradationMechanismEffectDescription is a description that specifies the consequences of an identified DegradationMechanism on the operation, 
    function, or status for the DegradationMechanismItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:associatedDegradationMechanismEffectDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="authorizationToOperateIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    authorizationToOperateIdentifier is an identifier that establishes a unique designator for an AuthorizationToOperate and to differentiate it from other 
    instances of AuthorizationToOperate. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:authorizationToOperateIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:authorizationToOperateIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="availabilityDates">
		<xsd:annotation>
			<xsd:documentation>
    availabilityDates is a period of time for which the availability of an AvailabilityItem is reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:availabilityDates</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="availabilityDescription">
		<xsd:annotation>
			<xsd:documentation>
    availabilityDescription is a narrative statement clarifying the status of the Availability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:availabilityDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="availabilityIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    availabilityIdentifier is a string of text that uniquely identifies an Availability entry and allows to differentiate it from other 
    SerializedProductVariantAvailability  entries.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:availabilityIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:availabilityIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="availabilityReportingDate">
		<xsd:annotation>
			<xsd:documentation>
    availabilityReportingDate is the date at which the Availability was reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:availabilityReportingDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="availabilityStatus">
		<xsd:annotation>
			<xsd:documentation>
    availabilityStatus is a classification that indicates the availability of an AvailabilityItem at a specific date.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:availabilityStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:availabilityStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="batchHardwarePartDescription">
		<xsd:annotation>
			<xsd:documentation>
    batchHardwarePartDescription is a textual narrative statement that explains what the BatchHardwarePart is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:batchHardwarePartDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="batchHardwarePartIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    batchHardwarePartIdentifier is an identifier that together with the partDefinitionIdentifier establishes a unique designator for a batch of actual parts 
    and to differentiate it from other batches.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:batchHardwarePartIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:batchHardwarePartIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="batchHardwarePartLife">
		<xsd:annotation>
			<xsd:documentation>
    batchHardwarePartLife is the AuthorizedLife for a BatchHardwarePart.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:batchHardwarePartLife</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="aul" nillable="true" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:timeCycleUnit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="batchHardwarePartManufacturingDate">
		<xsd:annotation>
			<xsd:documentation>
    batchHardwarePartManufacturingDate is a Date at which a BatchHardwarePart was manufactured.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:batchHardwarePartManufacturingDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementChildSequenceNumber">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementChildSequenceNumber is a string of characters that controls the order for the included child element.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementChildSequenceNumber</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementDescription">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementDescription is a description that gives more information on the BreakdownElement. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementEssentiality">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementEssentiality is a classification that identifies the operational importance of the BreakdownElement at the Product level.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementEssentiality</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:breakdownElementEssentialityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementIdentifier is an identifier that establishes a unique designator for a BreakdownElement and to differentiate it from other instances of 
    BreakdownElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:breakdownElementIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementName">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementName is a name by which the BreakdownElement is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementRevisionDate is a date that specifies when the BreakdownElement was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementRevisionIdentifier is an identifier that establishes a unique designator for a BreakdownElementRevision and to differentiate it from other 
    instances of BreakdownElementRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:breakdownElementRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementRevisionRationale is a description that gives more information on the justification for revising the BreakdownElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementRevisionRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementRevisionRelationshipType is a classification that identifies the meaning of the established relationship. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementRevisionRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:breakdownElementRevisionRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementRevisionStatus is a state that identifies the maturity of a BreakdownElementRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementUsageIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementUsageIdentifier is an identifier that establishes a unique designator for a BreakdownElementUsageInBreakdown and to differentiate it from 
    other instances of BreakdownElementUsageInBreakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementUsageIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:breakdownElementUsageIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementUsageQuantity">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementUsageQuantity is a property that specifies the amount of the BreakdownElement used in its parent BreakdownElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementUsageQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:countUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementUsageRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    breakdownElementUsageRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementUsageRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:breakdownElementUsageRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    breakdownRevisionDate is a date that specifies when the Breakdown was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    breakdownRevisionIdentifier is an identifier that establishes a unique designator for a BreakdownRevision and to differentiate it from other instances of 
    BreakdownRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:breakdownRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    breakdownRevisionRationale is a description that gives more information on the justification for revising the Breakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownRevisionRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    breakdownRevisionRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownRevisionRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:breakdownRevisionRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    breakdownRevisionStatus is a state that identifies the maturity of a BreakdownRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownType">
		<xsd:annotation>
			<xsd:documentation>
    breakdownType is a classification that identifies the perspective from which the Breakdown is defined.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:breakdownTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="budgetApprovedDate">
		<xsd:annotation>
			<xsd:documentation>
    budgetApprovedDate is the date at which a Budget was approved.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:budgetApprovedDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="budgetDate">
		<xsd:annotation>
			<xsd:documentation>
    budgetDateTime is the date at which the budget was released.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:budgetDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="budgetDescription">
		<xsd:annotation>
			<xsd:documentation>
    budgetDescription  is a description that gives more information on the Budget.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:budgetDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="budgetIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    budgetIdentifier is an identifier that establishes a unique designator for a Budget and to differentiate it from other instances of Budget.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:budgetIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:budgetIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="budgetName">
		<xsd:annotation>
			<xsd:documentation>
    budgetName is a name by which the Budget is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:budgetName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="budgetStatus">
		<xsd:annotation>
			<xsd:documentation>
    budgetStatus is a state that identifies the maturity of the Budget.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:budgetStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:budgetStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="budgetType">
		<xsd:annotation>
			<xsd:documentation>
    budgetType is a classification that identifies further specialization for a Budget.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:budgetType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:budgetTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="budgetValidityPeriod">
		<xsd:annotation>
			<xsd:documentation>
    budgetValidityPeriod is a date range that specifies a period of time during which the Budget is in effect.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:budgetValidityPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibrationDocumentType">
		<xsd:annotation>
			<xsd:documentation>
    calibrationDocumentType is a [classification] that indicates the kind of relationship that is established between a Calibration and an associated Document.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:calibrationDocumentType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:calibrationDocumentTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibrationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    calibrationIdentifier  is an identifier that establishes an unique designator for a Calibration and to differentiate it from other instances of Calibration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:calibrationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:calibrationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibrationMeasurementNotes">
		<xsd:annotation>
			<xsd:documentation>
    calibrationMeasurementNotes is a descriptive text that provides additional information to a specific CalibrationMeasurement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:calibrationMeasurementNotes</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibrationMeasurementPattern">
		<xsd:annotation>
			<xsd:documentation>
    calibrationMeasurementPattern is a [numericPropertyType] that provides the reference value used to calibrate or verify an instrument or measurement device.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:calibrationMeasurementPattern</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibrationMeasurementReading">
		<xsd:annotation>
			<xsd:documentation>
    calibrationMeasurementReading is a [numericPropertyType] that provides the actual value obtained during calibration or verification of an instrument or 
    measurement device.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:calibrationMeasurementReading</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibrationNotes">
		<xsd:annotation>
			<xsd:documentation>
    calibrationNotes is a textual description of noteworthy items associated to the calibration performed on a specific date.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:calibrationNotes</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibrationResult">
		<xsd:annotation>
			<xsd:documentation>
    calibrationResult is a [PropertyType] that documents the result of the calibration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:calibrationResult</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibrationUncertainty">
		<xsd:annotation>
			<xsd:documentation>
    calibrationUncertainty is a [PropertyType] that defines the uncertainty of the calibration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:calibrationUncertainty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionCategory">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDefinitionCategory is a classification that identifies a generalization that organizes capabilities into an overarching capability taxonomy. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionCategory</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:capabilityDefinitionCategoryCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionCharacteristicDescription">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDefinitionCharacteristicDescription is a description that gives more information on the CapabilityDefinitionCharacteristic.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionCharacteristicDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionCharacteristicName">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDefinitionCharacteristicName is a name by which the CapabilityDefinitionCharacteristic is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionCharacteristicName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionCharacteristicValue">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDefinitionCharacteristicValue is a property that represents a measurable or observable characteristic for that is significant to the 
    CapabilityDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionCharacteristicValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionCharacteristicValueComparisonOperator">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDefinitionCharacteristicValueComparisonOperatorr is a classification that identifies the comparison operator which is to be used in order to 
    qualify whether an actual capability complies with the defined CapabilityDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionCharacteristicValueComparisonOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:comparisonOperatorCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionDescription">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDefinitionDescription is a description that gives more information on the defined capability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDefinitionIdentifier is an identifier that establishes a unique designator for a CapabilityDefinition and to differentiate it from other 
    instances of CapabilityDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:capabilityDefinitionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionName">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDefinitionName is a name by which the CapabilityDefinition is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDefinitionRevisionDate is a date that specifies when the CapabilityDefinition was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDefinitionRevisionIdentifier is an identifier that establishes a unique designator for a CapabilityDefinitionRevision and to differentiate it 
    from other instances of CapabilityDefinitionRevision .
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:capabilityDefinitionRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDefinitionRevisionRationale is a description that provides a justification for revising the CapabilityDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDefinitionRevisionStatus is a state that identifies the maturity of an CapabilityDefinitionRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDescription">
		<xsd:annotation>
			<xsd:documentation>
    capabilityDescription is a narrative statement explaining the capability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    capabilityIdentifier is a string of characters that uniquely identifies a specific capability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:capabilityIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityLimitationDescription">
		<xsd:annotation>
			<xsd:documentation>
    capabilityLimitationDescription is a description that provides a human readable expression of a CapabilityLimitation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityLimitationDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityLimitationDuration">
		<xsd:annotation>
			<xsd:documentation>
    capabilityLimitationDuration is the period of time during which a Capability is limited.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityLimitationDuration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityLimitationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    capabilityLimitationIdentifier is a [compositeKey] that allows with a master key to uniquely identify a CapabilityLimitation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityLimitationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:capabilityLimitationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityLimitationName">
		<xsd:annotation>
			<xsd:documentation>
    capabilityLimitationName is a name by which the CapabilityLimitation is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityLimitationName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityLimitationType">
		<xsd:annotation>
			<xsd:documentation>
    capabilityLimitationType is a [classification] that allows to group similar CapabilityLimitations.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityLimitationType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:capabilityLimitationTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityLimitationValue">
		<xsd:annotation>
			<xsd:documentation>
    capabilityLimitationValue is a value that measures the CapabilityLimitation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityLimitationValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityName">
		<xsd:annotation>
			<xsd:documentation>
    capabilityName is a string of characters that represents the name under which the Capability is referenced or is known.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityType">
		<xsd:annotation>
			<xsd:documentation>
    capabilityType is a [classification� that allows to group different Capabilities in accordance with a same Capability purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:capabilityTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cargoItemDescription">
		<xsd:annotation>
			<xsd:documentation>
    cargoItemDescription is a narrative statement explaining the CargoItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:cargoItemDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cargoItemIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    cargoItemIdentifier is a string of text that allows to uniquely identify a CargoItem and differentiate it from other CargoItems.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:cargoItemIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:cargoItemIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cargoItemName">
		<xsd:annotation>
			<xsd:documentation>
    cargoItemName is a text by which a CargoItem is commonly known.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:cargoItemName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cargoItemStackable">
		<xsd:annotation>
			<xsd:documentation>
    cargoItemStackable is a boolean that indicates whether a CargoItem can be stacked.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:cargoItemStackable</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cargoItemUnitaryDimensions">
		<xsd:annotation>
			<xsd:documentation>
    cargoItemUnitaryDimensions represents the dimensions (length, width and height) or each individual unit that forms part of the CargoItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:cargoItemUnitaryDimensions</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cargoItemUnitaryWeight">
		<xsd:annotation>
			<xsd:documentation>
    cargoItemUnitaryWeight represents the weight of each individual unit that forms the CargoItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:cargoItemUnitaryWeight</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:massUnit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cargoItemUnits">
		<xsd:annotation>
			<xsd:documentation>
    cargoItemUnits is an integer that represents the number of units of a same type that a CargoItem represents.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:cargoItemUnits</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeAuthorizationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    changeAuthorizationIdentifier is an identifier that establishes a unique designator for a ChangeAuthorization and to differentiate it from other instances 
    of ChangeAuthorization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeAuthorizationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:changeAuthorizationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeEmbodimentRequirementType">
		<xsd:annotation>
			<xsd:documentation>
    changeEmbodimentRequirementType is a classification that allows to group similar ChangeEmbodimentRequirements
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeEmbodimentRequirementType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:changeEmbodimentRequirementTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeNotificationDescription">
		<xsd:annotation>
			<xsd:documentation>
    changeNotificationDescription is a description providing a summary of affects made to the related item due to a ChangeAuthorization. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeNotificationDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeNotificationType">
		<xsd:annotation>
			<xsd:documentation>
    changeNotificationType is a classification that identifies a change effect as belonging to a group of change effects sharing a particular characteristic or 
    set of characteristics. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeNotificationType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:changeNotificationTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestAddedOrRemovedMaterialAmount">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestAddedOrRemovedMaterialAmount is a property that documents the amount of material that has been added to or removed from an item as the result 
    of a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestAddedOrRemovedMaterialAmount</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestAddedOrRemovedMaterialIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestAddedOrRemovedMaterialIdentifier is a string of text that uniquely identifies a ChangeRequestAddedOrRemovedMaterial and differentiates it from 
    other ChangeRequestAddedOrRemovedMaterial instances.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestAddedOrRemovedMaterialIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:changeRequestAddedOrRemovedMaterialIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestAddedOrRemovedSubstanceAmount">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestAddedOrRemovedSubstanceAmount is a property that documents the amount of the substances that have been added to or removed from an item as the 
    result of a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestAddedOrRemovedSubstanceAmount</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestAddedOrRemovedSubstanceIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestAddedOrRemovedSubstanceIdentifier is a string of text that uniquely identifies a ChangeRequestAddedOrRemovedSubstance and differentiates it 
    from other ChangeRequestAddedOrRemovedSubstance instances.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestAddedOrRemovedSubstanceIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:changeRequestAddedOrRemovedSubstanceIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestCauseIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestCauseIdentifier is a string of text that uniquely identifies a ChangeRequestCause and differentiates it from other ChangeRequestCauses.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestCauseIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:changeRequestCauseIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestConsumptionChangeAmount">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestConsumptionChangeAmount is a property that quantifies the change in substance consumptions derived from a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestConsumptionChangeAmount</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestDescription">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestDescription is a description, providing detailed explanation of the ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestEmissionChangeAmount">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestEmissionChangeAmount is a property that quantifies the change in substance emissions derived from a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestEmissionChangeAmount</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestIdentifier is an identifier that establishes a unique designator for a ChangeRequest and to differentiate it from other instances of 
    ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:changeRequestIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestIntendedEffect">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestIntendedEffect is a description, providing detailed explanation of the expected effect of the ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestIntendedEffect</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestName">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestName is a text that summarizes the content of the ChangeRequest  and provide a standard way to refer commonly to the ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestPartyRole">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestPartyRole is a classification that identifies the purpose of the associated Party. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestPartyRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:changeRequestPartyRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestRationaleDescription">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestRationaleDescription is a description, providing detailed explanation of how the ChangeRequestRationaleItem motivates a design change.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestRationaleDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestStatus">
		<xsd:annotation>
			<xsd:documentation>
    changeRequestStatus is a state, that documents the progress of the ChangeRequest within its lifecycle.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:changeRequestStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    circuitBreakerIdentifier is an identifier that establishes a unique designator for a CircuitBreaker and to differentiate it from other instances of 
    CircuitBreaker.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:circuitBreakerIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:circuitBreakerIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerLocationDescription">
		<xsd:annotation>
			<xsd:documentation>
    circuitBreakerLocationDescription is a description that provides further details on where the CircuitBreaker is located on the referenced 
    CircuitBreakerLocationItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:circuitBreakerLocationDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerName">
		<xsd:annotation>
			<xsd:documentation>
    circuitBreakerName is a name by which the CircuitBreaker is known and can be easily referenced
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:circuitBreakerName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerSettingIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    circuitBreakerSettingIdentifier is an identifier that establishes a unique designator for a CircuitBreakerSetting, and to differentiate it from other 
    instances of CircuitBreakerSetting.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:circuitBreakerSettingIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:circuitBreakerSettingIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerSettingsIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    circuitBreakerSettingsIdentifier is an identifier that establishes a unique designator for a defined CircuitBreakerSettings, and to differentiate it from 
    other instances of CircuitBreakerSettings.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:circuitBreakerSettingsIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:circuitBreakerSettingsIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerSettingsOrdered">
		<xsd:annotation>
			<xsd:documentation>
    circuitBreakerSettingsOrdered is a boolean that defines if the individual circuit breaker setting must be performed in the specified order.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:circuitBreakerSettingsOrdered</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerState">
		<xsd:annotation>
			<xsd:documentation>
    circuitBreakerState is a state that identifies the position that a given circuit breaker must be in after the accomplishment of a defined circuit breaker 
    setting.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:circuitBreakerState</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:circuitBreakerStateCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerType">
		<xsd:annotation>
			<xsd:documentation>
    circuitBreakerType is a classification that defines the technical principle for the CircuitBreaker.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:circuitBreakerType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:circuitBreakerTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cityName">
		<xsd:annotation>
			<xsd:documentation>
    cityName is a name by which an incorporated municipal unit is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:cityName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentActionType">
		<xsd:annotation>
			<xsd:documentation>
    commentActionType is a [classification] that allows to group similar CommentActions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentActionType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:commentActionTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentDate">
		<xsd:annotation>
			<xsd:documentation>
    commentDate is the date at which a comment was raised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    commentIdentifier is a string of characters that is used to uniquely identify a Comment and to differentiate it from other Comments.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:commentIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentPartyRole">
		<xsd:annotation>
			<xsd:documentation>
    commentPartyRole is a classification that indicates the role of a specific Party in a specific Comment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentPartyRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:commentPartyRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentPriority">
		<xsd:annotation>
			<xsd:documentation>
    commentPriority is a classification that allows to define the importance of a comment and the need for an urgent response.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentPriority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:commentPriorityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    commentRelationshipType is a classification that allows to identify the relationship between two comments.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:commentRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentStatus">
		<xsd:annotation>
			<xsd:documentation>
    commentStatus is a classification that allows to determine whether a comment has been responded to.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:commentStatusCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentText">
		<xsd:annotation>
			<xsd:documentation>
    commentText is a text describing the comment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentText</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentTitle">
		<xsd:annotation>
			<xsd:documentation>
    commentTitle is a textual description that summarizes the comment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentTitle</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentType">
		<xsd:annotation>
			<xsd:documentation>
    commentType is a classification that allows the grouping of similar comments.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:commentTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyDefinitionDescription">
		<xsd:annotation>
			<xsd:documentation>
    competencyDefinitionDescription is a description that provides information on the knowledge, skills and attitudes that a person is expected to have by 
    having acquired a certain CompetencyDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:competencyDefinitionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyDefinitionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    competencyDefinitionIdentifier is an identifier that establishes a unique designator for a CompetencyDefinition and to differentiate it from other 
    instances of CompetencyDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:competencyDefinitionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:competencyDefinitionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyDefinitionName">
		<xsd:annotation>
			<xsd:documentation>
    competencyDefinitionName is a name by which the CompetencyDefinition is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:competencyDefinitionName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyDefinitionRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    competencyDefinitionRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:competencyDefinitionRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:competencyDefinitionRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyDefinitionType">
		<xsd:annotation>
			<xsd:documentation>
    competencyDefinitionType is a classification that identifies further specialization of CompetencyDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:competencyDefinitionType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:competencyDefinitionTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyFrameworkDescription">
		<xsd:annotation>
			<xsd:documentation>
    competencyFrameworkDescription is a description that provides further information on the CompetencyFramework.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:competencyFrameworkDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyFrameworkName">
		<xsd:annotation>
			<xsd:documentation>
    competencyFrameworkName is a name by which the CompetencyFramework is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:competencyFrameworkName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionInstanceDescription">
		<xsd:annotation>
			<xsd:documentation>
    conditionInstanceDescription is a description that gives more information on the meaning of the ConditionInstance.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:conditionInstanceDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionInstanceIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    conditionInstanceIdentifier is an identifier that establishes a unique designator for a ConditionInstance and to differentiate it from other instances of 
    ConditionInstance.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:conditionInstanceIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:conditionInstanceIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionInstanceName">
		<xsd:annotation>
			<xsd:documentation>
    conditionInstanceName is a name by which the ConditionInstance is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:conditionInstanceName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionTypeAssertMemberAssertValue">
		<xsd:annotation>
			<xsd:documentation>
    conditionTypeAssertMemberAssertValue is a numerical property that specifies values which can be used to further characterize the ConditionTypeAssertMember.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:conditionTypeAssertMemberAssertValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionTypeAssertMemberAssertValueComparisonOperator">
		<xsd:annotation>
			<xsd:documentation>
    conditionTypeAssertMemberAssertValueComparisonOperator is a classification that identifies a mathematical operation to be applied when testing a value 
    against a defined conditionTypeAssertMemberAssertValue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:conditionTypeAssertMemberAssertValueComparisonOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:comparisonOperatorCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionTypeAssertMemberDescription">
		<xsd:annotation>
			<xsd:documentation>
    conditionTypeAssertMemberDescription is a description that gives more information on meaning of the ConditionTypeAssertMember.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:conditionTypeAssertMemberDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionTypeAssertMemberName">
		<xsd:annotation>
			<xsd:documentation>
    conditionTypeAssertMemberName is a name that identifies a ConditionTypeAssertMember.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:conditionTypeAssertMemberName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionTypeDescription">
		<xsd:annotation>
			<xsd:documentation>
    conditionTypeDescription is a description that gives more information on the meaning of the ConditionType.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:conditionTypeDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionTypeName">
		<xsd:annotation>
			<xsd:documentation>
    conditionTypeName is a name by which the ConditionType is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:conditionTypeName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="configurationConformanceEndDateTime">
		<xsd:annotation>
			<xsd:documentation>
    configurationConformanceEndDateTime is a date and time that specifies the point in time when the SerializedProductVariant no longer complies with the 
    associated product configuration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:configurationConformanceEndDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="configurationConformanceStartDateTime">
		<xsd:annotation>
			<xsd:documentation>
    configurationConformanceStartDateTime is a date and time that specifies the point in time when the SerializedProductVariant changed to the associated 
    product configuration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:configurationConformanceStartDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consequenceDescription">
		<xsd:annotation>
			<xsd:documentation>
    consequenceDescription is a textual narrative statement explaining the consequence of an Event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consequenceDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consequenceIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    consequenceIdentifier is a string of text that uniquely identifies a Consequence in the context of an Event, differentiating it from otehr Consequences.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consequenceIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:consequenceIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consequenceType">
		<xsd:annotation>
			<xsd:documentation>
    consequenceType is a classification that allows to group Consequences.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consequenceType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:consequenceTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumableItemDescription">
		<xsd:annotation>
			<xsd:documentation>
    consumableItemDescription is a narrative statement explaining the ConsumableItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consumableItemDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumableItemIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    consumableItemIdentifier is a string of text that uniquely identifies a ConsumableItem and differentiates it from other ConsumableItems.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consumableItemIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:consumableItemIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumableItemName">
		<xsd:annotation>
			<xsd:documentation>
    consumableItemName is a text by which the ConsumableItem is commonly known.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consumableItemName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumableItemRiskDescription">
		<xsd:annotation>
			<xsd:documentation>
    consumableItemRiskDescription is a narrative statement explaining the risk factor of the ConsumableItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consumableItemRiskDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumableItemRiskFactor">
		<xsd:annotation>
			<xsd:documentation>
    consumableItemRiskFactor is a classification that allows to define whether the ConsumableItem presents any safety issues or hazards.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consumableItemRiskFactor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:consumableItemRiskFactorCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumableType">
		<xsd:annotation>
			<xsd:documentation>
    consumableType is a classification that allows to group  ConsumableItems of similar characteristics.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consumableType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:consumableTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumptionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    consumptionIdentifier is a string that uniquely identifies a Consumption and differentiates it from other Consumptions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consumptionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:consumptionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumptionType">
		<xsd:annotation>
			<xsd:documentation>
    consumptionType is a [classification] that allows to differentiate between different types of Consumptions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consumptionType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:consumptionTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumptionValue">
		<xsd:annotation>
			<xsd:documentation>
    consumptionValue is the amount of a ConsumableItem consumed by the SerializedProductVariant during the associated operational period, movement or movement 
    leg.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consumptionValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containedSubstanceQuantity">
		<xsd:annotation>
			<xsd:documentation>
    containedSubstanceQuantity is a property that identifies the amount of the substance included in the HardwarePartDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:containedSubstanceQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:quantityUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containerAsDesignedIsReusable">
		<xsd:annotation>
			<xsd:documentation>
    containerAsDesignedIsReusable is a TRUE or FALSE statement indicating whether the container can or not be reused.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:containerAsDesignedIsReusable</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containerAsDesignedMaterial">
		<xsd:annotation>
			<xsd:documentation>
    containerAsDesignedMaterial is a classification that describes the main type of material of which the Container has been made of.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:containerAsDesignedMaterial</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:containerAsDesignedMaterialCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containerAsDesignedPayloadLimitation">
		<xsd:annotation>
			<xsd:documentation>
    containerAsDesignedPayloadLimitation is a property that defines the limitations about the amount that the container can contain.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:containerAsDesignedPayloadLimitation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containerAsDesignedType">
		<xsd:annotation>
			<xsd:documentation>
    containerAsDesignedType is a classification that indicates the kind of container.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:containerAsDesignedType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:containerAsDesignedTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containerPartDuring">
		<xsd:annotation>
			<xsd:documentation>
    containerPartDuring is a period during which a (reusable) container contains a certain number of HardwarePartAsDesigned.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:containerPartDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containerPartIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    containerPartIdentifier is a string of characters that allows to uniquely identify a ContainerPart [relationship] from other ones.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:containerPartIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:containerPartIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containerPartQuantity">
		<xsd:annotation>
			<xsd:documentation>
    containerPartQuantity is a property that indicates the number of HardwarePartAsDesigned that a HardwarePartContainer holds at a specific moment in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:containerPartQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractClauseDescription">
		<xsd:annotation>
			<xsd:documentation>
    contractClauseDescription is a description that gives more information on the contract clause or summarizing the content of the contract clause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractClauseDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractClauseIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    contractClauseIdentifier is an identifier that establishes a unique designator for a ContractClause and to differentiate it from other instances of 
    ContractClauses.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractClauseIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:contractClauseIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractClauseRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    contractClauseRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractClauseRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:contractClauseRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractClauseValidityPeriod">
		<xsd:annotation>
			<xsd:documentation>
    contractClauseValidityPeriod is a date range that specifies the period of time during which the ContractClause is in effect.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractClauseValidityPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractDescription">
		<xsd:annotation>
			<xsd:documentation>
    contractDescription is a description that gives more information on the Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    contractIdentifier is an identifier that establishes a unique designator for a Contract and to differentiate it from other instances of Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:contractIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractLaborRate">
		<xsd:annotation>
			<xsd:documentation>
    contractLaborRate is a property indicating the monetary cost per hour for a person with the associated competence.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractLaborRate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:currencyUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractName">
		<xsd:annotation>
			<xsd:documentation>
    contractName is a name by which the Contract is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractPartyRole">
		<xsd:annotation>
			<xsd:documentation>
    contractPartyRole is a classification that defines the purpose of the association between a LegalParty and the Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractPartyRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:contractPartyRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    contractRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:contractRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractSignatureDate">
		<xsd:annotation>
			<xsd:documentation>
    contractSignatureDate is the date at which the Contract was signed or agreed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractSignatureDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractStatus">
		<xsd:annotation>
			<xsd:documentation>
    contractStatus is a time stamped state that indicates the state of a Contract at a specific moment in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:contractStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractSubjectQuantity">
		<xsd:annotation>
			<xsd:documentation>
    contractSubjectQuantity is a property that identifies the number of contract items that are included in the Contract
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractSubjectQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:quantityUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractType">
		<xsd:annotation>
			<xsd:documentation>
    contractType is a classification that identifies further specialization for a Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:contractTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractValidityPeriod">
		<xsd:annotation>
			<xsd:documentation>
    contractValidityPeriod is a date and time range that specifies a period of time during which the Contract is in effect.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractValidityPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractValue">
		<xsd:annotation>
			<xsd:documentation>
    contractValue is a property that specifies the amount of money that the Contract is worth.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:currencyUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costBreakdownDescription">
		<xsd:annotation>
			<xsd:documentation>
    costBreakdownDescription is a description that gives more information on the CostBreakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costBreakdownDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costBreakdownIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    costBreakdownIdentifier is an identifier that establishes a unique designator for a CostBreakdown and to differentiate it from other instances of 
    CostBreakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costBreakdownIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:costBreakdownIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costBreakdownName">
		<xsd:annotation>
			<xsd:documentation>
    costBreakdownName is a name by which the CostBreakdown is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costBreakdownName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costBreakdownRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    costBreakdownRevisionDate is a date that specifies when an CostBreakdownRevision was defined.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costBreakdownRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costBreakdownRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    costBreakdownRevisionIdentifier is an identifier that establishes a unique designator for a CostBreakdownRevision and to differentiate it from other 
    instances of CostBreakdownRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costBreakdownRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:costBreakdownRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costBreakdownRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    costBreakdownRevisionRationale is a description that gives more information on the justification for revising the defined CostBreakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costBreakdownRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costBreakdownRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    costBreakdownRevisionStatus is a state that identifies the maturity of an CostBreakdownRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costBreakdownRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costEntryDate">
		<xsd:annotation>
			<xsd:documentation>
    costEntryDate is the date at which the CostEntry was made or incurred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costEntryDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costEntryDescription">
		<xsd:annotation>
			<xsd:documentation>
    costEntryDescription is a description that gives more information on the CostEntry.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costEntryDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costEntryIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    costEntryIdentifier is an identifier that establishes a unique designator for a CostEntry and to differentiate it from other instances of CostEntry.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costEntryIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:costEntryIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costEntryPeriod">
		<xsd:annotation>
			<xsd:documentation>
    costEntryPeriod is date range that represents the period of time during which the cost for this CostEntry was incurred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costEntryPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costEntryType">
		<xsd:annotation>
			<xsd:documentation>
    costEntryType is a classification that specifies the kind of cost incurred by the CostEntry.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costEntryType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:costEntryTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costEntryValue">
		<xsd:annotation>
			<xsd:documentation>
    costEntryValue is a property that represents the actual or estimated value of the CostEntry.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costEntryValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:currencyUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costItemDescription">
		<xsd:annotation>
			<xsd:documentation>
    costItemDescription is a description that gives more information on the CostItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costItemDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costItemIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    costItemIdentifier is an identifier that establishes a unique designator for a CostItem and to differentiate it from other instances of CostItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costItemIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:costItemIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="countryIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    countryIdentifier is a string of characters used to uniquely identify a Country and to differentiate it from other instances of Country.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:countryIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:countryCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="countryName">
		<xsd:annotation>
			<xsd:documentation>
    countryName is a name by which the Country is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:countryName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageCharacteristicDescription">
		<xsd:annotation>
			<xsd:documentation>
    damageCharacteristicDescription is a textual narrative that provides a human readable expression of a DamageCharacteristic.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageCharacteristicDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageCharacteristicIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    damageCharacteristicIdentifier is a [compositeKey] that allows with a master key to uniquely identify a DamageCharacteristic.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageCharacteristicIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:damageCharacteristicIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageCharacteristicType">
		<xsd:annotation>
			<xsd:documentation>
    damageCharacteristicType is a [classification] that defines the characteristics of a Damage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageCharacteristicType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:damageCharacteristicTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageColor">
		<xsd:annotation>
			<xsd:documentation>
    damageColor is a [classification] that defines the color of a Damage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageColor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:damageColorCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageDefinitionDescription">
		<xsd:annotation>
			<xsd:documentation>
    damageDefinitionDescription is a description that gives more information on the DamageDefinition. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageDefinitionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageDefinitionFamily">
		<xsd:annotation>
			<xsd:documentation>
    damageDefinitionFamily is a classification that identifies a group of damages which share the damage characteristics and often lead to the same, or similar,
     corrective action.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageDefinitionFamily</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:damageDefinitionFamilyCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageDefinitionImpactRatio">
		<xsd:annotation>
			<xsd:documentation>
    damageDefinitionImpactRatio identifies the fraction of individual occurrences of DamageDefinition that will result in the associated FailureMode in 
    relation to the entire population of occurences of the DamageDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageDefinitionImpactRatio</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:relativeUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageDefinitionName">
		<xsd:annotation>
			<xsd:documentation>
    damageDefinitionName is a name by which the DamageDefinition is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageDefinitionName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageDescription">
		<xsd:annotation>
			<xsd:documentation>
    damageDescription is a textual description of the damage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageDimensions">
		<xsd:annotation>
			<xsd:documentation>
    damageDimensions is a set of values that define a geometrical figure that determines the extension of the damage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageDimensions</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice/>
			<!-- UML-Extends -->
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageEstimatedCost">
		<xsd:annotation>
			<xsd:documentation>
    damageEstimatedCost is a range of possible costs associated to a specific damage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageEstimatedCost</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:currencyUnit"/>
			<xsd:element name="lowVal" type="xsd:decimal"/>
			<xsd:element name="uppVal" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageFamily">
		<xsd:annotation>
			<xsd:documentation>
    damageFamily is a classification that defines the type of damage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageFamily</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:damageFamilyCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    damageIdentifier is a string of characters used to uniquely identify a Damage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:damageIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageRepairStatus">
		<xsd:annotation>
			<xsd:documentation>
    damageRepairStatus is a [classificationType] that indicates the status of the Damage repair.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageRepairStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:damageRepairStatusCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageSeverity">
		<xsd:annotation>
			<xsd:documentation>
    damageSeverity is a classification that defines how serious a Damage is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageSeverity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:damageSeverityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageStatus">
		<xsd:annotation>
			<xsd:documentation>
    damageStatus is a classification that indicates the status of the damage at a specific moment in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:damageStatusCode" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataAssociatedWithType">
		<xsd:annotation>
			<xsd:documentation>
    dataAssociatedWithType is a [classification] that allows to define the type of relationship between a DataSetAsDesigned and a ParAsDesigned.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataAssociatedWithType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:dataAssociatedWithTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataModuleIssueInWorkNumber">
		<xsd:annotation>
			<xsd:documentation>
    dataModuleIssueInWorkNumber is a string of characters used for monitoring and control of intermediate drafts of S1000DDataModuleIssue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataModuleIssueInWorkNumber</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataModuleIssueLanguage">
		<xsd:annotation>
			<xsd:documentation>
    dataModuleIssueLanguage is a classification that identifies the language used to produce the content of the S1000DDataModuleIssue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataModuleIssueLanguage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:languageCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataModuleIssueLanguageCountry">
		<xsd:annotation>
			<xsd:documentation>
    dataModuleIssueLanguageCountry is a classification that identifies the country where the language, identified by dataModuleIssueLanguage, is spoken
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataModuleIssueLanguageCountry</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:countryCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataModuleIssueNumber">
		<xsd:annotation>
			<xsd:documentation>
    dataModuleIssueNumber is a string of characters used to identify the release number of the S1000DDataModuleIssue
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataModuleIssueNumber</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataSetAsDesignedDescription">
		<xsd:annotation>
			<xsd:documentation>
    dataSetAsDesignedDescription is a narrative description of a DataSetAsDesigned data structure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataSetAsDesignedDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataSetAsDesignedType">
		<xsd:annotation>
			<xsd:documentation>
    dataSetAsDesignedType is a classification that allows to group different DataSetAsDesigned data structures according to common characteristics.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataSetAsDesignedType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:dataSetAsDesignedTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataSetAsReleasedNotes">
		<xsd:annotation>
			<xsd:documentation>
    dataSetAsReleasedNotes is a narrative description that provides additional information about a specific DataSetAsReleased.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataSetAsReleasedNotes</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="decisionTreeTemplateIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    decisionTreeTemplateIdentifier is an identifier that establishes a unique designator for a DecisionTreeTemplate and to differentiate it from other 
    instances of DecisionTreeTemplate. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:decisionTreeTemplateIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:decisionTreeTemplateIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="degradationMechanismDescription">
		<xsd:annotation>
			<xsd:documentation>
    degradationMechanismDescription is a description that gives more information on the DegradationMechanism. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:degradationMechanismDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="degradationMechanismName">
		<xsd:annotation>
			<xsd:documentation>
    degradationMechanismName is a name by which the DegradationMechanism is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:degradationMechanismName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMeanCapabilityCapabilityType">
		<xsd:annotation>
			<xsd:documentation>
    detectionMeanCapabilityCapabilityType is a [classification] that allows to group different DetectionMeanCapabilities based on their individual 
    characteristics.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:detectionMeanCapabilityCapabilityType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:detectionMeanCapabilityCapabilityTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMeanCapabilityDescription">
		<xsd:annotation>
			<xsd:documentation>
    detectionMeanCapabilityDescription is a narrative statement that explains a DetectionMeanCapability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:detectionMeanCapabilityDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMeanCapabilityIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    detectionMeanCapabilityIdentifier is a string of text that uniquely identifies a DetectionMeanCapability and differentiates it from other 
    DetectionMeanCapabilities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:detectionMeanCapabilityIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:detectionMeanCapabilityIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMechanismDescription">
		<xsd:annotation>
			<xsd:documentation>
    detectionMechanismDescription is a textual narrative statement that explains a DetectionMechanism.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:detectionMechanismDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMechanismFalseAlarmRate">
		<xsd:annotation>
			<xsd:documentation>
    detectionMechanismFalseAlarmRate is the frequency at which the DetectionMechanism is expected to raise a false alarm.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:detectionMechanismFalseAlarmRate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMechanismIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    detectionMechanismIdentifier is a string of text that uniquely identifies a DetectionMechanism and differentiates it from other DetectionMechanisms.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:detectionMechanismIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:detectionMechanismIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMechanismPresentation">
		<xsd:annotation>
			<xsd:documentation>
    detectionMechanismPresentation is a textual narrative statement that indicates how the FailureMechanism is brought to the attention of the user.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:detectionMechanismPresentation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMechanismType">
		<xsd:annotation>
			<xsd:documentation>
    detectionMechanismType is a classification that allows to group similar DetectionMechanisms.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:detectionMechanismType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:detectionMechanismTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="digitalFileContentClass">
		<xsd:annotation>
			<xsd:documentation>
    digitalFileContentClass is a classification that determine the meaning of the information within the DigitalFile.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:digitalFileContentClass</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:digitalFileContentClassCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="digitalFileContentDescription">
		<xsd:annotation>
			<xsd:documentation>
    digitalFileContentDescription is a phrase that gives more details about the information contained in the DigitalFile
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:digitalFileContentDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="digitalFileLocator">
		<xsd:annotation>
			<xsd:documentation>
    digitalFileLocator is an identifier that establishes a unique designator for a DigitalFile used to locate and identify a DigitalFile and to differentiate 
    it from other instances of DigitalFile.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:digitalFileLocator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:digitalFileLocatorClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="digitalFileReferenceJustification">
		<xsd:annotation>
			<xsd:documentation>
    digitalFileReferenceJustification is a description that provides more on information on the reason why the DigitalFileReferencedItem is referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:digitalFileReferenceJustification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="digitalFileRepresentation">
		<xsd:annotation>
			<xsd:documentation>
    digitalFileRepresentation is a string of characters representing the content of the DigitalFile.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:digitalFileRepresentation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="digitalFileType">
		<xsd:annotation>
			<xsd:documentation>
    digitalFileType is a classification that specifies the format of the data within the DigitalFile.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:digitalFileType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:digitalFileTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disassemblyCode">
		<xsd:annotation>
			<xsd:documentation>
    disassemblyCode is a string of characters that represents the disassembly code attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:disassemblyCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disassemblyCodeVariant">
		<xsd:annotation>
			<xsd:documentation>
    disassemblyCodeVariant is a string of characters that represents the disassembly code variant attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:disassemblyCodeVariant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalLocationRole">
		<xsd:annotation>
			<xsd:documentation>
    disposalLocationRole is a classification that allows to define the role that a Location has in teh context of a DisposalRequirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:disposalLocationRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:disposalLocationRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalRequirementDueDate">
		<xsd:annotation>
			<xsd:documentation>
    disposalRequirementDueDate is the date at which the disposal item or waste must be disposed of.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:disposalRequirementDueDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalRequirementJustification">
		<xsd:annotation>
			<xsd:documentation>
    disposalRequirementJustification is a textual description of the reason(s) why the disposal is required.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:disposalRequirementJustification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalRequirementMethod">
		<xsd:annotation>
			<xsd:documentation>
    disposalRequirementMethod is a classification that indicates the method(s) to be applied for the disposal of an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:disposalRequirementMethod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:disposalRequirementMethodCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalRequirementReason">
		<xsd:annotation>
			<xsd:documentation>
    disposalRequirementReason is a classification indicating the reason for the disposal.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:disposalRequirementReason</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:disposalRequirementReasonCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentDescription">
		<xsd:annotation>
			<xsd:documentation>
    documentDescription is a description that gives more information on the Document. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    documentIdentifier is an identifier that establishes a unique designator for a Document and to differentiate it from other instances of Document.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:documentIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentIssuanceDate">
		<xsd:annotation>
			<xsd:documentation>
    documentIssuanceDate is a date that identifies when a Document was released.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentIssuanceDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentIssueIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    documentIssueIdentifier is an identifier that establishes a unique designator for a DocumentIssue and to differentiate it from other instances of 
    DocumentIssue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentIssueIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:documentIssueIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentIssueIssuanceDate">
		<xsd:annotation>
			<xsd:documentation>
    documentIssueIssuanceDate is a date that identifies when a specific document issue was released.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentIssueIssuanceDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentIssueRationale">
		<xsd:annotation>
			<xsd:documentation>
    documentIssueRationale is a description that gives more information on the justification for revising the Document.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentIssueRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentIssueReason">
		<xsd:annotation>
			<xsd:documentation>
    documentIssueReason is a [classification] that allows to group DocumentIssues bythe different causes for their release.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentIssueReason</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:documentIssueReasonCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentIssueStatus">
		<xsd:annotation>
			<xsd:documentation>
    documentIssueStatus is a state that identifies the maturity of a DocumentIssue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentIssueStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:documentIssueStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentPartyRole">
		<xsd:annotation>
			<xsd:documentation>
    documentPartyRole is a classification that defines the purpose of the associated DocumentStakeholderParty. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentPartyRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:documentPartyRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentStatus">
		<xsd:annotation>
			<xsd:documentation>
    documentStatus is a state that identifies the maturity of a Document.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:documentStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentTitle">
		<xsd:annotation>
			<xsd:documentation>
    documentTitle is a name by which the Document is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentTitle</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentType">
		<xsd:annotation>
			<xsd:documentation>
    documentType is a classification that identifies the category of the Document.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:documentTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="downTimeIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    downTimeIdentifier is a string of text that uniquely identifies a DownTimePeriod and differentiates it from other DownTimePeriods.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:downTimeIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:downTimeIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="downTimePeriodReason">
		<xsd:annotation>
			<xsd:documentation>
    downTimePeriodReason is a narrative text providing information about the DownTimePeriod.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:downTimePeriodReason</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:downTimePeriodReasonCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="downTimePeriodValue">
		<xsd:annotation>
			<xsd:documentation>
    downTimePeriodValue is a period of time during which the SerializedProductVariant is or will be not available.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:downTimePeriodValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="downTimeStatus">
		<xsd:annotation>
			<xsd:documentation>
    downTimeStatus is a classification allowing to determine the validity of a DownTime.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:downTimeStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:downTimeStatusCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentCondition">
		<xsd:annotation>
			<xsd:documentation>
    environmentCondition is a [NumericPropertyType] that describes the normal quantitative values that define an Environment and differentiate it from other 
    Environments.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentCondition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionCharacteristicDescription">
		<xsd:annotation>
			<xsd:documentation>
    environmentDefinitionCharacteristicDescription is a description that gives more information on the EnvironmentDefinitionCharacteristic.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionCharacteristicDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionCharacteristicName">
		<xsd:annotation>
			<xsd:documentation>
    environmentDefinitionCharacteristicName is a name by which the EnvironmentDefinitionCharacteristic is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionCharacteristicName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionCharacteristicValue">
		<xsd:annotation>
			<xsd:documentation>
    environmentDefinitionCharacteristicValue is a property that represents a measurable or observable characteristic for a circumstance, object, event or 
    condition that is typical to the EnvironmentDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionCharacteristicValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionCharacteristicValueComparisonOperator">
		<xsd:annotation>
			<xsd:documentation>
    environmentDefinitionCharacteristicValueComparisonOperator is a classification that identifies the comparison operator which is to be used in order to 
    qualify whether an actual environment is as a member of the defined EnvironmentDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionCharacteristicValueComparisonOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:comparisonOperatorCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionDescription">
		<xsd:annotation>
			<xsd:documentation>
    environmentDefinitionDescription is a description that gives more information on the EnvironmentDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    environmentDefinitionIdentifier is an identifier that establishes a unique designator for an EnvironmentDefinition and to differentiate it from other 
    instances of EnvironmentDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:environmentDefinitionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionName">
		<xsd:annotation>
			<xsd:documentation>
    environmentDefinitionName is a name by which the EnvironmentDefinition is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    environmentDefinitionRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:environmentDefinitionRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    environmentDefinitionRevisionDate is a date that specifies when the EnvironmentDefinition was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    environmentDefinitionRevisionIdentifier is an identifier that establishes a unique designator for an EnvironmentDefinitionRevision and to differentiate it 
    from other instances of EnvironmentDefinitionRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:environmentDefinitionRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    environmentDefinitionRevisionRationale is a description that provides a justification for revising the EnvironmentDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    environmentDefinitionRevisionStatus is a state that identifies the maturity of an EnvironmentDefinitionRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDescription">
		<xsd:annotation>
			<xsd:documentation>
    environmentDescription is a textual description of an environment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    environmentIdentifier is a string of characters used to uniquely identify an Environment and to differentiate it from other Environments.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:environmentIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentName">
		<xsd:annotation>
			<xsd:documentation>
    environmentName is a name by which the Environment is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    environmentRelationshipType is a [classification] that allows to indicate the kind of relationship between two Environments.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:environmentRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRevisionCondition">
		<xsd:annotation>
			<xsd:documentation>
    environmentRevisionCondition is a [NumericPropertyType] that describes the quantitative conditions that define an environmentRevision and differentiate it 
    from other environmentRevisions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentRevisionCondition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    environmentRevisionDate is the date at which the EnvironmentRevision was created.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    environmentRevisionIdentifier is a [compositeKey] that allows with a master key to uniquely identify an EnvironmentRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:environmentRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    environmentRevisionRationale is a decription that provides a justification for the EnvironmentRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    environmentRevisionStatus is a state that identifies the maturity of an EnvironmentRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:environmentRevisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRevisionType">
		<xsd:annotation>
			<xsd:documentation>
    environmentRevisionType is a [classification] that allows to group similar EnvironmentRevisions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentRevisionType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:environmentRevisionTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRevisionValidity">
		<xsd:annotation>
			<xsd:documentation>
    environmentRevisionValidity is a DateRange during which an EnvironmentRevision is valid.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentRevisionValidity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentType">
		<xsd:annotation>
			<xsd:documentation>
    environmentType is a classification that allows to group different Environments by their characteristics.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:environmentTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="equipmentOperatingPeriod">
		<xsd:annotation>
			<xsd:documentation>
    equipmentOperatingPeriod is the period during which the equipment is operated by a specific Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:equipmentOperatingPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="equipmentOwnershipPeriod">
		<xsd:annotation>
			<xsd:documentation>
    equipmentOwnershipPeriod is the period during which the item was owned by a specific Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:equipmentOwnershipPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="equipmentStatusPeriod">
		<xsd:annotation>
			<xsd:documentation>
    equipmentStatusPeriod is the period during which the equipment  had that specific status.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:equipmentStatusPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="equipmentStatusReason">
		<xsd:annotation>
			<xsd:documentation>
    equipmentStatusReason is a classification indicating the reason for which an equipment has been in that status during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:equipmentStatusReason</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:equipmentStatusReasonCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="equipmentStatusType">
		<xsd:annotation>
			<xsd:documentation>
    equipmentStatusType is a classification that describes the status of the equipment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:equipmentStatusType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:equipmentStatusTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByAssertionRole">
		<xsd:annotation>
			<xsd:documentation>
    evaluationByAssertionRole is a classification that defines the context in which the EvaluationByAssertionOfClassInstance is being referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:evaluationByAssertionRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:evaluationByAssertionRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventConfirmedStatus">
		<xsd:annotation>
			<xsd:documentation>
    eventConfirmedStatus is a classification at a specific moment in time describing whether the event has or not been confirmed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventConfirmedStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:eventConfirmedStatusCode" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventDescription">
		<xsd:annotation>
			<xsd:documentation>
    eventDescription is a narrative statement explaining an Event or the circumstances surrounding it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventGroup">
		<xsd:annotation>
			<xsd:documentation>
    eventGroup is a classification that is used to categorize the type of Event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventGroup</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:eventGroupCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    eventIdentifier is a string of characters that uniquely identifies an Event so as to differentiate it from other Events.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:eventIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventOcurrenceDateTime">
		<xsd:annotation>
			<xsd:documentation>
    eventOcurrenceDateTime is the date and time at which the Event occurred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventOcurrenceDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventRelationshipItemRole">
		<xsd:annotation>
			<xsd:documentation>
    eventRelationshipItemRole is a [classification] that allows to indicate the type of relationship that an item has regarding an Event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventRelationshipItemRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:eventRelationshipItemRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    eventRelationshipType is a classification that indicates the type of relationship between two different Events.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:eventRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventReporterDateTime">
		<xsd:annotation>
			<xsd:documentation>
    eventReporterDateTime is a DateTime which represents the date and time at which the EventReporter reported the Event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventReporterDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventSeverity">
		<xsd:annotation>
			<xsd:documentation>
    eventSeverity is a [classification] that allows to indicate the impact of the event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventSeverity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:eventSeverityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventThresholdNumberOfEventOccurrences">
		<xsd:annotation>
			<xsd:documentation>
    eventThresholdNumberOfEventOccurrences is an integer that defines how many times an event must be repeated for the EventThresholdDefinition to be activated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventThresholdNumberOfEventOccurrences</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="explanatoryFactorDescription">
		<xsd:annotation>
			<xsd:documentation>
    explanatoryFactorDescription is a textual explanation of the ExplanatoryFactor.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:explanatoryFactorDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="explanatoryFactorIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    explanatoryFactorIdentifier is an unique identifier that allows to differentiate between one ExplanatoryFactor and another one.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:explanatoryFactorIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:explanatoryFactorIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="explanatoryFactorName">
		<xsd:annotation>
			<xsd:documentation>
    explanatoryFactorName is a short textual description that allows to identify an explanatoryFactor.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:explanatoryFactorName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="explanatoryFactorOrganization">
		<xsd:annotation>
			<xsd:documentation>
    explanatoryFactorOrganization is the Organization that has defined the ExplanatoryFactor.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:explanatoryFactorOrganization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="orgRef" type="organizationRef" nillable="true"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlLicenseDescription">
		<xsd:annotation>
			<xsd:documentation>
    exportControlLicenseDescription is a description that gives more information on the defined ExportControlLicence.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlLicenseDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlLicenseIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    exportControlLicenseIdentifier is an identifier that establishes a unique designator for a ExportControlLicense and to differentiate it from other 
    instances of ExportControlLicense.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlLicenseIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:exportControlLicenseIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlLicenseItemCategory">
		<xsd:annotation>
			<xsd:documentation>
    exportControlLicenseItemCategory is a classification that identifies the nature of the ExportControlledItem for the purpose of identifying dual-use 
    (military and civil) items in the context of export control.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlLicenseItemCategory</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlLicenseItemidentifier">
		<xsd:annotation>
			<xsd:documentation>
    exportControlLicenseItemidentifier is an identifier that establishes a unique designator for a ExportControlLicenseItemand to differentiate it from other 
    instances of ExportControlLicenseItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlLicenseItemidentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:exportControlLicenseItemidentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlLicenseItemQuantity">
		<xsd:annotation>
			<xsd:documentation>
    exportControlLicenseItemQuantity is a property that specifies the amount of items covered by an ExportControlLicense.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlLicenseItemQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:quantityUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlLicensePurpose">
		<xsd:annotation>
			<xsd:documentation>
    exportControlLicensePurpose is a description that provides further information on the purpose of the ExportControlLicense.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlLicensePurpose</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlLicenseType">
		<xsd:annotation>
			<xsd:documentation>
    exportControlLicenseType is a classification that identifies the validity for export control license.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlLicenseType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:exportControlLicenseTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlPartyClearanceCode">
		<xsd:annotation>
			<xsd:documentation>
    exportControlPartyClearanceCode is a classification that indicates the type of clearance that the exportControlParty  has received to house export 
    controlled goods.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlPartyClearanceCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlPartyClearanceDate">
		<xsd:annotation>
			<xsd:documentation>
    exportControlPartyClearanceDate is a date that indicates when the exportControlParty has received the clearance to house export controlled goods.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlPartyClearanceDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlPartyClearanceLevel">
		<xsd:annotation>
			<xsd:documentation>
    exportControlPartyClearanceLevel is a classification that indicates the level of the clearance that the exportControlParty  has received to house export 
    controlled goods.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlPartyClearanceLevel</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlPartyIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    exportControlPartyIdentifier is a string of characters that uniquely identifies an ExportControlParty.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlPartyIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:exportControlPartyIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlPartyRole">
		<xsd:annotation>
			<xsd:documentation>
    exportControlPartyRole  is a [classification] that defines the role of an ExportControlParty.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlPartyRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:exportControlPartyRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlRegulationLegalCode">
		<xsd:annotation>
			<xsd:documentation>
    exportControlRegulationLegalCode is a classification that identifies the legal export control regulation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlRegulationLegalCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:exportControlRegulationLegalCodeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlRegulationtPeculiarityCode">
		<xsd:annotation>
			<xsd:documentation>
    exportControlRegulationtPeculiarityCode is a [classification] that allows to use codes used by different ExportControlRegulations.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlRegulationtPeculiarityCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:exportControlRegulationtPeculiarityCodeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlRequirementAppliedToCountryDescription">
		<xsd:annotation>
			<xsd:documentation>
    exportControlRequirementAppliedToCountryDescription is a description that provides a human readable expression of how or why an ExportControlRequirement is 
    applied to Country.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlRequirementAppliedToCountryDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlRequirementAppliedToCountryDuring">
		<xsd:annotation>
			<xsd:documentation>
    exportControlRequirementAppliedToCountryDuring is a DataRange during which an ExportControlRequirement is applied to a specific country.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlRequirementAppliedToCountryDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlRequirementGrouping">
		<xsd:annotation>
			<xsd:documentation>
    exportControlRequirementGrouping is a [classification] that allows to group similar ExportControlRegulations.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlRequirementGrouping</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:exportControlRequirementGroupingCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="expressionEvaluationDateRange">
		<xsd:annotation>
			<xsd:documentation>
    expressionEvaluationDateRange is a date range that defines the date interval for when the defined evaluation can result in a TRUE result. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:expressionEvaluationDateRange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="expressionEvaluationDescription">
		<xsd:annotation>
			<xsd:documentation>
    expressionEvaluationDescription is a description that provides a human readable expression of the defined rule. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:expressionEvaluationDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="expressionEvaluationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    expressionEvaluationIdentifieris an identifier that establishes an unique designator for an ExpressionEvaluation and to differentiate it from other 
    instances of ExpressionEvaluation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:expressionEvaluationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:expressionEvaluationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="extensionCode">
		<xsd:annotation>
			<xsd:documentation>
    extensionCode is a string of characters used to identify the organization receiving the customized data module.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:extensionCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="extensionProducer">
		<xsd:annotation>
			<xsd:documentation>
    extensionProducer is a string of characters used to identify the organization providing the customized data module.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:extensionProducer</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="externalDocumentType">
		<xsd:annotation>
			<xsd:documentation>
    externalDocumentType is a classification that allows to group ExternalDocuments of a similar nature.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:externalDocumentType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:externalDocumentTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityCleansiness">
		<xsd:annotation>
			<xsd:documentation>
    facilityCleansiness is a classification that indicates the cleansiness that is required for the facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityCleansiness</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:facilityCleansinessCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityDescription">
		<xsd:annotation>
			<xsd:documentation>
    facilityDescription is a description that gives more information on capabilities provided by the Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityDimensions">
		<xsd:annotation>
			<xsd:documentation>
    facilityDimensions are the dimensions of the Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityDimensions</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice/>
			<!-- UML-Extends -->
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityExistsDuring">
		<xsd:annotation>
			<xsd:documentation>
    facilityExistsDuring represents the period of time during which a temporary Facility exists.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityExistsDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    facilityIdentifier is an identifier that establishes a unique designator for a Facility and to differentiate it from other instances of Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:facilityIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityLocationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    facilityLocationIdentifier is an identifier that establishes a unique designator for a FacilityLocation and to differentiate it from other instances of 
    FacilityLocation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityLocationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:facilityLocationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityLocationPeriod">
		<xsd:annotation>
			<xsd:documentation>
    facilityLocationPeriod is a date range that defines the date interval during which a Facility is located at a specific Location. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityLocationPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityName">
		<xsd:annotation>
			<xsd:documentation>
    facilityName is a name by which the Facility is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityOperatorPeriod">
		<xsd:annotation>
			<xsd:documentation>
    facilityOperatorPeriod is a date range that specifies the period of time which a certain Party operates a Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityOperatorPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityOwnedDuring">
		<xsd:annotation>
			<xsd:documentation>
    facilityOwnedDuring is the period during which a facility is or has been owned by a specific Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityOwnedDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityOwnershipRatio">
		<xsd:annotation>
			<xsd:documentation>
    facilityOwnershipRatio is the percentage of ownership that a Party has over the associated facility during the associated period.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityOwnershipRatio</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:relativeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityPermanenceType">
		<xsd:annotation>
			<xsd:documentation>
    facilityPermanenceType is a classification that indicates how permanent a Facility is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityPermanenceType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:facilityPermanenceTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    facilityRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:facilityRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityWeight">
		<xsd:annotation>
			<xsd:documentation>
    facilityWeight is a property that specifies the mass for the Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityWeight</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:massUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureDetectionRate">
		<xsd:annotation>
			<xsd:documentation>
    failureDetectionRate is a classification that indicates the rate at which a failure can be detected.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureDetectionRate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:failureDetectionRateCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeAnalysisType">
		<xsd:annotation>
			<xsd:documentation>
    failureModeAnalysisType is a classification that identifies further specialization for FailureModeAnalysis.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeAnalysisType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:failureModeAnalysisTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCauseDescription">
		<xsd:annotation>
			<xsd:documentation>
    failureModeCauseDescription is a description that gives more information on the FailureModeCause. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeCauseDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCauseIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    failureModeCauseIdentifier is an identifier that establishes a unique designator for a FailureModeCause and to differentiate it from other instances of 
    FailureModeCause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeCauseIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:failureModeCauseIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCauseItemRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    failureModeCauseItemRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeCauseItemRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:failureModeCauseItemRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCauseRatio">
		<xsd:annotation>
			<xsd:documentation>
    failureModeCauseRatio identifies the fraction of an individual FailureModeCause in relation to the entire population of FailureModeCauses identified for 
    the FailureMode. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeCauseRatio</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:relativeUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCompensatingProvisionCategory">
		<xsd:annotation>
			<xsd:documentation>
    failureModeCompensatingProvisionCategory is a classification that identifies a generalization that organize compensating provisions into an overarching 
    compensating provision taxonomy. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeCompensatingProvisionCategory</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:failureModeCompensatingProvisionCategoryCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCompensatingProvisionDescription">
		<xsd:annotation>
			<xsd:documentation>
    failureModeCompensatingProvisionDescription is a description that gives more information on the action taken to negate or reduce the effect of the 
    FailureMode. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeCompensatingProvisionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCompensatingProvisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    failureModeCompensatingProvisionIdentifier is an identifier that establishes a unique designator for a FailureModeCompensatingProvision and to 
    differentiate it from other instances of FailureModeCompensatingProvision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeCompensatingProvisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:failureModeCompensatingProvisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCriticality">
		<xsd:annotation>
			<xsd:documentation>
    failureModeCriticality is a classification that identifies the most serious impact that the FailureMode will have on the referred item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeCriticality</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:failureModeCriticalityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeDescription">
		<xsd:annotation>
			<xsd:documentation>
    failureModeDescription is a description that gives more information on the FailureMode. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeEffectDescription">
		<xsd:annotation>
			<xsd:documentation>
    failureModeEffectDescription is a description that gives more information on the FailureModeEffect. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeEffectDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeEffectLevel">
		<xsd:annotation>
			<xsd:documentation>
    failureModeEffectLevel is classification that identifies the higher indenture level that will be affected by the FailureMode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeEffectLevel</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:failureModeEffectLevelCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeEffectName">
		<xsd:annotation>
			<xsd:documentation>
    failureModeEffectName is a name by which the FailureModeEffect is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeEffectName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    failureModeIdentifier is an identifier that establishes a unique designator for a FailureMode and to differentiate it from other instances of FailureMode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:failureModeIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeName">
		<xsd:annotation>
			<xsd:documentation>
    failureModeName is a name by which the FailureMode is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeRatio">
		<xsd:annotation>
			<xsd:documentation>
    failureModeRatio identifies the fraction of an individual FailureMode in relation to the entire population of FailureModes identified for the 
    AnalysisActivityItem. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeRatio</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:relativeUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="faultDeferredToDate">
		<xsd:annotation>
			<xsd:documentation>
    faultDeferredToDate is the date that indicates when resolution of a Fault will be solved.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:faultDeferredToDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="faultDetectedDate">
		<xsd:annotation>
			<xsd:documentation>
    faultDetectedDate is the date at which the Fault has been detected.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:faultDetectedDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="faultFixedDate">
		<xsd:annotation>
			<xsd:documentation>
    faultFixedDate is the date at which the Fault was fixed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:faultFixedDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="faultIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    FaultIdentifier is a string of characters that is used to uniquely identify a Fault and to differentiate it from other Faults.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:faultIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:faultIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="faultStatus">
		<xsd:annotation>
			<xsd:documentation>
    faultStatus is a classification that indicates whether a Fault has been resolved or not.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:faultStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:faultStatusCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="faultSymptomDateTime">
		<xsd:annotation>
			<xsd:documentation>
    faultSymptomDateTime is a DateTime which represents the date and time at which the Fault occurred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:faultSymptomDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="faultSymptomIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    faultSymptomIdentifier is a [compositeKey] that allows with a master key to uniquely identify a FaultSymptom.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:faultSymptomIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:faultSymptomIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetBasedAtDuring">
		<xsd:annotation>
			<xsd:documentation>
    fleetBasedAtDuring is a DateRange during which a Fleet is based at a specific location.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetBasedAtDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetDescription">
		<xsd:annotation>
			<xsd:documentation>
    fleetDescription  is a description that gives more information on the Fleet.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    fleetIdentifier is an identifier that establishes a unique designator for a Fleet to differentiate it from other instances of Fleet.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:fleetIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetName">
		<xsd:annotation>
			<xsd:documentation>
    fleetName is a name by which the Fleet is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetOperatedByDuring">
		<xsd:annotation>
			<xsd:documentation>
    fleetOperatedByDuring is a [DateRange] that indicates the period of time during which a Fleet is operated by a specific Operator.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetOperatedByDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetOperatesAtLocationDuring">
		<xsd:annotation>
			<xsd:documentation>
    fleetOperatesAtLocationDuring is a DateRange during which a Fleet has operated at a specific location.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetOperatesAtLocationDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetPlanningDescription">
		<xsd:annotation>
			<xsd:documentation>
    fleetPlanningDescription is a narrative statement explaining the FleetPlanning.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetPlanningDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetPlanningIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    fleetPlanningIdentifier is a string of text that uniquely identifies a FleetPlanning and allows to differentiate it from other FleetPlannings.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetPlanningIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:fleetPlanningIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetPlanningPeriod">
		<xsd:annotation>
			<xsd:documentation>
    fleetPlanningPeriod is a range of dates for which the FleetPlanning is being performed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetPlanningPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetPlanningStatus">
		<xsd:annotation>
			<xsd:documentation>
    fleetPlanningStatus is a classification that allows to define the validity of a FleetPlanning.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetPlanningStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:fleetPlanningStatusCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    fleetRelationshipType is a [classification] that defines how two Fleets are related.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:fleetRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetRequirementAvailability">
		<xsd:annotation>
			<xsd:documentation>
    fleetRequirementAvailability is the availability that the fleet must have to comply with a specific FLeetRequirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetRequirementAvailability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:relativeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetRequirementDate">
		<xsd:annotation>
			<xsd:documentation>
    fleetRequirementDate is the date at which a FleetRequirement has been defined.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetRequirementDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetRequirementMinimumFleetSize">
		<xsd:annotation>
			<xsd:documentation>
    fleetRequirementMinimumFleetSize is the minimum number of vehicles that a fleet must contain so as to comply with the FleetRequirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetRequirementMinimumFleetSize</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetRequirementPeriod">
		<xsd:annotation>
			<xsd:documentation>
    fleetRequirementPeriod is the period of time during which a fleet must meet this requirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetRequirementPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetRequirementUsage">
		<xsd:annotation>
			<xsd:documentation>
    fleetRequirementUsage reflects the planned usage of the fleet.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetRequirementUsage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:usageTimeRateUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetRequirementUsageLimitation">
		<xsd:annotation>
			<xsd:documentation>
    fleetRequirementUsageLimitation is a narrative statement explaining potential limitations of usage of the fleet.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetRequirementUsageLimitation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskCancellationNoticeDatetime">
		<xsd:annotation>
			<xsd:documentation>
    fleetTaskCancellationNoticeDatetime is a DateTime which represents the date and time at which the FleetTaskCancellationNotice took place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTaskCancellationNoticeDatetime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskCancellationNoticeIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    fleetTaskCancellationNoticeIdentifier is a string of text that uniquely identifies a FleetTaskCancellationNotice and differentiates it from other 
    FleetTaskCancellationNotices.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTaskCancellationNoticeIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:fleetTaskCancellationNoticeIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskCancellationNoticeReason">
		<xsd:annotation>
			<xsd:documentation>
    fleetTaskCancellationNoticeReason is a description that provides a human readable expression of why the FleetTaskCancellationNotice took place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTaskCancellationNoticeReason</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskDescription">
		<xsd:annotation>
			<xsd:documentation>
    fleetTaskDescription is a narrative statement explaining the FleetTask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTaskDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskExpectedEnd">
		<xsd:annotation>
			<xsd:documentation>
    fleetTaskExpectedEnd is the date and time at which the FleetTask is expected to end.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTaskExpectedEnd</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskExpectedStart">
		<xsd:annotation>
			<xsd:documentation>
    fleetTaskExpectedStart is the date and time at which the FleetTask is expected to start.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTaskExpectedStart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    fleetTaskIdentifier is a string of text that uniquely identifies a FleetTask and differentiates it from other FleetTasks.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTaskIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:fleetTaskIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskPriority">
		<xsd:annotation>
			<xsd:documentation>
    fleetTaskPriority is a classification that allows to define the importance of a FleetTask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTaskPriority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:fleetTaskPriorityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskRequiredFuel">
		<xsd:annotation>
			<xsd:documentation>
    fleetTaskRequiredFuel is the amount of fuel estimated to be required to carry out the FleetTask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTaskRequiredFuel</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:volumeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="geographicalAreaDescription">
		<xsd:annotation>
			<xsd:documentation>
    geographicalAreaDescription is a description that provides more information about the GeographicalArea.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:geographicalAreaDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="geographicalAreaName">
		<xsd:annotation>
			<xsd:documentation>
    geographicalAreaName is a name by which the GeographicalArea is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:geographicalAreaName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="geographicalAreaType">
		<xsd:annotation>
			<xsd:documentation>
    geographicalAreaType is a classification that identifies the nature of the GeographicalArea.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:geographicalAreaType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:geographicalAreaTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="geographicalCoordinateSystem">
		<xsd:annotation>
			<xsd:documentation>
    geographicalCoordinateSystem is a classification that identifies the geographical coordinate system used to determine latitude and longitude.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:geographicalCoordinateSystem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:geographicalCoordinateSystemCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementAttachmentConnectorDescription">
		<xsd:annotation>
			<xsd:documentation>
    hardwareElementAttachmentConnectorDescription is a description that gives more information on the HardwareElementAttachingConnector. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwareElementAttachmentConnectorDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementAttachmentConnectorIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    hardwareElementAttachmentConnectorIdentifier is an identifier that establishes a unique designator for a HardwareElementAttachingConnector and to 
    differentiate it from other instances of HardwareElementAttachingConnector.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwareElementAttachmentConnectorIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:hardwareElementAttachmentConnectorIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementAttachmentSlotDescription">
		<xsd:annotation>
			<xsd:documentation>
    hardwareElementAttachmentSlotDescription is a description that gives more information on the HardwareElementAttachmentSlot. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwareElementAttachmentSlotDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementAttachmentSlotIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    hardwareElementAttachmentSlotIdentifier is an identifier that establishes a unique designator for a HardwareElementAttachmentSlot and to differentiate it 
    from other instances of HardwareElementAttachmentSlot .
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwareElementAttachmentSlotIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:hardwareElementAttachmentSlotIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementRepairability">
		<xsd:annotation>
			<xsd:documentation>
    hardwareElementRepairability is a classification that indicates whether the HardwareElement part realization is expected to be repairable from a technical 
    standpoint, independent of customer maintenance concepts.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwareElementRepairability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:hardwareElementRepairabilityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementReplaceability">
		<xsd:annotation>
			<xsd:documentation>
    hardwareElementReplaceability is a classification that identifies whether the HardwareElement part realization is expected to be replaceable from a 
    technical standpoint, independent from customer maintenance concepts.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwareElementReplaceability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:hardwareElementReplaceabilityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementType">
		<xsd:annotation>
			<xsd:documentation>
    hardwareElementType is a classification that identifies further specialization for a HardwareElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwareElementType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:hardwareElementTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartContainerDescription">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartContainerDescription is a textual narrative that describes a HardwarePartContainer.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartContainerDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartContainerIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartContainerIdentifier is a string of characters that allows to uniquely identify a HardwarePartContainer and differentiate it from other ones.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartContainerIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:hardwarePartContainerIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartElectromagneticIncompatible">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartElectromagneticIncompatible is a classification that identifies the ability of an electrical HardwarePartDefinition to function satisfactorily 
    in its electromagnetic environment without inadmissibly influencing this environment to which other 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartElectromagneticIncompatible</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartElectromagneticSensitive">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartElectromagneticSensitive is a classification that specifies whether the HardwarePartDefinition can be subject to catastrophic failure, major 
    characteristic change, or performance degradation, due to influences of electromagnetic fields.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartElectromagneticSensitive</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartElectrostaticSensitive">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartElectrostaticSensitive is a classification that specifies whether the HardwarePartDefinition can be subject to catastrophic failure, major 
    characteristic change, or performance degradation, due to influences of electrostatic fields and/or elec
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartElectrostaticSensitive</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartFitmentRequirement">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartFitmentRequirement is a classification that identifies if a HardwarePartDefinition cannot be fitted in its �as supplied� state but must undergo 
    some operation before or during installation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartFitmentRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:hardwarePartFitmentRequirementCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartHazardousClass">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartHazardousClass is a classification that identifies to what extent a HardwarePartDefinition is capable of posing a significant risk to health, 
    safety or property during transportation, handling or storage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartHazardousClass</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:hazardousClassCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartLogisticsCategory">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartLogisticsCategory is a classification that defines the role of the HardwarePartDefinition in the context of product support.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartLogisticsCategory</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:hardwarePartLogisticsCategoryCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartMagneticSensitive">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartMagneticSensitive is a classification that specifies whether the HardwarePartDefinition can be subject to catastrophic failure, major 
    characteristic change, or performance degradation, due to influences of magnetic fields.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartMagneticSensitive</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartMass">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartMass is a property that specifies the tare amount of matter for a HardwarePartDefinition.   
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartMass</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:massUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartOperationalAuthorizedLife">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartOperationalAuthorizedLife is an extended property that identifies the maximum usage limit for which an item can be operated, and upon reaching 
    this limit, any further usage of the item must be re-authorized.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartOperationalAuthorizedLife</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="aul" nillable="true" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:timeCycleUnit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartRadiationSensitive">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartRadiationSensitive is a classification that specifies whether the HardwarePartDefinition can be subject to catastrophic failure, major 
    characteristic change, or performance degradation, due to influences of radioactive radiation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartRadiationSensitive</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartRepairability">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartRepairability is a classification that identifies the extent to which the HardwarePartDefinition is repairable from a technical perspective, 
    independent of customer maintenance concepts.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartRepairability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:hardwarePartRepairabilityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartScrapRate">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartScrapRate is a property that defines the fraction of repairable units which, when removed from service, will be found to be beyond economic 
    repair and therefore have to be scrapped.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartScrapRate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:relativeUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartSize">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartSize is an extended property that specifies the spatial magnitudes for a HardwarePartDefinition.   
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartSize</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartUnitOfIssuePrice">
		<xsd:annotation>
			<xsd:documentation>
    hardwarePartUnitOfIssuePrice is used to indicate the price of an item related to:
    - Unit of issue
    - Currency
    - Economic conditions
    - Type of price
    - Price condition
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartUnitOfIssuePrice</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="informationCode">
		<xsd:annotation>
			<xsd:documentation>
    informationCode is a string of characters that represents the information code attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:informationCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="informationCodeVariant">
		<xsd:annotation>
			<xsd:documentation>
    informationCodeVariant is a string of characters that represents the information code variant attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:informationCodeVariant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureAvailablePeriod">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureAvailablePeriod is a date range that represents the period during which an Infrastructure is available for an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureAvailablePeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureAvailableRestriction">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureAvailableRestriction is a description that gives more information on infrastructure restriction during the specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureAvailableRestriction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureAvailableType">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureAvailableType is a classification that provides information about the type of availability that is available for an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureAvailableType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:infrastructureAvailableTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureDescription">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureDescription is a description that provides a human readable expression of an Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureIdentifier  is an identifier that establishes a unique designator for a Infrastructure and to differentiate it from other instances of 
    Infrastructure .
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:infrastructureIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureName">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureName is a name by which the Infrastructure is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureNodeAtLocationPeriod">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureNodeAtLocationPeriod is a date range that specifies the period of time during which an IncludedInfrastructureNode has been located at the 
    specified location.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureNodeAtLocationPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureNodeDescription">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureNodeDescription is a description that gives more information on the InfrastructureNode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureNodeDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureNodeIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureNodeIdentifier s an identifier that establishes a unique designator for a InfrastructureNode and to differentiate it from other instances of 
    InfrastructureNode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureNodeIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:infrastructureNodeIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureNodeRealizationPeriod">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureNodeRealizationPeriod is a date range that specifies the period of time during which the associated InfrastructureNodeItem is used to realize 
    the InfrastructureNode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureNodeRealizationPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureNodeRole">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureNodeRole is a classification that identifies the aspect from which the InfratructureNode is included in the Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureNodeRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:infrastructureNodeRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureOperatingPeriodDateTimeRange">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureOperatingPeriodDateTimeRange is the period of time during which the associated Infrastructure has operated in a specific mode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureOperatingPeriodDateTimeRange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureOperatingPeriodDescription">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureOperatingPeriodDescription is a textual narrative that provides further information about the InfrastructureOperatingPeriod.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureOperatingPeriodDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureOperatingPeriodIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureOperatingPeriodIdentifier is a text string that uniquely identifies an instance of InfrastructureOperatingPeriod and allows to differentiate 
    it from other instances of InfrastructureOperatingPeriod.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureOperatingPeriodIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:infrastructureOperatingPeriodIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureOperatingPeriodMode">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureOperatingPeriodMode is a classification indicating how the associated Infrastructure has operated during the specified operating period.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureOperatingPeriodMode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:infrastructureOperatingPeriodModeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureOperatingPeriodName">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureOperatingPeriodName is a name by which the InfrastructureOperatingPeriod is known and commonly referred to.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureOperatingPeriodName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructurePartyPeriod">
		<xsd:annotation>
			<xsd:documentation>
    infrastructurePartyPeriod is a date range that specifies the period of time during which a Party has the role regarding a specific Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructurePartyPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructurePartyRole">
		<xsd:annotation>
			<xsd:documentation>
    infrastructurePartyRole is a classification that identifies the role of the associated PartyItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructurePartyRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:infrastructurePartyRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:infrastructureRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureRevisionDate is a date that specifies when the InfrastructureRevision was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureRevisionIdentifier s an identifier that establishes a unique designator for a InfrastructureRevision and to differentiate it from other 
    instances of InfrastructureRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:infrastructureRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureRevisionRationale is a description that provides a justification for revising the InfrastructureRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureRevisionStatus is a state that identifies the maturity of an InfrastructureRevision. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureRevisionValidityPeriod">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureRevisionValidityPeriod is a date range that specifies the period of time during which an InfrastructureRevision is valid.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureRevisionValidityPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureType">
		<xsd:annotation>
			<xsd:documentation>
    infrastructureType is a classification that identifies further specialization for an Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:infrastructureTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="inServiceOptimizationAnalysisName">
		<xsd:annotation>
			<xsd:documentation>
    inServiceOptimizationAnalysisName is a name by which the InServiceOptimizationAnalysis is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:inServiceOptimizationAnalysisName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="installationLocationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    installationLocationIdentifier is an identifier that establishes a unique designator for a InstallationLocation and to differentiate it from other 
    instances of InstallationLocation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:installationLocationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:installationLocationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="installationLocationName">
		<xsd:annotation>
			<xsd:documentation>
    installationLocationName is a name by which the InstallationLocation is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:installationLocationName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="installedDateTime">
		<xsd:annotation>
			<xsd:documentation>
    installedDateTime is a date and time that specifies the exact point in time when the RealizedPart was installed at the InstallationLocation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:installedDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="involvedDisposalOrganizationRole">
		<xsd:annotation>
			<xsd:documentation>
    involvedDisposalOrganizationRole is a classification that allows to determine the role played by an organization as part of the disposal.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:involvedDisposalOrganizationRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:involvedDisposalOrganizationRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDemilitarizationDataClass">
		<xsd:annotation>
			<xsd:documentation>
    itemDemilitarizationDataClass is a classification defining special measures to be taken when an item is being disposed of.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemDemilitarizationDataClass</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:itemDemilitarizationDataClassCode" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDemilitarizationDataDescription">
		<xsd:annotation>
			<xsd:documentation>
    itemDemilitarizationDataDescription is a textual narrative providing further information related to the demilitarization of an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemDemilitarizationDataDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDisposalOperationActionJustification">
		<xsd:annotation>
			<xsd:documentation>
    itemDisposalOperationActionJustification is a narrative text providing the justification for an Action derived from an ItemDisposalOperation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemDisposalOperationActionJustification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDisposalOperationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    itemDisposalOperationIdentifier is a text string that uniquely identifies an ItemDisposalOperation and allows to differentiate it from other 
    ItemDisposalOperation instances.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemDisposalOperationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:itemDisposalOperationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDisposalOperationMethod">
		<xsd:annotation>
			<xsd:documentation>
    itemDisposalOperationMethod is a classification that indicates the method by which the ItemDisposalOperation is performed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemDisposalOperationMethod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:itemDisposalOperationMethodCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDisposalOperationMethodDetails">
		<xsd:annotation>
			<xsd:documentation>
    itemDisposalOperationMethodDetails is a textual narrative providing further information on the itemDisposalOperationMethod.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemDisposalOperationMethodDetails</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDisposalOperationOrganization">
		<xsd:annotation>
			<xsd:documentation>
    itemDisposalOperationOrganization is the organization that performs the ItemDisposalOperation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemDisposalOperationOrganization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="orgRef" type="organizationRef" nillable="true"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDisposalOperationPeriod">
		<xsd:annotation>
			<xsd:documentation>
    itemDisposalOperationPeriod is the period of time during which the item was disposed of.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemDisposalOperationPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemExportControlRegulationClassification">
		<xsd:annotation>
			<xsd:documentation>
    itemExportControlRegulationClassification is the classification that is associated to an export controlled item under a specific ExportControlRegulation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemExportControlRegulationClassification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:itemExportControlRegulationClassificationCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemLocationCode">
		<xsd:annotation>
			<xsd:documentation>
    itemLocationCode is a string of characters that represents the item location code attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemLocationCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="laborRate">
		<xsd:annotation>
			<xsd:documentation>
    laborRate is a value indicating the monetary value of an hour of a person with particular skills or competences.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:laborRate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="latitude">
		<xsd:annotation>
			<xsd:documentation>
    latitude is a string of characters that contributes to uniquely identifies a GlobalPosition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:latitude</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="learnCode">
		<xsd:annotation>
			<xsd:documentation>
    learnCode is a string of characters that represents the learn code attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:learnCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="learnEventCode">
		<xsd:annotation>
			<xsd:documentation>
    learnEventCode is a string of characters that represents the learn event code attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:learnEventCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="localPositionDescription">
		<xsd:annotation>
			<xsd:documentation>
    localPositionDescription is a narrative text explaining the rationale for a LocalPosition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:localPositionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="localPositionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    localPositionIdentifier is a string of text that uniquely identifies a LocalPosition and differentiates it from other LocalPositions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:localPositionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:localPositionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="localPositionName">
		<xsd:annotation>
			<xsd:documentation>
    localPositionName is a text by which a LocalPosition is commonly known.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:localPositionName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="localPositionRefType">
		<xsd:annotation>
			<xsd:documentation>
    localPositionRefType is a classification that determines the point in a referenced item where all LocalPosition coordinates are zero.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:localPositionRefType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:localPositionRefTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="locationRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    locationRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:locationRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:locationRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="locatorDescription">
		<xsd:annotation>
			<xsd:documentation>
    locatorDescription is a narrative statement about the locator.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:locatorDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="locatorIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    locatorIdentifier is a string of characters used to uniquely identify a Locator.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:locatorIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:locatorIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="locatorName">
		<xsd:annotation>
			<xsd:documentation>
    locatorName is a word or phrase by which a locator is known and can easily be referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:locatorName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBookDescription">
		<xsd:annotation>
			<xsd:documentation>
    logBookDescription is a narrative statement explaining what the LogBook is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logBookDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBookEntryComment">
		<xsd:annotation>
			<xsd:documentation>
    logBookEntryComment is a textual wording providing additional information to a logBookEntry.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logBookEntryComment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBookEntryDateTime">
		<xsd:annotation>
			<xsd:documentation>
    logBookEntryDateTime is the date and time at which the logbook entry was recorded.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logBookEntryDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBookEntryIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    logBookEntryIdentifier is a string of characters used to uniquely identify a LogBookEntry, thus being able to differentiate it from other LogBookEntries.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logBookEntryIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:logBookEntryIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logbookEntryMeasurementPointIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    logbookEntryMeasurementPointIdentifier is a string of text that uniquely identifies a LogbookEntryMeasurementPoint and differentiates it from other 
    instances of LogbookEntryMeasurementPoint.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logbookEntryMeasurementPointIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:logbookEntryMeasurementPointIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logbookEntryMeasurementPointNote">
		<xsd:annotation>
			<xsd:documentation>
    logbookEntryMeasurementPointNote is a narrative text that provides a human readable expression of a LogBookEntryMeasurementPoint.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logbookEntryMeasurementPointNote</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logbookEntryMeasurementPointType">
		<xsd:annotation>
			<xsd:documentation>
    logbookEntryMeasurementPointType is a classification that allows to group similar instances of LogbookEntryMeasurementPoint.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logbookEntryMeasurementPointType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:logbookEntryMeasurementPointTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logbookEntryMeasurementPointValue">
		<xsd:annotation>
			<xsd:documentation>
    logbookEntryMeasurementPointValue is a property that represents the value that is recorded for the LogbookEntryMeasurementPoint.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logbookEntryMeasurementPointValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBookEntryType">
		<xsd:annotation>
			<xsd:documentation>
    logBookEntryType is a classification that is valid for a specific LogBookEntry.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logBookEntryType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:logBookEntryTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBookIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    logBookIdentifier is a string of characters used to uniquely identify a LogBook, thus being able to differentiate it from other logBooks.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logBookIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:logBookIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBookType">
		<xsd:annotation>
			<xsd:documentation>
    logBookType is a classification that allows to define the purpose of a logbook.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logBookType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:logBookTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="longitude">
		<xsd:annotation>
			<xsd:documentation>
    longitude is a string of characters that represents a geographic coordinate specifying the east�west position of a point.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:longitude</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="looseWasteDescription">
		<xsd:annotation>
			<xsd:documentation>
    looseWasteDescription is a narrative text explaining the nature of the LooseWaste.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:looseWasteDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="looseWasteIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    looseWasteIdentifier is a string of characters that uniquely identifies a LooseWaste instance and differentiates it from other LooseWaste instances.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:looseWasteIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:looseWasteIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="looseWasteName">
		<xsd:annotation>
			<xsd:documentation>
    looseWasteName is a name by which the LooseWaste is known and commonly referred to.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:looseWasteName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="looseWasteType">
		<xsd:annotation>
			<xsd:documentation>
    looseWasteType is a classification that defines the characteristics of the LooseWaste.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:looseWasteType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:looseWasteTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="looseWasteVolume">
		<xsd:annotation>
			<xsd:documentation>
    looseWasteVolume is a set of measures describing the volume of the LooseWaste.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:looseWasteVolume</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="looseWasteWeight">
		<xsd:annotation>
			<xsd:documentation>
    looseWasteWeight is a property describing the mass of the LooseWaste.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:looseWasteWeight</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:massUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="lowerLimitSalesQuantity">
		<xsd:annotation>
			<xsd:documentation>
    lowerLimitSalesQuantity indicates a hardwarePartUnitOfIssuePrice valid for an individual, specified range of buy quantities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:lowerLimitSalesQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityNote">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityNote is a narrative statement about potential issues encountered during the MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityNote</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityPartyRole">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityPartyRole is a [classification] that defines the role of a Party in the context of a MaintenanceActivity..
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityPartyRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:maintenanceActivityPartyRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityPartyTime">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityPartyTime is the period of time spent by a Party during a MaintenanceActivity on a specific role.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityPartyTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:timeConsumptionUnit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityPlanAccessHours">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityPlanAccessHours is the is the expected time to be spent in gaining access for the MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityPlanAccessHours</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:timeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityPlanExecutionHours">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityPlanExecutionHours is the planned time to be spent carrying out the MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityPlanExecutionHours</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:timeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityPlanPeriod">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityPlanPeriod is the period of time during which the MaintenanceActivity is or was planned.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityPlanPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityPlanPreparationHours">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityPlanPreparationHours is the expected time to be spect on preparation for the MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityPlanPreparationHours</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:timeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityRecordAccessHours">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityRecordAccessHours is the real time in hours spent in gaining access for the MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityRecordAccessHours</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:timeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityRecordApprovalTime">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityRecordApprovalTime is the date and time at which the MaintenanceActivity was approved.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityRecordApprovalTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityRecordExecutionHours">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityRecordExecutionHours is the real time in hours spent carrying out the MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityRecordExecutionHours</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:timeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityRecordPeriod">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityRecordPeriod is the period of time during which the maintenance was actually executed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityRecordPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityRecordPreparationHours">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityRecordPreparationHours is the real time in hours spent for the preparation of the MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityRecordPreparationHours</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:timeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityRecordWorkDone">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivityRecordWorkDone is a text that briefly describes the work that has been done as part of a MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityRecordWorkDone</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivitySequence">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceActivitySequence is an integer that indicates the sequence number of the MaintenanceActivity in a set of MaintenanceActivities that are part of 
    a WorkOrder.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivitySequence</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceEventCategoryType">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceEventCategoryType is a classification that indicates a characteristic of a MaintenanceEvent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceEventCategoryType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:maintenanceEventCategoryTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilityShifts">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceFacilityShifts is the number of staff shifts in a MaintenanceFacility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceFacilityShifts</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilitySlotDescription">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceFacilitySlotDescription is a textual explanation of the characteristics of a MaintenanceFacilitySlot.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceFacilitySlotDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilitySlotIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceFacilitySlotIdentifier is a string of characters that allows to uniquely identify a MaintenanceFacilitySlot and differentiate it from other 
    MaintenanceFacilitySlots.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceFacilitySlotIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:maintenanceFacilitySlotIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilitySlotPlannedUsagePeriod">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceFacilitySlotPlannedUsagePeriod is a period of time in which a specific MaintenanceFacilitySlot has been allocated to a specific 
    SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceFacilitySlotPlannedUsagePeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilitySlotType">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceFacilitySlotType is a classification that allows to group MaintenanceFacilitySlots.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceFacilitySlotType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:maintenanceFacilitySlotTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilityType">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceFacilityType is a classification that identifies further specialization for a MaintenanceFacility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceFacilityType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:maintenanceFacilityTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceLevelDescription">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceLevelDescription is a description that gives more information on the MaintenanceLevel.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceLevelDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceLevelIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceLevelIdentifier is an identifier that establishes a unique designator for a MaintenanceLevel and to differentiate it from other instances of 
    MaintenanceLevel.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceLevelIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:maintenanceLevelIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceLevelName">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceLevelName is a name by which the MaintenanceLevel is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceLevelName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceLicenceIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceLicenceIdentifier is a string of characters that allows to uniquely identify a MaintenanceLicense and differentiate it from other 
    MaintenanceLicenses.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceLicenceIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:maintenanceLicenceIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceLicenceName">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceLicenceName is a name or short phrase by which a MaintenanceLicense is usually known.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceLicenceName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceLicenceType">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceLicenceType is a DatedClassification that defines the kind of MaintenanceLicence that has been granted.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceLicenceType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:maintenanceLicenceTypeCode" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceLicenceValidity">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceLicenceValidity is the standard duration for which a maintenance license is granted.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceLicenceValidity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceOrganizationApprovalDuring">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceOrganizationApprovalDuring is a period during which a specific MaintenanceOrganizationApproval is in effect.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceOrganizationApprovalDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceOrganizationApprovalType">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceOrganizationApprovalType is a classification that defines the kind of MaintenanceOrganizationApproval that has been granted.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceOrganizationApprovalType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:maintenanceOrganizationApprovalTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenancePersonApprovedProductPeriod">
		<xsd:annotation>
			<xsd:documentation>
    maintenancePersonApprovedProductPeriod is a period of time during which a MaintenancePerson has been approved to work on a specific ProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenancePersonApprovedProductPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenancePersonFacilityPeriod">
		<xsd:annotation>
			<xsd:documentation>
    maintenancePersonFacilityPeriod is the time period during which a MaintenancePerson has worked at a specific MaintenanceFacility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenancePersonFacilityPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenancePersonJobType">
		<xsd:annotation>
			<xsd:documentation>
    maintenancePersonJobType is a classification that identifies the kind of maintenance job that a MaintenancePerson has.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenancePersonJobType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:maintenancePersonJobTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenancePersonRemarks">
		<xsd:annotation>
			<xsd:documentation>
    maintenancePersonRemarks is a textual statement related to a person.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenancePersonRemarks</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceProgramRevisionDescription">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceProgramRevisionDescription is a narrative statement explaining the MaintenanceProgramRevision and/or the changes that have been made to the 
    MaintenanceProgram.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceProgramRevisionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceProgramType">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceProgramType is a classification that allows to group different types of Maintenance Programs.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceProgramType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:maintenanceProgramTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceSignificantOrRelevant">
		<xsd:annotation>
			<xsd:documentation>
    maintenanceSignificantOrRelevant is a classification that identifies whether a BreakdownElement requires maintenance activities or not.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceSignificantOrRelevant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:maintenanceSignificantOrRelevantCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="managedFleetDuring">
		<xsd:annotation>
			<xsd:documentation>
    managedFleetDuring is a [DateRange] that represents the period during which a FleetManager manages a specific Fleet.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:managedFleetDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialCharacteristicsRecordingDate">
		<xsd:annotation>
			<xsd:documentation>
    materialCharacteristicsRecordingDate is the date at which the Material information was last recorded or updated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialCharacteristicsRecordingDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionDescription">
		<xsd:annotation>
			<xsd:documentation>
    materialDefinitionDescription is a description that gives more information on the material.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinitionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    materialDefinitionIdentifier is an identifier that establishes a unique designator for a MaterialDefinition and to differentiate it from other instances of 
    MaterialDefinition. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinitionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:materialDefinitionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionName">
		<xsd:annotation>
			<xsd:documentation>
    materialDefinitionName is a name by which the MaterialDefinition is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinitionName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    materialDefinitionRevisionDate is a date that specifies when the MaterialDefinition was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinitionRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    materialDefinitionRevisionIdentifier is an identifier that establishes a unique designator for a MaterialDefinitionRevision and to differentiate it from 
    other instances of MaterialDefinitionRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinitionRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:materialDefinitionRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    materialDefinitionRevisionRationale is a description that gives more information on the justification for revising the MaterialDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinitionRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    materialDefinitionRevisionStatus is a state that identifies the progress on the development of a MaterialDefinitionRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinitionRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionRiskDescription">
		<xsd:annotation>
			<xsd:documentation>
    materialDefinitionRiskDescription is a description that specifies serious health aspects that the material can pose on personnel getting in contact with 
    the material.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinitionRiskDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionRiskFactor">
		<xsd:annotation>
			<xsd:documentation>
    materialDefinitionRiskFactor is a classification which identifies possible risks associated with material usage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinitionRiskFactor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:materialDefinitionRiskFactorCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionSafeHandlingRequirement">
		<xsd:annotation>
			<xsd:documentation>
    materialDefinitionSafeHandlingRequirement is a description that gives more information on requirements for safe handling of the material.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinitionSafeHandlingRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionWasteProductsDisposalDescription">
		<xsd:annotation>
			<xsd:documentation>
    materialDefinitionWasteProductsDisposalDescription is a description that gives more information on how waste products from the material need to be managed 
    when the material is disposed of according to the procedure during use or after being used.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinitionWasteProductsDisposalDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDescription">
		<xsd:annotation>
			<xsd:documentation>
    materialDescription is a narrative statement explaining the Material.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    materialIdentifier is a string of text that uniquely identifies a Material and differentiates it from other materials.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:materialIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialItemCategoryCode">
		<xsd:annotation>
			<xsd:documentation>
    materialItemCategoryCode is a string of characters that represents the material item category code attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialItemCategoryCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialName">
		<xsd:annotation>
			<xsd:documentation>
    materialName is a text under which the Material is commonly known.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialRiskDescription">
		<xsd:annotation>
			<xsd:documentation>
    materialRiskDescription is a narrative statement explaining the Material risk.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialRiskDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialRiskFactor">
		<xsd:annotation>
			<xsd:documentation>
    materialRiskFactor is a classification that allows to determine whether the Material presents some safety or hazard risk.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialRiskFactor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:materialRiskFactorCode" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialSubstanceUsageCategory">
		<xsd:annotation>
			<xsd:documentation>
    materialSubstanceUsageCategory is a classification that defines the purpose for which the Material is used.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialSubstanceUsageCategory</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:materialSubstanceUsageCategoryCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="measurementPointIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    measurementPointIdentifier is an identifier that establishes a unique designator for a MeasurementPoint and to differentiate it from other instances of 
    MeasurementPoint.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:measurementPointIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:measurementPointIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="measurementPointValue">
		<xsd:annotation>
			<xsd:documentation>
    measurementPointValue is a property that represents the value that is recorded for the MeasurementPoint.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:measurementPointValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="measuringPointDefinitionDescription">
		<xsd:annotation>
			<xsd:documentation>
    measuringPointDefinitionDescription is a description that gives more information on the MeasuringPointDefinition. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:measuringPointDefinitionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="measuringPointDefinitionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    measuringPointDefinitionIdentifier is an identifier that establishes a unique designator for a MeasuringPointDefinition and to differentiate it from other 
    instances of MeasuringPointDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:measuringPointDefinitionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:measuringPointDefinitionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="measuringPointDefinitionName">
		<xsd:annotation>
			<xsd:documentation>
    measuringPointDefinitionName is a name by which the MeasuringPointDefinition is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:measuringPointDefinitionName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="measuringPointDefinitionType">
		<xsd:annotation>
			<xsd:documentation>
    measuringPointDefinitionType is a classification that identifies further specialization of MeasuringPointDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:measuringPointDefinitionType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:measuringPointDefinitionTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageContentStatus">
		<xsd:annotation>
			<xsd:documentation>
    messageContentStatus is a state that identifies the quality assurance status of the message content.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:messageContentStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:messageContentStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageContentType">
		<xsd:annotation>
			<xsd:documentation>
    messageContentType is a classification that characterizes the information included in the message content.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:messageContentType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:messageContentTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageCreationDateTime">
		<xsd:annotation>
			<xsd:documentation>
    messageCreationDateTime is a date and time that defines when the Message was generated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:messageCreationDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    messageIdentifier is an identifier that establishes a unique designator for a Message and allows it to be differentiated from other instances of Message.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:messageIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:messageIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageLanguage">
		<xsd:annotation>
			<xsd:documentation>
    messageLanguage is a classification that identifies the language of the information in the Message content.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:messageLanguage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:languageCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messagePartyType">
		<xsd:annotation>
			<xsd:documentation>
    messagePartyType is a classification that identifies the role of the associated party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:messagePartyType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:messagePartyTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    messageRelationshipType is a classification that characterizes the relationship that is established between two Messages.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:messageRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:messageRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="minimumSalesQuantity">
		<xsd:annotation>
			<xsd:documentation>
    minimumSalesQuantity identifies the minimum quantity that can be purchased at the quoted unitOfIssuePrice (UOP).
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:minimumSalesQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinitionDescription">
		<xsd:annotation>
			<xsd:documentation>
    missionDefinitionDescription is a description of the Product operational scenario.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:missionDefinitionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinitionFrequency">
		<xsd:annotation>
			<xsd:documentation>
    missionDefinitionFrequency is a property that specifies the rate of occurrence.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:missionDefinitionFrequency</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:timeCycleRateUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinitionName">
		<xsd:annotation>
			<xsd:documentation>
    missionDefinitionName is a name by which the mission definition is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:missionDefinitionName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinitionObjective">
		<xsd:annotation>
			<xsd:documentation>
    missionDefinitionObjective is a description that specifies the expected end state after the defined MissionDefinition is completed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:missionDefinitionObjective</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinitionRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    missionDefinitionRevisionDate is a date that specifies when a MissionDefinition was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:missionDefinitionRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinitionRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    missionDefinitionRevisionIdentifier is an identifier that establishes a unique designator for a MissionDefinitionRevision and to differentiate it from 
    other instances of MissionDefinitionRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:missionDefinitionRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:missionDefinitionRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinitionRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    missionDefinitionRevisionRationale is a description that gives more information on the justification for revising the MissionDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:missionDefinitionRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinitionRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    missionDefinitionRevisionStatus is a state that identifies the maturity of a MissionDefinitionRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:missionDefinitionRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinitionType">
		<xsd:annotation>
			<xsd:documentation>
    missionDefinitionType is a classification that identifies further specialization for a MissionDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:missionDefinitionType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:missionDefinitionTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="modelIdentificationCode">
		<xsd:annotation>
			<xsd:documentation>
    modelIdentificationCode is a string of characters that represents the model identification code attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:modelIdentificationCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    movementIdentifier is a string of characters that uniquely defines a Movement and allows to differentiate it from other Movements.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:movementIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegDelayCause">
		<xsd:annotation>
			<xsd:documentation>
    movementLegDelayCause is a textual narrative describing the reason for the delay.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLegDelayCause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegDelayDate">
		<xsd:annotation>
			<xsd:documentation>
    movementLegDelayDate is the date at which the delay took place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLegDelayDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegDelayDuration">
		<xsd:annotation>
			<xsd:documentation>
    movementLegDelayDuration represents the duration of the travel leg delay.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLegDelayDuration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:timeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegDelayIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    movementLegDelayIdentifier is a string of text that allows to uniquely identify a MovementLegDelay and differentiate it from other MovementLegDelays.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLegDelayIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:movementLegDelayIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegDelayType">
		<xsd:annotation>
			<xsd:documentation>
    movementLegDelayType is a classification that permits to group the MovementLegDelays.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLegDelayType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:movementLegDelayTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegGeoLocationTime">
		<xsd:annotation>
			<xsd:documentation>
    movementLegGeoLocationTime is the time at which a serialized product variant was at a specific geo-location during a movement leg.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLegGeoLocationTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    movementLegIdentifier s a string of characters used to uniquely identify a MovementLeg and differentiate it from other MovementLegs.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLegIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:movementLegIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegPeriod">
		<xsd:annotation>
			<xsd:documentation>
    movementLegPeriod is the period during which the product is performing a travel leg (is in transit).
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLegPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegResult">
		<xsd:annotation>
			<xsd:documentation>
    movementLegResult is a classification that allows to group different movement legs based on the result of the MovementLeg.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLegResult</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:movementLegResultCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegSequence">
		<xsd:annotation>
			<xsd:documentation>
    movementLegSequence is an integer that indicates the sequence in which the travel leg has been performed during a specific product movement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLegSequence</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementResult">
		<xsd:annotation>
			<xsd:documentation>
    movementResult is a classification that allows to group different movement legs based on the result of the Movement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementResult</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:movementResultCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementTransit">
		<xsd:annotation>
			<xsd:documentation>
    movementTransit is the period during which the product has been in movement from its start location until its end location, considering both the individual 
    travel legs and intermediate times that can have taken place between different travel legs.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementTransit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementType">
		<xsd:annotation>
			<xsd:documentation>
    movementType is a classification of the movement of the product. (eg, ferry, transport, etc)
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:movementTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nonAvailabilityCauseDescription">
		<xsd:annotation>
			<xsd:documentation>
    nonAvailabilityCauseDescription is a description that provides a human readable expression of a NonAvailabilityCause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:nonAvailabilityCauseDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nonAvailabilityCauseIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    nonAvailabilityCauseIdentifier is a string of characters that uniquely identifies a NonAvailabilityCause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:nonAvailabilityCauseIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:nonAvailabilityCauseIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nonAvailabilityCauseType">
		<xsd:annotation>
			<xsd:documentation>
    nonAvailabilityCauseType is a [classification] that allows to group similar NonAvailabilityCauses.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:nonAvailabilityCauseType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:nonAvailabilityCauseTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nonConformanceDescription">
		<xsd:annotation>
			<xsd:documentation>
    nonConformanceDescription is a description that gives more information on how the EffectiveOnProductConfigurationItem does not comply with its requirements.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:nonConformanceDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nonConformanceRestriction">
		<xsd:annotation>
			<xsd:documentation>
    nonConformanceRestriction is a description that gives more information on how the use of the related EffectiveOnProductConfigurationItem restricts the 
    specified capabilities of the AllowedProductConfigurationItem in which it is contained.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:nonConformanceRestriction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nonConformanceType">
		<xsd:annotation>
			<xsd:documentation>
    nonConformanceType is a classification that identifies in which way the EffectiveOnProductConfigurationItem does not comply with its requirements.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:nonConformanceType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:nonConformanceTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="obsolescenceParameterDescription">
		<xsd:annotation>
			<xsd:documentation>
    obsolescenceParameterDescription is a narrative statement describing the ObsolescenceParameter.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:obsolescenceParameterDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="obsolescenceParameterIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    obsolescenceParameterIdentifier is a string of text that uniquely identifies an ObsolescenceParameter and differentiates it from other 
    ObsolescenceParameters.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:obsolescenceParameterIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:obsolescenceParameterIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="obsolescenceParameterName">
		<xsd:annotation>
			<xsd:documentation>
    obsolescenceParameterName is a text that represents an identifier by which an ObsolescenceParamenter is commonly known.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:obsolescenceParameterName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="obsolescenceParameterType">
		<xsd:annotation>
			<xsd:documentation>
    obsolescenceParameterType is a classification that describes the type of parameter (eg,. obsolescence parameter, order, reliability, etc)
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:obsolescenceParameterType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:obsolescenceParameterTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="obsolescenceParameterValue">
		<xsd:annotation>
			<xsd:documentation>
    obsolescenceParameterValue is a property that represents the value of the ObsolescenceParameter that indicates that an item is obsolete.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:obsolescenceParameterValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="openingTimesDay">
		<xsd:annotation>
			<xsd:documentation>
    openingTimesDay is a [classification] that indicates at which day(s) of the week the opening times apply.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:openingTimesDay</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:openingTimesDayCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="openingTimesFrom">
		<xsd:annotation>
			<xsd:documentation>
    openingTimesFrom is the time of the day at which a certain address opens.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:openingTimesFrom</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="time" type="xsd:time" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="openingTimesTo">
		<xsd:annotation>
			<xsd:documentation>
    openingTimesTo is the time of the day at which a certain address closes to the public.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:openingTimesTo</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="time" type="xsd:time" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatingBaseCapacityIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    operatingBaseCapacityIdentifier is a string that uniquely identifies an OperatingBaseCapacity and allows to differentiate it from other 
    OperatingBaseCapacities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operatingBaseCapacityIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:operatingBaseCapacityIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatingBaseProductVariantCapacity">
		<xsd:annotation>
			<xsd:documentation>
    operatingBaseProductVariantCapacity is the number of ProductVariants that can operate simultaneously at a specific OperatingBase.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operatingBaseProductVariantCapacity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatingBaseType">
		<xsd:annotation>
			<xsd:documentation>
    operatingBaseType is a classification that identifies further specialization for a OperatingBase.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operatingBaseType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operatingBaseTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatingLocationTypeDescription">
		<xsd:annotation>
			<xsd:documentation>
    operatingLocationTypeDescription is a description that gives more information on the OperatingLocationType, including the environmental conditions to be 
    expected.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operatingLocationTypeDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatingLocationTypeIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    operatingLocationTypeIdentifier is an identifier that establishes a unique designator for an OperatingLocationType and to differentiate it from other 
    instances of OperatingLocationType. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operatingLocationTypeIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:operatingLocationTypeIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatingLocationTypeName">
		<xsd:annotation>
			<xsd:documentation>
    operatingLocationTypeName is a name by which the OperatingLocationType is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operatingLocationTypeName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalApprovalIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    operationalApprovalIdentifier is a string that allows to uniquely identify an OperationalApproval and differentiate it from other OperationalApprovals.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalApprovalIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:operationalApprovalIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalApprovalType">
		<xsd:annotation>
			<xsd:documentation>
    operationalApprovalType is a dated classification that describes the type of operational approval that is approved for use.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalApprovalType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalApprovalTypeCode" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventCategoryType">
		<xsd:annotation>
			<xsd:documentation>
    operationalEventCategoryType is a classification that indicates a characteristic of an OperationalEvent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventCategoryType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalEventCategoryTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventMaintenanceDown">
		<xsd:annotation>
			<xsd:documentation>
    operationalEventMaintenanceDown is a classification  indicating that the OperationalEvent caused a maintenance down time to the SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventMaintenanceDown</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalEventMaintenanceDownCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventMaintenanceNotificationDateTime">
		<xsd:annotation>
			<xsd:documentation>
    operationalEventMaintenanceNotificationDateTime is the date and time where the maintenance organization has been notified that maintenance was required due 
    to the OperationalEvent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventMaintenanceNotificationDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventMaintenanceReleasedDateTime">
		<xsd:annotation>
			<xsd:documentation>
    operationalEventMaintenanceReleasedDateTime is the date and time at which the maintenance organization released the serialized product from maintenance 
    after solving the issues caused by the operational event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventMaintenanceReleasedDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventMessageIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    operationalEventMessageIdentifier is a string of characters used to uniquely identify an OperationalEventMessage and to differentiate it from other 
    operationalEventMessages.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventMessageIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:operationalEventMessageIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventMessageSequence">
		<xsd:annotation>
			<xsd:documentation>
    operationalEventMessageSequence is an integer stating the sequence in which a particular OperationalEventMessage was made.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventMessageSequence</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventMessageText">
		<xsd:annotation>
			<xsd:documentation>
    operationalEventMessageText is a text that appears during or as a consequence of an OperationalEvent (eg, on an operator display or maintenance panel).
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventMessageText</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventMessageType">
		<xsd:annotation>
			<xsd:documentation>
    operationalEventMessageType is a classification of the operationalEventMessage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventMessageType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalEventMessageTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventOperationalMode">
		<xsd:annotation>
			<xsd:documentation>
    operationalEventOperationalMode is a classification indicating the specific operational mode during which the operationalEvent occurred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventOperationalMode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalEventOperationalModeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventReportedDate">
		<xsd:annotation>
			<xsd:documentation>
    operationalEventReportedDate is the date at which the operational event was reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventReportedDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventSymptom">
		<xsd:annotation>
			<xsd:documentation>
    operationalEventSymptom is a classification of the symptom that the product presents during the OperationalEvent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventSymptom</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalEventSymptomCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalModeClassification">
		<xsd:annotation>
			<xsd:documentation>
    operationalModeClassification is a classification that allows to assign an OperationalMode to a specific category or place the operationalModeIdentifier in 
    context.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalModeClassification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalModeClassificationCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalModeDescription">
		<xsd:annotation>
			<xsd:documentation>
    operationalModeDescription is a textual explanation of an OperationalMode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalModeDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalModeIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    operationalModeIdentifier is an unique identifier that allows to distinguish one OperationalMode from a different one.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalModeIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:operationalModeIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalModeName">
		<xsd:annotation>
			<xsd:documentation>
    operationalModeName is a text that identifies an OperationalMode in an understandable way.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalModeName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalModeStatusType">
		<xsd:annotation>
			<xsd:documentation>
    operationalModeStatusType is a classification of the operational mode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalModeStatusType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalModeStatusTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalModeStatusUsed">
		<xsd:annotation>
			<xsd:documentation>
    operationalModeStatusUsed is an indicator of whether the operationModeType was or not used, and how.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalModeStatusUsed</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriodActual">
		<xsd:annotation>
			<xsd:documentation>
    operationalPeriodActual is the period of time during which the OperationalPeriod took effectively place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalPeriodActual</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriodIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    operationalPeriodIdentifier is a string of characters used to uniquely identify an OperationalPeriod of an individual Product instance.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalPeriodIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:operationalPeriodIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriodName">
		<xsd:annotation>
			<xsd:documentation>
    operationalPeriodName is a word or phrase by which an Operational Period is commonly known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalPeriodName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriodPhase">
		<xsd:annotation>
			<xsd:documentation>
    operationalPeriodPhase is a classification that allows to classify an OperationalPeriod.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalPeriodPhase</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalPeriodPhaseCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriodRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    operationalPeriodRelationshipType is a classification that defines the association between two individual operational periods.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalPeriodRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalPeriodRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriodResult">
		<xsd:annotation>
			<xsd:documentation>
    operationalPeriodResult is a classification that defines the result of the OperationalPeriod.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalPeriodResult</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalPeriodResultCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriodScheduled">
		<xsd:annotation>
			<xsd:documentation>
    operationalPeriodScheduled is the period of time during which it was forseen that the OperationalPeriod would take place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalPeriodScheduled</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRequirementPeriod">
		<xsd:annotation>
			<xsd:documentation>
    operationalRequirementPeriod is a period of time during which an OperationalRequirement is in effect.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRequirementPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRoleDelta">
		<xsd:annotation>
			<xsd:documentation>
    operationalRoleDelta is a value that describes the delta regarding the baseline configuration of the OperationalRole for a specific ProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRoleDelta</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="nomVal" type="xsd:decimal"/>
			<xsd:element name="lowOff" type="xsd:decimal"/>
			<xsd:element name="uppOff" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRoleDescription">
		<xsd:annotation>
			<xsd:documentation>
    operationalRoleDescription is a narrative statement of what a specific OperationalRole is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRoleDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRoleidentifier">
		<xsd:annotation>
			<xsd:documentation>
    operationalRoleIdentifier is a string of characters that uniquely identifies an OperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRoleidentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:operationalRoleidentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRoleKitImpactDescription">
		<xsd:annotation>
			<xsd:documentation>
    operationalRoleKitImpactDescription is a description that gives more information on the OperationalRoleKitImpact.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRoleKitImpactDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRoleKitImpactIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    operationalRoleKitImpactIdentifier is an identifier that establishes a unique designator for a OperationalRoleKitImpact and to differentiate it from other 
    instances of OperationalRoleKitImpact.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRoleKitImpactIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:operationalRoleKitImpactIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRoleKitImpactType">
		<xsd:annotation>
			<xsd:documentation>
    operationalRoleKitImpactType is a classification that identifies the way that an installed ProductOperationalRoleKit will affect the characteristics and/or 
    performance of the ProductOperationalRoleKitItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRoleKitImpactType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalRoleKitImpactTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRoleTime">
		<xsd:annotation>
			<xsd:documentation>
    operationalRoleTime is a period of time associated to the OperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRoleTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:timeUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRoleType">
		<xsd:annotation>
			<xsd:documentation>
    operationalRoleType is a classification that allows to group different OperationalRoles.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRoleType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalRoleTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalTimeType">
		<xsd:annotation>
			<xsd:documentation>
    operationalTimeType is a [classificationType] that determines the type of operationalTime that is being measured.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalTimeType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:operationalTimeTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalTimeValue">
		<xsd:annotation>
			<xsd:documentation>
    operationalTimeValue is a time that defines the duration of a specific operationalTime.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalTimeValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:timeUnit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalBreakdownStructureRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    organizationalBreakdownStructureRevisionDate is a date that specifies when the OrganizationalBreakdownStructureRevision was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalBreakdownStructureRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalBreakdownStructureRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    organizationalBreakdownStructureRevisionIdentifier is an identifier that establishes a unique designator for a OrganizationalBreakdownStructureRevision and 
    to differentiate it from other instances of OrganizationalBreakdownStructureRevision . Organization
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalBreakdownStructureRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:organizationalBreakdownStructureRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalBreakdownStructureRevisionPeriod">
		<xsd:annotation>
			<xsd:documentation>
    organizationalBreakdownStructureRevisionPeriod is a date range that specifies the period of time during which an OrganizationalBreakdownStructureRevision 
    is or has been in effect.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalBreakdownStructureRevisionPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalBreakdownStructureRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    organizationalBreakdownStructureRevisionRationale is a description that gives more information on the justification for revising the 
    OrganizationalBreakdownStructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalBreakdownStructureRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalBreakdownStructureRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    organizationalBreakdownStructureRevisionStatus is a state that identifies the maturity of an OrganizationalBreakdownStructureRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalBreakdownStructureRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalBreakdownStructureType">
		<xsd:annotation>
			<xsd:documentation>
    organizationalBreakdownStructureType is a classification that identifies the perspective from which the OrganizationalBreakdownStructure is defined.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalBreakdownStructureType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:organizationalBreakdownStructureTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    organizationalUnitIdentifier is an identifier that establishes a unique designator for an OrganizationalUnit and to differentiate it from other instances 
    of OrganizationalUnit.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalUnitIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:organizationalUnitIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitMemberDescription">
		<xsd:annotation>
			<xsd:documentation>
    organizationalUnitMemberDescription a description that gives more information on the OrganizationalUnitMember. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalUnitMemberDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitMemberQuantity">
		<xsd:annotation>
			<xsd:documentation>
    organizationalUnitMemberQuantity is a property that identifies the number of the organizationalUnitMemberRole that is part of the OrganizationalUnit.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalUnitMemberQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:countUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitMemberRole">
		<xsd:annotation>
			<xsd:documentation>
    organizationalUnitMemberRole is a name that identifies the position or purpose for the OrganizationalUnitMember in the context of the OrganizationalUnit. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalUnitMemberRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitName">
		<xsd:annotation>
			<xsd:documentation>
    organizationalUnitName is a name by which the OrganizationalUnit is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalUnitName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitObjective">
		<xsd:annotation>
			<xsd:documentation>
    organizationalUnitObjective is a description that gives more information on the purpose and goal for the OrganizationalUnit.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalUnitObjective</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    organizationalUnitRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalUnitRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:organizationalUnitRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationDescription">
		<xsd:annotation>
			<xsd:documentation>
    organizationDescription is a description that gives more information on the Organization. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    organizationIdentifier is an identifier that establishes a unique designator for an Organization and allows it to be differentiated from other instances of 
    Organization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:organizationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationName">
		<xsd:annotation>
			<xsd:documentation>
    organizationName is a name by which the Organization is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationOperationsApprovalPeriod">
		<xsd:annotation>
			<xsd:documentation>
    organizationOperationsApprovalPeriod is a date range that specifies the period of time during which the approval of an OperatorOrganization to operate 
    during a specific product variant is in effect.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationOperationsApprovalPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationPeriod">
		<xsd:annotation>
			<xsd:documentation>
    organizationPeriod is a date range that defines the date interval during which the organization exists.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationType">
		<xsd:annotation>
			<xsd:documentation>
    organizationType is a classification that identifies further specialization for an Organization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:organizationTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="otherFacilityType">
		<xsd:annotation>
			<xsd:documentation>
    otherFacilityType is a classification that allows to differentiate between different classes of OtherFacilities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:otherFacilityType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:otherFacilityTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="packagedTask">
		<xsd:annotation>
			<xsd:documentation>
    packagedTask is a boolean that specifies if the Task is created in order to group a set of defined Tasks for a specific purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:packagedTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="parkingFacilityType">
		<xsd:annotation>
			<xsd:documentation>
    parkingFacilityType is a classification that allows to differentiate between different classes of ParkingFacilities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:parkingFacilityType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:parkingFacilityTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partActionCause">
		<xsd:annotation>
			<xsd:documentation>
    partActionCause is a classification describing the cause for a specific PartAction.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partActionCause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:partActionCauseCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partActionCauseDescription">
		<xsd:annotation>
			<xsd:documentation>
    partActionCauseDescription is a narrative text describing the underlying cause for a PartAction.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partActionCauseDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partActionDate">
		<xsd:annotation>
			<xsd:documentation>
    partActionDate is the date at which a specific PartAction was performed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partActionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partActionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    partActionIdentifier is a string that uniquely identifies a PartAction and differentiates it from other PartActions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partActionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:partActionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partActionTimeSinceNew">
		<xsd:annotation>
			<xsd:documentation>
    partActionTimeSinceNew is the elapsed time since the part was put into service at the moment of the PartAction.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partActionTimeSinceNew</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:timeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partActionTimeSinceOverhaul">
		<xsd:annotation>
			<xsd:documentation>
    partActionTimeSinceOverhaul is the elapsed time since the part was overhauled for the last time at the moment that the PartAction took place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partActionTimeSinceOverhaul</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:timeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partActionType">
		<xsd:annotation>
			<xsd:documentation>
    partActionType is a classification describing the PartAction that has been performed on a part.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partActionType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:partActionTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDefinitionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    partDefinitionIdentifier is an identifier that identifies the design standard to which the serialized part adheres.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partDefinitionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:partDefinitionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDefinitionPartsListRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    partDefinitionPartsListRelationshipType is a classification that identifies the meaning of the established relationship. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partDefinitionPartsListRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:partDefinitionPartsListRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDemilitarizationClass">
		<xsd:annotation>
			<xsd:documentation>
    partDemilitarizationClass is a classification defining special measures to be taken when a PartDefinition is being disposed of.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partDemilitarizationClass</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:partDemilitarizationClassCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDescription">
		<xsd:annotation>
			<xsd:documentation>
    partDescription is a textual narrative statement that explains what the HardwarePartAsDesigned is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partExportControl">
		<xsd:annotation>
			<xsd:documentation>
    partExportControl is a classification that indicates whether the part is subject to export control restrictions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partExportControl</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:partExportControlCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partFeatureDegradationMechanismAcceptanceCriteriaAssertValue">
		<xsd:annotation>
			<xsd:documentation>
    partFeatureDegradationMechanismAcceptanceCriteriaAssertValue is a numerical property that specifies values which is to be used to evaluate the condition of 
    the PartDefinitionFeature with respect to the associated PartDegradationMechanism.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partFeatureDegradationMechanismAcceptanceCriteriaAssertValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partFeatureDegradationMechanismAcceptanceCriteriaComparisonOperator">
		<xsd:annotation>
			<xsd:documentation>
    partFeatureDegradationMechanismAcceptanceCriteriaComparisonOperator is a classification that identifies a mathematical operation to be applied when testing 
    a value against a defined partFeatureDegradationMechanismAcceptanceCriteriaAssertValue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partFeatureDegradationMechanismAcceptanceCriteriaComparisonOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:comparisonOperatorCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partFeatureDegradationMechanismAcceptanceCriteriaDescription">
		<xsd:annotation>
			<xsd:documentation>
    partFeatureDegradationMechanismAcceptanceCriteriaDescription is a description that gives more information on the 
    PartFeatureDegradationMechanismAcceptanceCriteria. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partFeatureDegradationMechanismAcceptanceCriteriaDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partFeatureDegradationMechanismAcceptanceCriteriaIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    partFeatureDegradationMechanismAcceptanceCriteriaIdentifier is an identifier that establishes a unique designator for a 
    PartFeatureDegradationMechanismAcceptanceCriteria and to differentiate it from other instances of PartFeatureDegradationMechanismAccept
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partFeatureDegradationMechanismAcceptanceCriteriaIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:partFeatureDegradationMechanismAcceptanceCriteriaIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    partIdentifier is an identifier that establishes a unique designator for a PartDefinition and to differentiate it from other instances of PartDefinition. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:partIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partInPoolPeriod">
		<xsd:annotation>
			<xsd:documentation>
    partInPoolPeriod is a range of dates representing the period during which a HardwarePart belonged to a specific Pool of parts.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partInPoolPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partInPoolQuantityDuringPeriod">
		<xsd:annotation>
			<xsd:documentation>
    partInPoolQuantityDuringPeriod is a value representing the quantity of HardwareParts stocked in a Pool during the specified period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partInPoolQuantityDuringPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partInWarehousePeriod">
		<xsd:annotation>
			<xsd:documentation>
    partInWarehousePeriod is the period of time that a part is stored in a specific warehouse.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partInWarehousePeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partInWarehouseQuantityDuringPeriod">
		<xsd:annotation>
			<xsd:documentation>
    partInWarehouseQuantityDuringPeriod is a value representing the quantity of HardwareParts stocked in a warehouse during the specified period.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partInWarehouseQuantityDuringPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partMajorComponent">
		<xsd:annotation>
			<xsd:documentation>
    partMajorComponent is a classification that indicates that a part needs separate tracking because it can be considered a major SerializedProductVariant by 
    its own right.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partMajorComponent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partName">
		<xsd:annotation>
			<xsd:documentation>
    partName is a name by which the PartDefinition is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partOwnerIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    partOwnerIdentifier is a string of text that uniquely identifies a PartOwner [relationshp] and allows to differentiate it from other ones.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partOwnerIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:partOwnerIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partOwnerPeriod">
		<xsd:annotation>
			<xsd:documentation>
    partOwnerPeriod is a date range that defined the period of time during which a SerializedHardwarePart is owned by a specific Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partOwnerPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partsListEntryIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    partsListEntryIdentifier is an identifier that establishes a unique designator for a PartDefinitionPartsListEntry and to differentiate it from other 
    instances of PartDefinitionPartsListEntry. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partsListEntryIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:partsListEntryIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partsListEntryQuantity">
		<xsd:annotation>
			<xsd:documentation>
    partsListEntryQuantity is a property that specifies the amount of the PartDefinition used in its parent PartDefinitionPartsListRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partsListEntryQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:quantityUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partsListRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    partsListRevisionDate is a date that specifies when the PartDefinitionPartsList was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partsListRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partsListRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    partsListRevisionIdentifier is an identifier that establishes a unique designator for a PartDefinitionPartsListRevision and to differentiate it from other 
    instances of PartDefinitionPartsListRevision for the same partsListType. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partsListRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:partsListRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partsListRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    partsListRevisionRationale is a description that gives more information on the justification for revising the PartDefinitionPartsList.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partsListRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partsListRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    partsListRevisionStatus is a state that identifies the maturity of a PartDefinitionPartsListRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partsListRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partsListType">
		<xsd:annotation>
			<xsd:documentation>
    partsListType is a classification that identifies the context and intended use of the PartDefinitionPartsList.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partsListType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:partsListTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyAddressPeriod">
		<xsd:annotation>
			<xsd:documentation>
    partyAddressPeriod is a date range that specifies the period of time during which the address of a Party is valid.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partyAddressPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyAddressType">
		<xsd:annotation>
			<xsd:documentation>
    partyAddressType is a [classification] describing the type of relationship between a Party and an Address.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partyAddressType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:partyAddressTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyContactDataDetails">
		<xsd:annotation>
			<xsd:documentation>
    partyContactDataDetails is a description that provides further details on the contact data of a Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partyContactDataDetails</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyContactDataType">
		<xsd:annotation>
			<xsd:documentation>
    partyContactDataType is a [classification] that allows to qualify the PartyContactData.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partyContactDataType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:partyContactDataTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyRelationshipDescription">
		<xsd:annotation>
			<xsd:documentation>
    partyRelationshipDescription is a description that explains the association between two Parties.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partyRelationshipDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyRelationshipPeriod">
		<xsd:annotation>
			<xsd:documentation>
    partyRelationshipPeriod is a date range that specifies the period of time during which the association between two parties exists.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partyRelationshipPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    partyRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partyRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:partyRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="penaltyAmount">
		<xsd:annotation>
			<xsd:documentation>
    penaltyAmount is a number that represents the amount corresponding to a Penalty.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:penaltyAmount</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="penaltyDate">
		<xsd:annotation>
			<xsd:documentation>
    penaltyDate is a Date at which a Penalty was established.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:penaltyDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="penaltyDescription">
		<xsd:annotation>
			<xsd:documentation>
    penaltyDescription is a description that provides a human readable expression of a Penalty.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:penaltyDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="penaltyIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    penaltyIdentifier is a string of characters that uniquely identifies a Penalty.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:penaltyIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:penaltyIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="penaltySettledAt">
		<xsd:annotation>
			<xsd:documentation>
    penaltySettledAt is a Date at which a Penalty was settled.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:penaltySettledAt</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterCalculationMethod">
		<xsd:annotation>
			<xsd:documentation>
    performanceParameterCalculationMethod is a description that gives more information on the method by which the performanceParameterValue has been derived.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:performanceParameterCalculationMethod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    performanceParameterRevisionDate is a date that defines when a PerformanceParameterRevision was defined.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:performanceParameterRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    performanceParameterRevisionIdentifier is an identifier that establishes a unique designator for a PerformanceParameterRevision and to differentiate it 
    from other instances of PerformanceParameterRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:performanceParameterRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:performanceParameterRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    performanceParameterRevisionRationale is a description that gives more information on the justification for revising the defined PerformanceParameter and 
    its values.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:performanceParameterRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    performanceParameterRevisionStatus is a state that identifies the maturity of a PerformanceParameterRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:performanceParameterRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterType">
		<xsd:annotation>
			<xsd:documentation>
    performanceParameterType is a classification that identifies the type of PerformanceParameter being exchanged.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:performanceParameterType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:performanceParameterTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterValue">
		<xsd:annotation>
			<xsd:documentation>
    performanceParameterValue is a property that represents a value which is determined for the PerformanceParameter.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:performanceParameterValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterValueFraction">
		<xsd:annotation>
			<xsd:documentation>
    performanceParameterValueFraction is a property that represents the fraction of all occurrences related to a specified PerformanceParameter that must be 
    within the limit of the defined performanceParameterValue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:performanceParameterValueFraction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:relativeUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterValueLimitQualifier">
		<xsd:annotation>
			<xsd:documentation>
    performanceParameterValueLimitQualifier is a classification that specifies a directed limit to be applied when testing a value against the defined 
    PerformanceParameter.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:performanceParameterValueLimitQualifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:performanceParameterValueLimitQualifierCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personCompetenceAcquired">
		<xsd:annotation>
			<xsd:documentation>
    personCompetenceAcquired is a Date at which a PersonCompetence was acquired.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:personCompetenceAcquired</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personDates">
		<xsd:annotation>
			<xsd:documentation>
    personDates are the dates during which a Person exists.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:personDates</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personFamilyName">
		<xsd:annotation>
			<xsd:documentation>
    PersonFamilyName  is a text that indicates the family name of a Person.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:personFamilyName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    personIdentifier is an identifier that establishes a unique designator for a Person and to differentiate it from other instances of Person.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:personIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:personIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personMiddleName">
		<xsd:annotation>
			<xsd:documentation>
    personMiddleName is a text that indicates the middle name of a person.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:personMiddleName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personName">
		<xsd:annotation>
			<xsd:documentation>
    personName is a name by which a Person is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:personName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personOperationsApprovalPeriod">
		<xsd:annotation>
			<xsd:documentation>
    personOperationsApprovalPeriod is a date range that specifies the period of time  during which the approval of an OperatorPerson to operate during a 
    specific product variant is in effect.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:personOperationsApprovalPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personPrefixTitle">
		<xsd:annotation>
			<xsd:documentation>
    personPrefixTitle is a classification indicating a title that is used before a Person's name.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:personPrefixTitle</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:personPrefixTitleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personSuffixTitle">
		<xsd:annotation>
			<xsd:documentation>
    personSuffixTitle is a classification indicating a title that is added after a Person name.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:personSuffixTitle</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:personSuffixTitleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedItemUpgradeIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    plannedItemUpgradeIdentifier is a string of text that uniquely identifies a PlannedItemUpgrade and differentiates it from all othe rplanned 
    PlannedItemUpgrades.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:plannedItemUpgradeIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:plannedItemUpgradeIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedItemUpgradePriority">
		<xsd:annotation>
			<xsd:documentation>
    plannedItemUpgradePriority is a string of characters that uniquely identifies a PlannedProductUpgrade, differentiating it from all other 
    PlannedProductUpgrades.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:plannedItemUpgradePriority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:plannedItemUpgradePriorityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedItemUpgradeReason">
		<xsd:annotation>
			<xsd:documentation>
    plannedItemUpgradeReason is a [classification] that allows to group different PlannedItemUpgrades by the root causes for such upgrade.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:plannedItemUpgradeReason</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:plannedItemUpgradeReasonCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedUpgradePeriod">
		<xsd:annotation>
			<xsd:documentation>
    plannedUpgradePeriod is the range of  time during which the product update has been planned.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:plannedUpgradePeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedUpgradeTimescaleIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    plannedUpgradeTimescaleIdentifier is a string of text that uniquely identifies a PlannedProductUpgrade and differentiates it from the other 
    PlannedProductUpgrades.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:plannedUpgradeTimescaleIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:plannedUpgradeTimescaleIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedUpgradeTimescaleVersion">
		<xsd:annotation>
			<xsd:documentation>
    plannedUpgradeTimescaleVersion is a string of text that allows to differentiate a different version for a same PlannedProductUpgrade.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:plannedUpgradeTimescaleVersion</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:plannedUpgradeTimescaleVersionClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="policiesAndRegulationsEffectivity">
		<xsd:annotation>
			<xsd:documentation>
    policiesAndRegulationsEffectivity is the period of time during which a policy or regulation is in effect.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:policiesAndRegulationsEffectivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="policyOrRegulationPeriod">
		<xsd:annotation>
			<xsd:documentation>
    policyOrRegulationPeriod is a date range that specifies the period of time during which a policy or regulation is in effect.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:policyOrRegulationPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolDescription">
		<xsd:annotation>
			<xsd:documentation>
    poolDescription is textual narrative statement explaining the purpose of a Pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    poolIdentifier is string of characters that allows to uniquely identify a specific Pool among other Pools.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:poolIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolName">
		<xsd:annotation>
			<xsd:documentation>
    poolName is a word or phrase under which the Pool is commonly known and to which it can be referred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolOwnershipDuring">
		<xsd:annotation>
			<xsd:documentation>
    poolOwnershipDuring defines the period of time during which the ownership of a Pool by a specific Part is valid.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolOwnershipDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolOwnershipRatio">
		<xsd:annotation>
			<xsd:documentation>
    poolOwnershipRatio is the percentage of ownership of a Pool by a specific Party during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolOwnershipRatio</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:relativeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolStockedInWareHouseDuring">
		<xsd:annotation>
			<xsd:documentation>
    poolStockedInWareHouseDuring is a range of dates indicating the period during which a Pool of parts was stocked at a defined Warehouse.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolStockedInWareHouseDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolType">
		<xsd:annotation>
			<xsd:documentation>
    poolType is a classification that allows to determine the kind of Pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:poolTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolUsageDescription">
		<xsd:annotation>
			<xsd:documentation>
    poolUsageDescription is a textual narrative statement explaining the usage of a Pool by a specific Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolUsageDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolUsageDuring">
		<xsd:annotation>
			<xsd:documentation>
    poolUsageDuring is the period during which a Party can have a certain type of access to a spares Pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolUsageDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolUsageType">
		<xsd:annotation>
			<xsd:documentation>
    poolUsageType is a classification that defines the kind of usage that a Party can have on a specific spares Pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolUsageType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:poolUsageTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="postalCode">
		<xsd:annotation>
			<xsd:documentation>
    postalCode is a string of characters that represents a short code used by the postal service to identify a geographical area.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:postalCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productDefinitionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    productDefinitionIdentifier is an identifier that identifies the Product of which the serialized product variant is a realization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productDefinitionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:productDefinitionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productDescription">
		<xsd:annotation>
			<xsd:documentation>
    productDescription is a textual narrative statement that explains what the Product is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    productIdentifier is an identifier that establishes a unique designator for a Product and to differentiate it from other instances of Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:productIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productLife">
		<xsd:annotation>
			<xsd:documentation>
    productLife is a date range that indicates the expected or actual life of a Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productLife</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productName">
		<xsd:annotation>
			<xsd:documentation>
    productName is a name by which the Product is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfigurationDescription">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleConfigurationDescription is a description that gives more information on the product operational role configuration. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleConfigurationDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfigurationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleConfigurationIdentifier is an identifier that establishes a unique designator for a ProductOperationalRoleConfiguration and to 
    differentiate it from other instances of ProductOperationalRoleConfiguration. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleConfigurationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:productOperationalRoleConfigurationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfigurationName">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleConfigurationName is a name by which the product operational role configuration is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleConfigurationName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfigurationRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleConfigurationRevisionDate is a date that specifies when a ProductOperationalRoleConfiguration was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleConfigurationRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfigurationRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleConfigurationRevisionIdentifier is an identifier that establishes a unique designator for a 
    ProductOperationalRoleConfigurationRevision and to differentiate it from other instances of ProductOperationalRoleConfigurationRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleConfigurationRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:productOperationalRoleConfigurationRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfigurationRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleConfigurationRevisionRationale is a description that gives more information on the justification for revising the 
    ProductOperationalRoleConfiguration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleConfigurationRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfigurationRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleConfigurationRevisionStatus is a state that identifies the maturity of a ProductOperationalRoleConfigurationRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleConfigurationRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleDescription">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleDescription is a description that gives more information on the defined product operational role.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleIdentifier  is an identifier that establishes a unique designator for an ProductOperationalRole and to differentiate it from other 
    instances of ProductOperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:productOperationalRoleIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleKitDescription">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleKitDescription is a description that gives more information on the ProductOperationalRoleKit.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleKitDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleKitIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleKitIdentifier is an identifier that establishes a unique designator for a ProductOperationalRoleKit and to differentiate it from 
    other instances of ProductOperationalRoleKit.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleKitIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:productOperationalRoleKitIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleKitName">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleKitName is a name by which the ProductOperationalRoleKit is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleKitName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleName">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleName is a name by which the ProductOperationalRole is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleType">
		<xsd:annotation>
			<xsd:documentation>
    productOperationalRoleType is a classification that identifies further specialization for a ProductOperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:productOperationalRoleTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productParameterAtOperationalEventName">
		<xsd:annotation>
			<xsd:documentation>
    productParameterAtOperationalEventName is a word or phrase by which the productParameter that occurred at an OperationalEvent is known.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productParameterAtOperationalEventName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productParameterAtOperationalEventValue">
		<xsd:annotation>
			<xsd:documentation>
    productParameterAtOperationalEventValue is the value of the productParametersAtOperationalEvent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productParameterAtOperationalEventValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productParametersAtOperationalEventIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    productParametersAtOperationalEventIdentifier is a string of text that uniquely identifies a ProductParameterAtOperationalEvent and allows to differentiate 
    it from other ProductParameterAtOperationalEvent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productParametersAtOperationalEventIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:productParametersAtOperationalEventIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseDescription">
		<xsd:annotation>
			<xsd:documentation>
    productUsagePhaseDescription is a description that gives more information on the ProductUsagePhase. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productUsagePhaseDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseDuration">
		<xsd:annotation>
			<xsd:documentation>
    productUsagePhaseDuration is a property that specifies the average time that the ProductUsagePhaseItem will remain in the specified state. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productUsagePhaseDuration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:timeUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    productUsagePhaseIdentifier is a string that uniquely identifies a ProductUsagePhase and differentiates it from other ProductUsagePhases.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productUsagePhaseIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:productUsagePhaseIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseName">
		<xsd:annotation>
			<xsd:documentation>
    productUsagePhaseName is a name by which the ProductUsagePhase is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productUsagePhaseName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    productUsagePhaseRelationshipType is a classification that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productUsagePhaseRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:productUsagePhaseRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantDefinitionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    productVariantDefinitionIdentifier is an identifier that identifies the Product variant of which the serialized product variant is a realization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantDefinitionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:productVariantDefinitionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantDescription">
		<xsd:annotation>
			<xsd:documentation>
    productVariantDescription is a narrative text explaining a ProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantDimensions">
		<xsd:annotation>
			<xsd:documentation>
    productVariantDimensions are the ThreeDimensional characteristics of a ProductVariant,
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantDimensions</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantEntryIntoServiceDate">
		<xsd:annotation>
			<xsd:documentation>
    productVariantEntryIntoServiceDate is the date at which the first item or product of a specific ProductVariant entered service.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantEntryIntoServiceDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    productVariantIdentifier is an identifier that establishes a unique designator for a ProductVariant and to differentiate it from other instances of 
    ProductVariant. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:productVariantIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantLastBuyDate">
		<xsd:annotation>
			<xsd:documentation>
    productVariantLastBuyDate is the last date at which a ProductVariant can be purchased.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantLastBuyDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantMaintenancePeriod">
		<xsd:annotation>
			<xsd:documentation>
    productVariantMaintenancePeriod is a DateRange during which a ProductVariantMaintenance takes place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantMaintenancePeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantName">
		<xsd:annotation>
			<xsd:documentation>
    productVariantName is a name by which the ProductVariant is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantProductionDates">
		<xsd:annotation>
			<xsd:documentation>
    productVariantProductionDates is the period of time during which a ProductVariant is in production.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantProductionDates</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantSupportedByPoolDuring">
		<xsd:annotation>
			<xsd:documentation>
    productVariantSupportedByPoolDuring is a range of dates indicating the period of time during which a ProductVariant is supported by a defined parts Pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantSupportedByPoolDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantWeight">
		<xsd:annotation>
			<xsd:documentation>
    productVariantWeight is a number that represents the weight of a ProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantWeight</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:massUnit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="projectDescription">
		<xsd:annotation>
			<xsd:documentation>
    projectDescription is a description that gives more information on the Project. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:projectDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="projectIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    projectIdentifier is an identifier that establishes a unique designator for a Project and to differentiate it from other instances of Project.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:projectIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:projectIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="projectName">
		<xsd:annotation>
			<xsd:documentation>
    projectName is a name by which the Project is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:projectName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="projectPeriod">
		<xsd:annotation>
			<xsd:documentation>
    projectPeriod is a date range that defines the date interval during which the Project takes place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:projectPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="projectRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    projectRelationshipType is a [classification] that identifies the meaning of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:projectRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:projectRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="publicationModuleIssueInWorkNumber">
		<xsd:annotation>
			<xsd:documentation>
    publicationModuleIssueInWorkNumber is a string of characters used for monitoring and control of intermediate drafts of S1000DPublicationModuleIssue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:publicationModuleIssueInWorkNumber</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="publicationModuleIssueLanguage">
		<xsd:annotation>
			<xsd:documentation>
    publicationModuleIssueLanguage is a classification that identifies the language used to produce the content of the S1000DPublicationModuleIssue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:publicationModuleIssueLanguage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:languageCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="publicationModuleIssueLanguageCountry">
		<xsd:annotation>
			<xsd:documentation>
    publicationModuleIssueLanguageCountry is a classification that identifies the country where the language, identified by publicationModuleIssueLanguage, is 
    spoken
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:publicationModuleIssueLanguageCountry</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:countryCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="publicationModuleIssueNumber">
		<xsd:annotation>
			<xsd:documentation>
    publicationModuleIssueNumber is a string of characters used to identify the release number of the S1000DPublicationModuleIssue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:publicationModuleIssueNumber</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="publicationModuleIssuer">
		<xsd:annotation>
			<xsd:documentation>
    publicationModuleIssuer is a string of characters that represents the issuing authority attribute of the publication module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:publicationModuleIssuer</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="publicationModuleNumber">
		<xsd:annotation>
			<xsd:documentation>
    publicationModuleNumber is a string of characters that represents the number of the publication module attribute of the publication module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:publicationModuleNumber</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="publicationModuleVolume">
		<xsd:annotation>
			<xsd:documentation>
    publicationModuleVolume is a string of characters that represents the volume of the publication attribute of the publication module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:publicationModuleVolume</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="quantityOfContainedMaterial">
		<xsd:annotation>
			<xsd:documentation>
    quantityOfContainedMaterial is a property that identifies the amount of material included in an item..
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:quantityOfContainedMaterial</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reasonForShopSubmission">
		<xsd:annotation>
			<xsd:documentation>
    reasonForShopSubmission is a classification that provides the justification for the submission of an equipment to a workshop.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reasonForShopSubmission</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:reasonForShopSubmissionCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="recoveredItemStatus">
		<xsd:annotation>
			<xsd:documentation>
    recoveredItemStatus is a classification that allows to identify whether a recovered item is fit for service or requires further actions in order to make it 
    useable.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:recoveredItemStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:recoveredItemStatusCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="recoveredItemValue">
		<xsd:annotation>
			<xsd:documentation>
    recoveredItemValue is a property that documents the monetary value of a recovered item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:recoveredItemValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="referencedDigitalFileJustification">
		<xsd:annotation>
			<xsd:documentation>
    referencedDigitalFileJustification is a phrase that provides more information on the reason why the DigitalFile is referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:referencedDigitalFileJustification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="referencedDocumentPortion">
		<xsd:annotation>
			<xsd:documentation>
    referencedDocumentPortion is a description that provides a reference to the portion of a document which is of interest in a specific usage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:referencedDocumentPortion</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="referencedDocumentRole">
		<xsd:annotation>
			<xsd:documentation>
    referencedDocumentRole is a classification that identifies the function of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:referencedDocumentRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:referencedDocumentRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="referenceDesignator">
		<xsd:annotation>
			<xsd:documentation>
    referenceDesignator is an identifier that establishes a unique designator for a location within the overall Product, and to differentiate it from other 
    locations.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:referenceDesignator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:referenceDesignatorClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="referencedOrganizationRole">
		<xsd:annotation>
			<xsd:documentation>
    referencedOrganizationRole is a classification that identifies the function of the established relationship.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:referencedOrganizationRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:referencedOrganizationRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="releasedDataSetAssociatedWithType">
		<xsd:annotation>
			<xsd:documentation>
    releasedDataSetAssociatedWithType is a classification that allows to establish the type of relationship with which a DataSetAsReleased is associated with 
    another item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:releasedDataSetAssociatedWithType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:releasedDataSetAssociatedWithTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="remarkText">
		<xsd:annotation>
			<xsd:documentation>
    remarkText is a description that provides the text of the additional information.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:remarkText</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="remarkType">
		<xsd:annotation>
			<xsd:documentation>
    remarkType is a classification that defines the purpose of the remark.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:remarkType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:remarkTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="removedDateTime">
		<xsd:annotation>
			<xsd:documentation>
    removedDateTime is a date and time that specifies the exact point in time when the RealizedPart was uninstalled from the InstallationLocation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:removedDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableActivityDescription">
		<xsd:annotation>
			<xsd:documentation>
    reportableActivityDescription is a description that gives more information on the ReportableActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableActivityDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableActivityIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    reportableActivityIdentifier is an identifier that establishes a unique designator for a ReportableActivity and to differentiate it from other instances of 
    ReportableActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableActivityIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:reportableActivityIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableActivityPartyRole">
		<xsd:annotation>
			<xsd:documentation>
    reportableActivityPartyRole is a classification that defines the purpose of the associated Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableActivityPartyRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:reportableActivityPartyRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableActivityPeriod">
		<xsd:annotation>
			<xsd:documentation>
    reportableActivityPeriod is a date range that specifies the period of time on which the reporting is performed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableActivityPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableActivityReportingDate">
		<xsd:annotation>
			<xsd:documentation>
    reportableActivityReportingDate is a date that specifies when the reporting is performed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableActivityReportingDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableMetricDescription">
		<xsd:annotation>
			<xsd:documentation>
    reportableMetricDescription is a textual narrative explaining the reportableMetric details.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableMetricDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableMetricIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    reportableMetricIdentifier is an unique identifier that allows to uniquely identify a ReportableMetric from any other one.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableMetricIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:reportableMetricIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableMetricPeriod">
		<xsd:annotation>
			<xsd:documentation>
    reportableMetricPeriod is the period of time over which the metric was collected.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableMetricPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableMetricType">
		<xsd:annotation>
			<xsd:documentation>
    reportableMetricType is a classification that allows to group ReportabaleMetrics by its characteristics.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableMetricType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:reportableMetricTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableMetricValue">
		<xsd:annotation>
			<xsd:documentation>
    reportableMetricValue is a PropertyType providing the measurable value that a ReportableMetric has during a specific reporting period.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableMetricValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedIssueCategory">
		<xsd:annotation>
			<xsd:documentation>
    reportedIssueCategory is a classification that defines the source for ReportedIssue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedIssueCategory</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:reportedIssueCategoryCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedIssueDate">
		<xsd:annotation>
			<xsd:documentation>
    reportedIssueDate is the date at which a ReportedIssue was raised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedIssueDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedIssueDecisionDescription">
		<xsd:annotation>
			<xsd:documentation>
    reportedIssueDecisionDescription is a description that gives the rationale for either accepting or rejecting the ReportedIssue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedIssueDecisionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedIssueDescription">
		<xsd:annotation>
			<xsd:documentation>
    reportedIssueDescription is a description that gives more information on the ReportedIssue. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedIssueDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedIssueIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    reportedIssueIdentifier is an identifier that establishes a unique designator for a ReportedIssue and to differentiate it from other instances of 
    ReportedIssue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedIssueIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:reportedIssueIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedIssuePriority">
		<xsd:annotation>
			<xsd:documentation>
    reportedIssuePriority is a classification that defines the importance of the ReportedIssue and the need for an urgent response.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedIssuePriority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:reportedIssuePriorityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedIssueStatus">
		<xsd:annotation>
			<xsd:documentation>
    reportedIssueStatus is a classification that specifies where the ReportedIssue is with respect to the final decision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedIssueStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:reportedIssueStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedIssueTitle">
		<xsd:annotation>
			<xsd:documentation>
    reportedIssueTitle is a title by which the ReportedIssue is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedIssueTitle</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedMetricDescription">
		<xsd:annotation>
			<xsd:documentation>
    reportedMetricDescription is a description that gives more information on the ReportedMetric. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedMetricDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedMetricIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    reportedMetricIdentifier is an identifier that establishes a unique designator for a ReportedMetric and to differentiate it from other instances of 
    ReportedMetric .
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedMetricIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:reportedMetricIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedMetricPeriod">
		<xsd:annotation>
			<xsd:documentation>
    reportedMetricPeriod is a date range that specifies the period of time over which the metric was collected.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedMetricPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedMetricType">
		<xsd:annotation>
			<xsd:documentation>
    reportedMetricType is a classification that identifies further specialization for a ReportedMetric.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedMetricType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:reportedMetricTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedMetricValue">
		<xsd:annotation>
			<xsd:documentation>
    reportedMetricValue is a property that specifies the measurable value that a ReportedMetric has during the specified reporting period.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedMetricValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportPartyRole">
		<xsd:annotation>
			<xsd:documentation>
    reportPartyRole is a [classification] that allows to define the role of a Party in relationship with a Report.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportPartyRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:reportPartyRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportPeriod">
		<xsd:annotation>
			<xsd:documentation>
    reportPeriod is a date range that specifies the period of time on which a report is providing information.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requiredDisposalPolicyMandate">
		<xsd:annotation>
			<xsd:documentation>
    requiredDisposalPolicyMandate is a classification that indicates how the disposal policy has to be applied.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requiredDisposalPolicyMandate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:requiredDisposalPolicyMandateCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requiredFleetRoleAvailability">
		<xsd:annotation>
			<xsd:documentation>
    requiredFleetRoleAvailability defines the necessary availability in a specific OperationalRole to be able to comply with a FleetRequirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requiredFleetRoleAvailability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:relativeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requiredPartStockLevelValue">
		<xsd:annotation>
			<xsd:documentation>
    requiredPartStockLevelValue is a value indicating the required number of parts that have to be stocked for a specific spare pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requiredPartStockLevelValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:currencyUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementDate">
		<xsd:annotation>
			<xsd:documentation>
    requirementDate is the date at which a Requirement was defined.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requirementDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementDescription">
		<xsd:annotation>
			<xsd:documentation>
    requirementDescription is a narrative statement that explains what the requirement is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requirementDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    requirementIdentifier is a string of text that allows to uniquely identify a Requirement and differentiate it from other Requirements.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requirementIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:requirementIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementName">
		<xsd:annotation>
			<xsd:documentation>
    requirementName is a text that provides an identifier by which a Requirement is commonly known.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requirementName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementPartyRole">
		<xsd:annotation>
			<xsd:documentation>
    requirementPartyRole is a [classification] that defines the role of a Party with regard to a Requirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requirementPartyRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:requirementPartyRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementRaisedBy">
		<xsd:annotation>
			<xsd:documentation>
    requirementRaisedBy represents the organization that has raised a requirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requirementRaisedBy</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="orgRef" type="organizationRef" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    requirementRelationshipType is a [classification] that defines how two Requirements are related.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requirementRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:requirementRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementStatus">
		<xsd:annotation>
			<xsd:documentation>
    requirementStatus is a state that identifies the status of the Requirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requirementStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:requirementStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementType">
		<xsd:annotation>
			<xsd:documentation>
    requirementType is a classification that allows to group Requirements of a same kind.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requirementType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:requirementTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationDescription">
		<xsd:annotation>
			<xsd:documentation>
    resourceSpecificationDescription is a description that gives more information on the characteristics that a part realization must fulfill in order to 
    qualify as a possible resource.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceSpecificationDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    resourceSpecificationIdentifier is an identifier that establishes a unique designator for a ResourceSpecification and to differentiate it from other 
    instances of ResourceSpecification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceSpecificationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:resourceSpecificationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationName">
		<xsd:annotation>
			<xsd:documentation>
    resourceSpecificationName is a name by which the ResourceSpecification is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceSpecificationName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    resourceSpecificationRevisionDate is a date that specifies when the ResourceSpecification was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceSpecificationRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    resourceSpecificationRevisionIdentifier is an identifier that establishes a unique designator for a ResourceSpecificationRevision and to differentiate it 
    from other instances of ResourceSpecificationRevision .
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceSpecificationRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:resourceSpecificationRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    resourceSpecificationRevisionRationale is a description that gives more information on the justification for revising the ResourceSpecification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceSpecificationRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    resourceSpecificationRevisionStatus is a state that identifies the maturity of a ResourceSpecificationRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceSpecificationRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationType">
		<xsd:annotation>
			<xsd:documentation>
    resourceSpecificationType is a classification that identifies further specialization for a ResourceSpecification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceSpecificationType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:resourceSpecificationTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceUsagePartyRole">
		<xsd:annotation>
			<xsd:documentation>
    resourceUsagePartyRole is the role that the party is performing for a specific ResourceUsageRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceUsagePartyRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:resourceUsagePartyRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceUsageRequestDate">
		<xsd:annotation>
			<xsd:documentation>
    resourceUsageRequestDate is the date at which a ResourceUsageRequest was perfromed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceUsageRequestDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceUsageRequestDescription">
		<xsd:annotation>
			<xsd:documentation>
    resourceUsageRequestDescription is a textual narrative explaining the ResourceUsageRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceUsageRequestDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceUsageRequestIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    resourceUsageRequestIdentifier is a text that uniquely identifies a ResourceUsageRequest and differentiates it from other ResourceUsageRequests.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceUsageRequestIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:resourceUsageRequestIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceUsageRequestName">
		<xsd:annotation>
			<xsd:documentation>
    resourceUsageRequestName is a string of text that summarizes the ResourceUsageRequest and can be used to easily reference it in common speech.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceUsageRequestName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceUsageRequestPeriod">
		<xsd:annotation>
			<xsd:documentation>
    resourceUsageRequestPeriod is the period of time during which a Resource is requested.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceUsageRequestPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceUsageRequestStatus">
		<xsd:annotation>
			<xsd:documentation>
    resourceUsageRequestStatus is a state indicating what the current status of a ResourceUsageRequest is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceUsageRequestStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:resourceUsageRequestStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="restrictionDescription">
		<xsd:annotation>
			<xsd:documentation>
    restrictionDescription is a description that gives more information on the defined Restriction.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:restrictionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="restrictionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    restrictionIdentifier is an identifier that establishes a unique designator for a Restriction and to differentiate it from other instances of Restriction.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:restrictionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:restrictionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="restrictionIssuingOrganization">
		<xsd:annotation>
			<xsd:documentation>
    restrictionIssuingOrganization identifies the Organization that is the authoritative source for the identified Restriction.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:restrictionIssuingOrganization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="orgRef" type="organizationRef" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="restrictionName">
		<xsd:annotation>
			<xsd:documentation>
    restrictionName is a name by which the Restriction is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:restrictionName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="restrictionPeriod">
		<xsd:annotation>
			<xsd:documentation>
    restrictionPeriod is a date range that specifies the period of time during which a Restriction is in effect.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:restrictionPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="restrictionQualifier">
		<xsd:annotation>
			<xsd:documentation>
    restrictionQualifier is a classification that allows to define to which extent the Restriction affects the associated item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:restrictionQualifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:restrictionQualifierCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="restrictionType">
		<xsd:annotation>
			<xsd:documentation>
    restrictionType is a classification that identifies further specialization of Restriction.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:restrictionType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:restrictionTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="restrictionValue">
		<xsd:annotation>
			<xsd:documentation>
    restrictionValue is a property that specifies a quantifiable measure for the Restriction.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:restrictionValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="restrictionValueLimitQualifier">
		<xsd:annotation>
			<xsd:documentation>
    restrictionValueLimitQualifier is a classification that specifies a directed limit to be applied when testing a value against the defined Restriction.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:restrictionValueLimitQualifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:restrictionValueLimitQualifierCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="roleCapabilityLevel">
		<xsd:annotation>
			<xsd:documentation>
    roleCapabilityLevel is a [classification] that allows to define the level of a RoleCapability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:roleCapabilityLevel</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:roleCapabilityLevelCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyDocumentCriticality">
		<xsd:annotation>
			<xsd:documentation>
    safetyDocumentCriticality is a classification on the criticality of a safety issue addressed in a SafetyDocument.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:safetyDocumentCriticality</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:safetyDocumentCriticalityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyIssueAssessmentBy">
		<xsd:annotation>
			<xsd:documentation>
    safetyIssueAssessmentBy is the Orgamization that has to assess the safety issue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:safetyIssueAssessmentBy</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="orgRef" type="organizationRef" nillable="true"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyIssueFirstIdentificationDateTime">
		<xsd:annotation>
			<xsd:documentation>
    safetyIssueFirstIdentificationDateTime is the date and time at which the SafetyIssue was first identified.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:safetyIssueFirstIdentificationDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyIssueReportingDateTime">
		<xsd:annotation>
			<xsd:documentation>
    safetyIssueReportingDateTime is the date and time at which the SafetyIssue was reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:safetyIssueReportingDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyWarningAplicabilityDates">
		<xsd:annotation>
			<xsd:documentation>
    safetyWarningAplicabilityDates is the period of time during which a SafetyWarning is applicable.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:safetyWarningAplicabilityDates</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyWarningPriority">
		<xsd:annotation>
			<xsd:documentation>
    safetyWarningPriority is a [classification] that allows to group SafetyWarnings by their priority.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:safetyWarningPriority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:safetyWarningPriorityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="samplingMethodDescription">
		<xsd:annotation>
			<xsd:documentation>
    samplingMethodDescription is a description that gives more information on the way in which the sample must be selected.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:samplingMethodDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="samplingValue">
		<xsd:annotation>
			<xsd:documentation>
    samplingValue is a property that specifies the number or fraction of the total population to be selected. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:samplingValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:quantityUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="securityClassificationAuthority">
		<xsd:annotation>
			<xsd:documentation>
    securityClassificationAuthority identifies the Organization that is the authoritative source for the defined SecurityClassification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:securityClassificationAuthority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="orgRef" type="organizationRef" nillable="true"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="securityClassificationDate">
		<xsd:annotation>
			<xsd:documentation>
    securityClassificationDate is a date when the security classification is declared.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:securityClassificationDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="securityClassValue">
		<xsd:annotation>
			<xsd:documentation>
    securityClassValue is a name that defines the level of confidentiality.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:securityClassValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sensorDetectionRange">
		<xsd:annotation>
			<xsd:documentation>
    sensorDetectionRange is the range of values measured by the SensorType.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:sensorDetectionRange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="lowVal" type="xsd:decimal"/>
			<xsd:element name="uppVal" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sensorIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    sensorIdentifier is a string of text that uniquely identifies a Sensor and differentiates it from any other Sensor.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:sensorIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:sensorIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sensorName">
		<xsd:annotation>
			<xsd:documentation>
    sensorName is a string of text that is used to commonly refer to a sensor of a specific type.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:sensorName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sensorSamplingMode">
		<xsd:annotation>
			<xsd:documentation>
    sensorSamplingMode is a classification of the type of sensor sampling if it can provide multiple samples or error codes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:sensorSamplingMode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:sensorSamplingModeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sensorSamplingRate">
		<xsd:annotation>
			<xsd:documentation>
    sensorSamplingRate is the frequency by which a SensorType measures values.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:sensorSamplingRate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="lowVal" type="xsd:decimal"/>
			<xsd:element name="uppVal" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sensorSensitivity">
		<xsd:annotation>
			<xsd:documentation>
    sensorSensitivity is the range of values that a SensorType can measure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:sensorSensitivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="lowVal" type="xsd:decimal"/>
			<xsd:element name="uppVal" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePartAuthorizedLife">
		<xsd:annotation>
			<xsd:documentation>
    serializedHardwarePartAuthorizedLife  is the AuthorizedLife for a SerializedHardwarePart
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedHardwarePartAuthorizedLife</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="aul" nillable="true" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="recDate" nillable="true" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="date" type="xsd:date" nillable="true"/>
									<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
						<xsd:choice>
							<xsd:sequence>
								<xsd:element name="unit" type="value:timeCycleUnit"/>
								<xsd:choice>
									<xsd:sequence>
										<xsd:element name="value" type="xsd:decimal" nillable="true"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="nomVal" type="xsd:decimal"/>
										<xsd:element name="lowOff" type="xsd:decimal"/>
										<xsd:element name="uppOff" type="xsd:decimal"/>
									</xsd:sequence>
									<xsd:sequence>
										<xsd:element name="lowVal" type="xsd:decimal"/>
										<xsd:element name="uppVal" type="xsd:decimal"/>
									</xsd:sequence>
								</xsd:choice>
							</xsd:sequence>
							<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePartBatchIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    serializedHardwarePartBatchIdentifier is an identifier that identifies the batch of serialized hardware parts from which the SerializedHardwarePart 
    originates.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedHardwarePartBatchIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:serializedHardwarePartBatchIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePartDescription">
		<xsd:annotation>
			<xsd:documentation>
    serializedHardwarePartDescription is a textual narrative statement that explains what the SerializedHardwarePart is and/or why it is different from other 
    serializedHardwareParts.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedHardwarePartDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePartDimensions">
		<xsd:annotation>
			<xsd:documentation>
    serializedHardwarePartDimensions are the ThreeDimensional characteristics of a SerializedHardwarePart.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedHardwarePartDimensions</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePartIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    serializedHardwarePartIdentifier is an identifier that together with the partDefinitionIdentifier establishes a unique designator for a 
    SerializedHardwarePart and to differentiate it from other instances of SerializedHardwarePart.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedHardwarePartIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:serializedHardwarePartIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePartInServicePeriod">
		<xsd:annotation>
			<xsd:documentation>
    serializedHardwarePartInServicePeriod is a date range during which the serialized hardware part was in service.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedHardwarePartInServicePeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePartManufacturingDate">
		<xsd:annotation>
			<xsd:documentation>
    serializedHardwarePartManufacturingDate is the date when the item was manufactured.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedHardwarePartManufacturingDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePartModificationDate">
		<xsd:annotation>
			<xsd:documentation>
    serializedHardwarePartModificationDate is a date that identifies when a SerializedHardwarePart changed its design standard.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedHardwarePartModificationDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePartWeight">
		<xsd:annotation>
			<xsd:documentation>
    serializedHardwarePartWeight is is a property that specifies the mass for a SerializedHardwarePart.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedHardwarePartWeight</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:massUnit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedItemOwnerDuring">
		<xsd:annotation>
			<xsd:documentation>
    serializedItemOwnerDuring is a date range that indicates during which time a SerializedItemOwner held ownership of a  serialized item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedItemOwnerDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedItemOwnerRatio">
		<xsd:annotation>
			<xsd:documentation>
    serializedItemOwnerRatio is the percentage of ownership of the serialized item by the owner during the period of time defined for that ownership period.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedItemOwnerRatio</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:relativeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedItemWarrantyPeriod">
		<xsd:annotation>
			<xsd:documentation>
    serializedItemWarrantyPeriod is the period of time during which the warranty for a SerializedItem is in effect.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedItemWarrantyPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedItemWarrantyType">
		<xsd:annotation>
			<xsd:documentation>
    serializedItemWarrantyType is a classification that allows to categorize a SerielizedItem warranty.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedItemWarrantyType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:serializedItemWarrantyTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedPartEffectivityPeriod">
		<xsd:annotation>
			<xsd:documentation>
    serializedPartEffectivityPeriod is the period of time during which a serializedHardwarePart has complied with the specification that defines it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedPartEffectivityPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedPartIdentifier">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:serializedPartIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:serializedPartIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedPartsListPositionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    serializedPartsListPositionIdentifier is an identifier that establishes a unique designator for a SerializedPartsListPosition and to differentiate it from 
    other instances of SerializedPartsListPosition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedPartsListPositionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:serializedPartsListPositionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedPartsListPositionName">
		<xsd:annotation>
			<xsd:documentation>
    serializedPartsListPositionName is a name by which the SerializedPartsListPosition is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedPartsListPositionName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantAssignmentDate">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantAssignmentDate is the date at which a specific serializedProductVariant was assigned to perform a specific OperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantAssignmentDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantAssignmentIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantAssignmentIdentifier is an unique identifier that unambiguously allows to identify different OperationalRole assignments to 
    individual serializedProductVariants as specific moments in time ("tasking").
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantAssignmentIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:serializedProductVariantAssignmentIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantAssignmentStatus">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantAssignmentStatus is a classification that allows to determine the status of an assignment of a serializedProductVariant to carry 
    out a specific OperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantAssignmentStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:serializedProductVariantAssignmentStatusCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantAssignmentType">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantAssignmentType is a classification that  allows to define the type of assignment of a specific serializedProductVariant to an 
    OperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantAssignmentType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:serializedProductVariantAssignmentTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantDescription">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantDescription is a description that gives more information on the SerializedProductVariant and/or why it is different from other 
    instances of SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantDimensions">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantDimensions are the ThreeDimensional characteristics of a SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantDimensions</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantEndOfServiceDate">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantEndOfServiceDate is the date at which the SerializedProductVariant was retired from service.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantEndOfServiceDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantEntryIntoServiceDate">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantEntryIntoServiceDate is the date at which the SerializedProductVariant entered into service.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantEntryIntoServiceDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantIdentifier is an identifier that establishes a unique designator for a SerializedProductVariant and to differentiate it from other 
    instances of SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:serializedProductVariantIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantInFleetDuring">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantInFleetDuring is a range of dates that indicate the period of time during which a SerializedProductVariant belongs to a specific 
    fleet.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantInFleetDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantManufacturer">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantManufacturer identifies the organization which has manufactured a SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantManufacturer</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="orgRef" type="organizationRef" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantManufacturingDate">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantManufacturingDate specifies the date at which the manufacturing of the SerializedProductVariant was finished.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantManufacturingDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantMass">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantMass is a property that specifies the amount of matter for an unladen SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantMass</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:massUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantOperatingBasePeriod">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantOperatingBasePeriod is a range of dates during which a SerializedProductVariant was operating at a specific OperatingBase.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantOperatingBasePeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantOperatorPeriod">
		<xsd:annotation>
			<xsd:documentation>
    serializedProductVariantOperatorPeriod is a date range that specifies the period of time during which the SerializedProductVariant was operated by a 
    specific Operator.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantOperatorPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceBulletinCost">
		<xsd:annotation>
			<xsd:documentation>
    serviceBulletinCost is the monetary cost of a ServiceBulletin.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceBulletinCost</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:currencyUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceBulletinEmbodimentLimit">
		<xsd:annotation>
			<xsd:documentation>
    serviceBulletinEmbodimentLimit is a Date by which a ServiceBulletin must be mandatorily embodied.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceBulletinEmbodimentLimit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceBulletinPriority">
		<xsd:annotation>
			<xsd:documentation>
    serviceBulletinPriority is a classification that determines the urgency with which a ServiceBulletin should be embodied.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceBulletinPriority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:serviceBulletinPriorityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceBulletinType">
		<xsd:annotation>
			<xsd:documentation>
    serviceBulletinType is classification that allows to group different types of ServiceBulletins.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceBulletinType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:serviceBulletinTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceContractPeriod">
		<xsd:annotation>
			<xsd:documentation>
    serviceContractPeriod is the period of time during which a Service is associated to a Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceContractPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceDescription">
		<xsd:annotation>
			<xsd:documentation>
    serviceDescription is a description that gives more information on the Service.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    serviceIdentifier is an identifier that establishes a unique designator for a Service and to differentiate it from other instances of Service.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:serviceIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceLevelAgreementClauseDescription">
		<xsd:annotation>
			<xsd:documentation>
    serviceLevelAgreementClauseDescription is a description that gives more information on the meaning of the ServiceLevelAgreementClause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceLevelAgreementClauseDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceName">
		<xsd:annotation>
			<xsd:documentation>
    serviceName is a name by which the Service is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestCancellationDetails">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestCancellationDetails is a description that provides a human readable expression of ServiceRequestCancellation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestCancellationDetails</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestCancellationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestCancellationIdentifier is a string of characters that uniquely identifies a ServiceRequestCancellation
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestCancellationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:serviceRequestCancellationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestCancellationReason">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestCancellationReason is a [classification] that defines the reason for a ServiceRequestCancellation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestCancellationReason</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:serviceRequestCancellationReasonCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestDateTime">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestDateTime is teh date and time at which a ServiceRequest has been made.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestDescription">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestDescription is a narrative statement explaining the ServiceRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestIdentifier is a string of text that uniquely identifies a ServiceRequest and differentiates it from other ServiceRequests.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:serviceRequestIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestItemQuantity">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestItemQuantity is a the number of ServiceItems that are requested as part of a ServiceRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestItemQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestLocationDuring">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestLocationDuring is the period during which the service is requested at a specific location.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestLocationDuring</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestLocationNotes">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestLocationNotes is a textual narrative providing clarifications about when the location where the service has t be provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestLocationNotes</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestName">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestName is a string of characters by which a ServiceRequest is commonly known.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestPartyRole">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestPartyRole is a classification that allows to determine the role of a Party regarding a ServiceRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestPartyRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:serviceRequestPartyRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestPriority">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestPriority is a classification that allows to determine how urgent a ServiceRequest is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestPriority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:serviceRequestPriorityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestRelationshipType is a classification that defines the type of relationship between two ServiceRequests.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestRelationshipType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:serviceRequestRelationshipTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestType">
		<xsd:annotation>
			<xsd:documentation>
    serviceRequestType is a classification that allows to group different types of ServiceRequests.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:serviceRequestTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="shopFindingsDescription">
		<xsd:annotation>
			<xsd:documentation>
    shopFindingsDescription is a narrative text explaining the ShopFindings.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:shopFindingsDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="shopFindingsFaultCode">
		<xsd:annotation>
			<xsd:documentation>
    shopFindingsFaultCode is a classification that represents a fault code that the equipment under test has provided during the problem investigation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:shopFindingsFaultCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:shopFindingsFaultCodeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="shopFindingsFaultConfirmed">
		<xsd:annotation>
			<xsd:documentation>
    shopFindingsFaultConfirmed is a classification of the fault that has been confirmed as part of the shop findings.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:shopFindingsFaultConfirmed</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:shopFindingsFaultConfirmedCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="shopFindingsIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    shopFindingsIdentifier is a string of characters that uniquely identifies a ShopFinding and differentiates it from other ShopFindings.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:shopFindingsIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:shopFindingsIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="shopReceivedDate">
		<xsd:annotation>
			<xsd:documentation>
    shopReceivedDate is the Date at which an equipment was received at a workshop for diagnostics.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:shopReceivedDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="skillCode">
		<xsd:annotation>
			<xsd:documentation>
    skillCode is an identifier that establishes a unique designator for a Skill and to differentiate it from other instances of Skill.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:skillCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:skillCodeClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="skillLevelDescription">
		<xsd:annotation>
			<xsd:documentation>
    skillLevelDescription is a description that gives more information on a proficiency. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:skillLevelDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="skillLevelName">
		<xsd:annotation>
			<xsd:documentation>
    skillLevelName is a name that uniquely establishes a proficiency.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:skillLevelName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareElementModificationFrequency">
		<xsd:annotation>
			<xsd:documentation>
    softwareElementModificationFrequency is a property that defines the expected frequency with which the SoftwarePartDefinition which realizes this 
    SoftwareElementRevision will be modified.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareElementModificationFrequency</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:timeCycleRateUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareElementSize">
		<xsd:annotation>
			<xsd:documentation>
    softwareElementSize is a property that defines the size of the SoftwarePartAsDesigned which realizes this SoftwareElementRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareElementSize</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:binaryUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareElementType">
		<xsd:annotation>
			<xsd:documentation>
    softwareElementType is a classification that identifies further specialization for a SoftwareElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareElementType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:softwareElementTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorDateTime">
		<xsd:annotation>
			<xsd:documentation>
    softwareErrorDateTime is the date and time at which a SoftwareError occurred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareErrorDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorDescription">
		<xsd:annotation>
			<xsd:documentation>
    softwareErrorDescription is a description that provides a human readable expression of a SoftwareError.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareErrorDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorFixPriority">
		<xsd:annotation>
			<xsd:documentation>
    softwareErrorFixPriority is a classification that allows to determnie the urgency to fix a SoftwareError
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareErrorFixPriority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:softwareErrorFixPriorityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    softwareErrorIdentifier is a string of characters that uniquely identifies a SoftwareError.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareErrorIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:softwareErrorIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorName">
		<xsd:annotation>
			<xsd:documentation>
    softwareErrorName is a name by which the SoftwareError is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareErrorName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorReproducibility">
		<xsd:annotation>
			<xsd:documentation>
    softwareErrorReproducibility is a [classification] that allows to qualify the reproducibility of a SoftwareError.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareErrorReproducibility</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:softwareErrorReproducibilityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorSeverity">
		<xsd:annotation>
			<xsd:documentation>
    softwareErrorSeverity is a [classification] about how severe a SoftwareError is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareErrorSeverity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:softwareErrorSeverityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorStepsToReproduce">
		<xsd:annotation>
			<xsd:documentation>
    softwareErrorStepsToReproduce is a description that provides a human readable expression of the steps required to reproduce a SoftwareError.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareErrorStepsToReproduce</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwarePartAsReleasedChecksum">
		<xsd:annotation>
			<xsd:documentation>
    softwarePartAsReleasedChecksum is a string of text used verify that the code of a SoftwarePartAsReleased has not been corrupted or tampered with.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwarePartAsReleasedChecksum</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="txt" type="nonEmptyString"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwarePartAsReleasedDateTime">
		<xsd:annotation>
			<xsd:documentation>
    softwarePartAsReleasedDateTime is the date and time at which a software part was released for service.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwarePartAsReleasedDateTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwarePartAsReleasedDescription">
		<xsd:annotation>
			<xsd:documentation>
    softwarePartAsReleasedDescription is a textual narrative statement that explains what the softwarePartAsReleased is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwarePartAsReleasedDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwarePartAsReleasedIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    softwarePartAsReleasedIdentifier is an identifier that establishes a unique designator for a software build and to differentiate it from other instances of 
    software build.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwarePartAsReleasedIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:softwarePartAsReleasedIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwarePartAsReleasedSize">
		<xsd:annotation>
			<xsd:documentation>
    softwarePartAsReleasedSize is a value representing the actual size of the delivered code of a software part.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwarePartAsReleasedSize</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareReleaseIdentifier">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:softwareReleaseIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:softwareReleaseIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sourceDocumentPortion">
		<xsd:annotation>
			<xsd:documentation>
    sourceDocumentPortion is a description that gives more information on relevant portions of the related document.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:sourceDocumentPortion</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="specialEventDefinitionCauseCategory">
		<xsd:annotation>
			<xsd:documentation>
    specialEventDefinitionCauseCategory is a classification that identifies a generalization that organize special events into an overarching special event 
    taxonomy.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:specialEventDefinitionCauseCategory</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:specialEventDefinitionCauseCategoryCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="specialEventDefinitionDecription">
		<xsd:annotation>
			<xsd:documentation>
    specialEventDefinitionDecription is a description that gives more information on the SpecialEventDefinition. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:specialEventDefinitionDecription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="specialEventDefinitionName">
		<xsd:annotation>
			<xsd:documentation>
    specialEventDefinitionName is a name by which the SpecialEventDefinition is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:specialEventDefinitionName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="specialEventDefinitionOccurrenceValue">
		<xsd:annotation>
			<xsd:documentation>
    specialEventDefinitionOccurrenceValue is a property that quantifies how often a defined special event is likely to occur.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:specialEventDefinitionOccurrenceValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:relativeUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="specialSafetyInstructionApplicabilityDates">
		<xsd:annotation>
			<xsd:documentation>
    specialSafetyInstructionApplicabilityDates is the period during which the SpecialSafetyInstruction must be applied.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:specialSafetyInstructionApplicabilityDates</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="specialSafetyInstructionPriority">
		<xsd:annotation>
			<xsd:documentation>
    specialSafetyInstructionPriority is a classification that defines the urgency of a SpecialSafetyInstruction.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:specialSafetyInstructionPriority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:specialSafetyInstructionPriorityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="strainGaugeFactor">
		<xsd:annotation>
			<xsd:documentation>
    strainGaugeFactor is the gauge factor (also called strain factor) of a StrainGauge.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:strainGaugeFactor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="streetName">
		<xsd:annotation>
			<xsd:documentation>
    streetName is the name by which a road is officially known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:streetName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="streetNumber">
		<xsd:annotation>
			<xsd:documentation>
    streetNumber is a string of characters that represents the position along a street
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:streetNumber</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionCargoAircraftLimitedQuantity">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionCargoAircraftLimitedQuantity is a property that identifies the maximum quantity limit for hazardous material transported in one package 
    by cargo aircraft.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionCargoAircraftLimitedQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:quantityUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionDescription">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionDescription is a textual narrative statement that explains what the Substance is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionExceptedQuantities">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionExceptedQuantities is a classification that can be referenced to determine the maximum quantity per inner and outer packaging.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionExceptedQuantities</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:substanceDefinitionExceptedQuantitiesCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionExceptedQuantityClass">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionExceptedQuantityClass is a classification that specifies the maximum quantity per inner and outer packaging for transporting dangerous 
    goods as excepted quantities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionExceptedQuantityClass</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:substanceDefinitionExceptedQuantityClassCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionHazardousClass">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionHazardousClass is a classification that identifies to what extent a substance is capable of posing a significant risk to health, safety 
    or property during transportation, handling or storage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionHazardousClass</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:hardwarePartHazardousClassCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionIdentifier is an identifier that establishes a unique designator for a SubstanceDefinition and to differentiate it from other instances 
    of SubstanceDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:substanceDefinitionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionLimitedQuantity">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionLimitedQuantity identifies the maximum quantity per inner packaging for dangerous goods transported in limited quantities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionLimitedQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionName">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionName is a name by which the SubstanceDefinition is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionPackingGroup">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionPackingGroup is a classification about which kind of packing is allowed for this substance.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionPackingGroup</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:substanceDefinitionPackingGroupCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionPassengerAirOrRailLimitedQuantity">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionPassengerAirOrRailLimitedQuantity is a property that identifies the maximum quantity limit for hazardous material transported in one 
    package by passenger aircraft or by rail car.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionPassengerAirOrRailLimitedQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:quantityUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionRevisionDate is a date that specifies when the SubstanceDefinition was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionRevisionIdentifier is an identifier that establishes a unique designator for a SubstanceDefinitionRevision and to differentiate it from 
    other instances of SubstanceDefinitionRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:substanceDefinitionRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionRevisionRationale is a description that gives more information on the justification for revising the defined SubstanceDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionRevisionStatus is a state that identifies the maturity of a SubstanceDefinitionRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionRiskDescription">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionRiskDescription is a description that specifies risks associated with the substance.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionRiskDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionRiskFactor">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionRiskFactor is a classification which identifies possible risks associated with substance usage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionRiskFactor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:substanceDefinitionRiskFactorCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionSpecialProvisions">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionSpecialProvisions is a classification that indicates special actions to be taken in relationship with this item for handling, storage or 
    disposal.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionSpecialProvisions</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:substanceDefinitionSpecialProvisionsCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionSpecialProvisionsClass">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionSpecialProvisionsClass is a classification that identifies special actions to be taken for handling, storage and/or disposal.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionSpecialProvisionsClass</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:substanceDefinitionSpecialProvisionsClassCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionState">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionState is a classification indicating the state or phase in which is substance is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionState</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:substanceDefinitionStateCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionUsageCategory">
		<xsd:annotation>
			<xsd:documentation>
    substanceDefinitionUsageCategory is a classification which identifies possible limitations in substance usage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionUsageCategory</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:substanceDefinitionUsageCategoryCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceEmissionValue">
		<xsd:annotation>
			<xsd:documentation>
    substanceEmissionValue is a property that defines the amount of substance emitted during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceEmissionValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subSubSystem">
		<xsd:annotation>
			<xsd:documentation>
    subSubSystem is a string of characters that represents the sub-subsystem attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subSubSystem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subSystem">
		<xsd:annotation>
			<xsd:documentation>
    subSystem is a string of characters that represents the subsystem attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subSystem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskDescription">
		<xsd:annotation>
			<xsd:documentation>
    subtaskDescription is a description of the procedure performed during the Subtask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskDuration">
		<xsd:annotation>
			<xsd:documentation>
    subtaskDuration is a property that specifies the average time required for the performance of a Subtask, regardless of the number of personnel working 
    simultaneously. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskDuration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:timeUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskEndItemObjectiveState">
		<xsd:annotation>
			<xsd:documentation>
    subtaskEndItemObjectiveState is a state that identifies the condition of the product that will exist after the accomplishment of the Subtask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskEndItemObjectiveState</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:subtaskEndItemObjectiveStateCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    subtaskIdentifier is an identifier that establishes a unique designator for a Subtask and to differentiate it from other instances of Subtask. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:subtaskIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskInformationCode">
		<xsd:annotation>
			<xsd:documentation>
    subtaskInformationCode is a classification that identifies the main purpose for the Subtask. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskInformationCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:taskInformationCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskMaintenanceLocation">
		<xsd:annotation>
			<xsd:documentation>
    subtaskMaintenanceLocation is a classification that specifies where the Subtask will be performed in relation to the product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskMaintenanceLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:subtaskMaintenanceLocationCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskName">
		<xsd:annotation>
			<xsd:documentation>
    subtaskName is a name by which the Subtask is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskRole">
		<xsd:annotation>
			<xsd:documentation>
    subtaskRole is a classification that identifies how the Subtask is related to the main function of the Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:subtaskRoleCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskTimelineEvent">
		<xsd:annotation>
			<xsd:documentation>
    subtaskTimelineEvent is a classification that identifies how the starting point for a Subtask depends upon its preceding Subtask
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskTimelineEvent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:subtaskTimelineEventCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskTimelineLag">
		<xsd:annotation>
			<xsd:documentation>
    subtaskTimelineLag is a property that specifies the time that must elapse before the Subtask under consideration can start, in relation to its associated 
    timeline event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskTimelineLag</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:timeUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="suppliesUsedAmount">
		<xsd:annotation>
			<xsd:documentation>
    suppliesUsedAmount is the amount of supply items used for a MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:suppliesUsedAmount</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:unit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportEquipmentCalibrationRequired">
		<xsd:annotation>
			<xsd:documentation>
    supportEquipmentCalibrationRequired is a classification that indicates whether a support equipment requires calibration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:supportEquipmentCalibrationRequired</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:supportEquipmentCalibrationRequiredCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportEquipmentPower">
		<xsd:annotation>
			<xsd:documentation>
    supportEquipmentPower  indicates the type of power that a support equipment requires.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:supportEquipmentPower</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportEquipmentType">
		<xsd:annotation>
			<xsd:documentation>
    supportEquipmentType is a classification that allows to group different types of support equipment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:supportEquipmentType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:supportEquipmentTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportEquipmentUsedAmount">
		<xsd:annotation>
			<xsd:documentation>
    supportEquipmentUsedAmount is the number of a specific SupportEquipment that has been used in a MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:supportEquipmentUsedAmount</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportEquipmentUsedDuration">
		<xsd:annotation>
			<xsd:documentation>
    supportEquipmentUsedDuration is the time that the SupportEquiment is used during a MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:supportEquipmentUsedDuration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:element name="unit" type="value:timeUnit"/>
			<xsd:element name="value" type="xsd:decimal"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="system">
		<xsd:annotation>
			<xsd:documentation>
    system is a string of characters that represents the system attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:system</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="systemDifferenceCode">
		<xsd:annotation>
			<xsd:documentation>
    systemDifferenceCode is a string of characters that represents the system difference code attribute of the data module code.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:systemDifferenceCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="nonEmptyString" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskDuration">
		<xsd:annotation>
			<xsd:documentation>
    taskDuration is a property that specifies the average time required for the performance of a Task, regardless of the number of personnel working 
    simultaneously . 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskDuration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:timeUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskFrequencyCalculationMethod">
		<xsd:annotation>
			<xsd:documentation>
    taskFrequencyCalculationMethod is a description that provides further information on how the taskFrequencyValue has been derived.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskFrequencyCalculationMethod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskFrequencyValue">
		<xsd:annotation>
			<xsd:documentation>
    taskFrequencyValue is a property that represents the rate of occurrence value.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskFrequencyValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:timeCycleRateUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    taskIdentifier is an identifier that establishes a unique designator for a Task and to differentiate it from other instances of Task. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:taskIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskInformationCode">
		<xsd:annotation>
			<xsd:documentation>
    taskInformationCode is a classification that identifies the main purpose for the Task. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskInformationCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:taskInformationCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskName">
		<xsd:annotation>
			<xsd:documentation>
    taskName is a name by which the Task is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementAuthority">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementAuthority identifies the Organization that is the authoritative source for the identified TaskRequirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementAuthority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="orgRef" type="organizationRef" nillable="true"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementAuthoritySourceType">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementAuthoritySourceType is a classification that indicates the significance of the source from which TaskRequirement is derived.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementAuthoritySourceType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:taskRequirementAuthoritySourceTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementDescription">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementDescription is a description that summarizes the procedure that needs to be performed based on the outcome of a support analysis activity. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementIdentifier is an identifier that establishes a unique designator for a TaskRequirement and to differentiate it from other instances of 
    TaskRequirement. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:taskRequirementIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementInformationCode">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementInformationCode is a classification that identifies the main purpose for the TaskRequirement. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementInformationCode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:taskInformationCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementJustificationDescription">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementJustificationDescription is a description that summarizes the need for a Task to meet the results from a support analysis activity. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementJustificationDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementName">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementName is a name by which the TaskRequirement  is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementRevisionChangeDescription">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementRevisionChangeDescription is a description that gives more information on content that has been altered between two revisions of a 
    TaskRequirement. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementRevisionChangeDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementRevisionDate is a date that specifies when a TaskRequirementRevision was defined.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementRevisionIdentifier is an identifier that establishes a unique designator for a TaskRequirementRevision and to differentiate it from other 
    instances of TaskRequirementRevision. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:taskRequirementRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementRevisionRationale is a description that gives more information on the justification for revising the TaskRequirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementRevisionStatus is a state that identifies the maturity of a TaskRequirementRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementSpecialResourceRequirement">
		<xsd:annotation>
			<xsd:documentation>
    taskRequirementSpecialResourceRequirement is a description that gives more information on unusual resources which are needed for the performance of the 
    required Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementSpecialResourceRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskResourceDuration">
		<xsd:annotation>
			<xsd:documentation>
    taskResourceDuration is a property that specifies the average time that a TaskResource is needed to perform a specified amount of work.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskResourceDuration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:timeUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskResourceIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    taskResourceIdentifier is an identifier that establishes a unique designator for a TaskResource and to differentiate it from other instances of 
    TaskResource.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskResourceIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:taskResourceIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRevisionChangeDescription">
		<xsd:annotation>
			<xsd:documentation>
    taskRevisionChangeDescription is a description that gives more information on content that has been altered between two revisions of a Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRevisionChangeDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    taskRevisionDate is a date that specifies when the Task was revised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRevisionDescription">
		<xsd:annotation>
			<xsd:documentation>
    taskRevisionDescription is a textual narrative statement that explains what the taskRevision is and/or why it is different from other taskRevisions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRevisionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    taskRevisionIdentifier is an identifier that establishes a unique designator for a TaskRevision and to differentiate it from other instances of 
    TaskRevision. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:taskRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    taskRevisionRationale is a description that gives more information on the justification for revising the Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    taskRevisionStatus is a state that identifies the progress on the development of a TaskRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskTotalLaborTime">
		<xsd:annotation>
			<xsd:documentation>
    taskTotalLaborTime is a property that specifies the total time to be expended during a task. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskTotalLaborTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:timeConsumptionUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="technicalOrderEmbodimentDate">
		<xsd:annotation>
			<xsd:documentation>
    technicalOrderEmbodimentDate is a Date at which a TechnicalOrder was embodied.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:technicalOrderEmbodimentDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="technicalOrderPriority">
		<xsd:annotation>
			<xsd:documentation>
    technicalOrderPriority is a classification that indicates the urgency with which an TechnicalOrder must be implemented.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:technicalOrderPriority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:technicalOrderPriorityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="technicalOrderRequiredImplementationDate">
		<xsd:annotation>
			<xsd:documentation>
    technicalOrderRequiredImplementationDate is the mandatory date by which the TechnicalOrder must be executed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:technicalOrderRequiredImplementationDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="thresholdValue">
		<xsd:annotation>
			<xsd:documentation>
    thresholdValue is a property that represents the value that is measured and evaluated as part of the ParameterThresholdDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:thresholdValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:timeCycleUnit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="thresholdValueQualifier">
		<xsd:annotation>
			<xsd:documentation>
    thresholdValueQualifier is a classification that specifies a constraint to be used when evaluating an actual value against the thresholdValue.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:thresholdValueQualifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:thresholdValueQualifierCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="timeLimitDescription">
		<xsd:annotation>
			<xsd:documentation>
    timeLimitDescription is a description that provides a human readable expression of the defined time limit expression.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:timeLimitDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="timeLimitHarmonizationIndicator">
		<xsd:annotation>
			<xsd:documentation>
    timeLimitHarmonizationIndicator is a boolean that identifies if the TimeLimit is the result from a task packaging procedure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:timeLimitHarmonizationIndicator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:boolean" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="tradeName">
		<xsd:annotation>
			<xsd:documentation>
    tradeName is a name that uniquely establishes a craft or profession.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:tradeName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportCapabilityDimensions">
		<xsd:annotation>
			<xsd:documentation>
    transportCapabilityDimensions are the ThreeDimensional characteristics of a ThreeDimensional.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:transportCapabilityDimensions</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportCapabilityQuantity">
		<xsd:annotation>
			<xsd:documentation>
    transportCapabilityQuantity is a number that defines how many items of a specific type can be transported as part of a TransportCapability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:transportCapabilityQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportCapabilityRange">
		<xsd:annotation>
			<xsd:documentation>
    transportCapabilityRange is a number that represents the distance to which a TransportCapability can transport items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:transportCapabilityRange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportCapabilityUsageDescription">
		<xsd:annotation>
			<xsd:documentation>
    transportCapabilityUsageDescription is a textual narrative that provides a human readable expression of a TransportCapabilityUsage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:transportCapabilityUsageDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportCapabilityUsageIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    transportCapabilityUsageIdentifier is a string of text that allows to uniquely identify a TransportCapabilityUsage and differentiate it from a different 
    TransportCapabilityUsage instance.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:transportCapabilityUsageIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:transportCapabilityUsageIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportCapabilityUsagePeriod">
		<xsd:annotation>
			<xsd:documentation>
    transportCapabilityUsagePeriod is  a DateTimeRange representing the period of time during which a TransportCapability is used.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:transportCapabilityUsagePeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="typeOfPersonDescription">
		<xsd:annotation>
			<xsd:documentation>
    typeOfPersonDescription  is a description that gives more information on the defined TypeOfPerson.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:typeOfPersonDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="typeOfPersonIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    typeOfPersonIdentifier is an identifier that establishes a unique designator for a TypeOfPerson and to differentiate it from other instances of 
    TypeOfPerson .
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:typeOfPersonIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:typeOfPersonIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="typeOfPersonName">
		<xsd:annotation>
			<xsd:documentation>
    typeOfPersonName is a name by which the TypeOfPerson is known and can be easily referenced.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:typeOfPersonName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="typeOfPersonSize">
		<xsd:annotation>
			<xsd:documentation>
    typeOfPersonSize is the average size of Persons of the TypeOfPerson.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:typeOfPersonSize</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="typeOfPersonType">
		<xsd:annotation>
			<xsd:documentation>
    typeOfPersonType is a [classification] that allows to group different Persons that sahre the same characteristics.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:typeOfPersonType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:typeOfPersonTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="typeOfPersonWeight">
		<xsd:annotation>
			<xsd:documentation>
    typeOfPersonWeight is the average weight of Persons of the TypeOfPerson.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:typeOfPersonWeight</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="typeOfPrice">
		<xsd:annotation>
			<xsd:documentation>
    typeOfPrice is a classification that defines the type of a provided price.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:typeOfPrice</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:typeOfPriceCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="unacceptableConditionDescription">
		<xsd:annotation>
			<xsd:documentation>
    unacceptableConditionDescription is a narrative text providing the justification for an UnacceptableCondition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:unacceptableConditionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="unacceptableConditionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    unacceptableConditionIdentifier is a string of text that uniquely identifies an UnacceptableCondition and differentiates it from other ones.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:unacceptableConditionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:unacceptableConditionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="unacceptableConditionReason">
		<xsd:annotation>
			<xsd:documentation>
    unacceptableConditionReason is a classification that determines the reason that underlies an UnacceptableCondition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:unacceptableConditionReason</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:unacceptableConditionReasonCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="upperLimitSalesQuantity">
		<xsd:annotation>
			<xsd:documentation>
    upperLimitSalesQuantity indicates a hardwarePartUnitOfIssuePrice valid for an individual, specified range of buy quantities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:upperLimitSalesQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:int" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warehouseType">
		<xsd:annotation>
			<xsd:documentation>
    warehouseType is a classification that identifies further specialization for Warehouse.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warehouseType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:warehouseTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warningCautionNoteDescription">
		<xsd:annotation>
			<xsd:documentation>
    warningCautionNoteDescription is a description that gives more information on safety, legal and health considerations.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warningCautionNoteDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warningCautionNoteIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    warningCautionNoteIdentifier is an identifier that establishes a unique designator for a warning, caution or note, and to differentiate it from other 
    instances of warning, caution or note.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warningCautionNoteIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:warningCautionNoteIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warningCautionNoteType">
		<xsd:annotation>
			<xsd:documentation>
    warningCautionNoteType is a classification that identifies severity and scope for the safety, legal and health considerations.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warningCautionNoteType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:warningCautionNoteTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimCommunicationMeans">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimCommunicationMeans is a classification that defines the means by which a WarrantyClaim was raised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimCommunicationMeans</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:warrantyClaimCommunicationMeansCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimContactType">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimContactType is a classification that allows to group different types of WarrantyClaimContacts.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimContactType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:warrantyClaimContactTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimFilingDate">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimFilingDate is the date at which the Warranty Claim has been sent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimFilingDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimFollowUpDate">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimFollowUpDate is a date at which the WarrantyFollowUp took place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimFollowUpDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimFollowUpNotes">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimFollowUpNotes is a narrative text describing the follow-up of a WarrantyClaim.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimFollowUpNotes</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimIdentifier is a string of text that uniquely identifies a WarrantyClaim and differentiates it from other WarrantyClaims.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:warrantyClaimIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimOccurrenceDate">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimOccurrenceDate is the date at which the event that generated the claim occurred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimOccurrenceDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimResolutionDate">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimResolutionDate is a classification that indicates the kind of resolution that was taken.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimResolutionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimResolutionDescription">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimResolutionDescription is a narrative text explaining the WarrantyClaimResolution.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimResolutionDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimResolutionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimResolutionIdentifier is a string that allows to uniquely identify a WarrantyClaimResolution and differentiate it from other 
    WarrantyClaimResolutions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimResolutionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:warrantyClaimResolutionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimResolutionType">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimResolutionType is a [classification] that allows to group the WarrantyClaimResolutions by different criteria.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimResolutionType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:warrantyClaimResolutionTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimSettlementDate">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimSettlementDate is the date at which the WarrantyClaim has been settled.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimSettlementDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimType">
		<xsd:annotation>
			<xsd:documentation>
    warrantyClaimType is a classification that permits to group different types of WarrantyClaims.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:warrantyClaimTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyEventPeriod">
		<xsd:annotation>
			<xsd:documentation>
    warrantyEventPeriod is the period of time during which the WarrantyEvent extended.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyEventPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyEventReason">
		<xsd:annotation>
			<xsd:documentation>
    warrantyEventReason is a classification that describes the type of WarrantyEvent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyEventReason</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:warrantyEventReasonCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteContainerIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    wasteContainerIdentifier is a string of characters that allows to uniquely identify a WasteContainer and differentiate it from other ones.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteContainerIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:wasteContainerIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteDisposalOperationActionJustification">
		<xsd:annotation>
			<xsd:documentation>
    wasteDisposalOperationActionJustification is a descriptive text that allows to document why a certain Action has been taken after a DisposalOperation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteDisposalOperationActionJustification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteDisposalOperationDate">
		<xsd:annotation>
			<xsd:documentation>
    wasteDisposalOperationDate is the date at which the WasteDisposalOperation was performed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteDisposalOperationDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteDisposalOperationIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    wasteDisposalOperationIdentifier is a text string that uniquely identifies a WasteDisposalOperation and allows to differentiate it from other 
    WasteDisposalOperation instances.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteDisposalOperationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:wasteDisposalOperationIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteDisposalOperationMethod">
		<xsd:annotation>
			<xsd:documentation>
    wasteDisposalOperationMethod is a classificatio that allows to define the method of disposal used during a WasteDisposalOperation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteDisposalOperationMethod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:wasteDisposalOperationMethodCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteDisposalOperationMethodDetails">
		<xsd:annotation>
			<xsd:documentation>
    wasteDisposalOperationMethodDetails is a textual description providing further details on the disposal operation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteDisposalOperationMethodDetails</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteDisposalOperationOrganization">
		<xsd:annotation>
			<xsd:documentation>
    wasteDisposalOperationOrganization is the organization that carries out the wasteDisposal.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteDisposalOperationOrganization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="orgRef" type="organizationRef" nillable="true"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteRecoveredItemQuality">
		<xsd:annotation>
			<xsd:documentation>
    wasteRecoveredItemQuality is a classification that allows to define the quality of the material or substance recovered as the result of a 
    WasteDisposalOperation,
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteRecoveredItemQuality</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:wasteRecoveredItemQualityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteRecoveredItemQuantity">
		<xsd:annotation>
			<xsd:documentation>
    wasteRecoveredItemQuantity is a property that defines the amount of material or substance recovered as the result of a WasteDisposalOperation,
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteRecoveredItemQuantity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteRecoveredItemValue">
		<xsd:annotation>
			<xsd:documentation>
    wasteRecoveredItemValue is a property that documents the value of the material or substance recovered as the result of a WasteDisposalOperation,
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteRecoveredItemValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="unit" type="value:unit"/>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element name="value" type="xsd:decimal" nillable="true"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="nomVal" type="xsd:decimal"/>
							<xsd:element name="lowOff" type="xsd:decimal"/>
							<xsd:element name="uppOff" type="xsd:decimal"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element name="lowVal" type="xsd:decimal"/>
							<xsd:element name="uppVal" type="xsd:decimal"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
				<xsd:element name="txt" type="nonEmptyString" nillable="true"/>
			</xsd:choice>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workBreakdownDescription">
		<xsd:annotation>
			<xsd:documentation>
    workBreakdownDescription is a narrative statement explaining the WorkBreakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workBreakdownDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workBreakdownIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    workBreakdownIdentifier is an identifier that establishes a unique designator for a WorkBreakdown and to differentiate it from other instances of 
    WorkBreakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workBreakdownIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:workBreakdownIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workBreakdownName">
		<xsd:annotation>
			<xsd:documentation>
    workBreakdownName is a word or phrase by which the WorkBreakdown is commonly known.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workBreakdownName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workBreakdownRevisionDate">
		<xsd:annotation>
			<xsd:documentation>
    workBreakdownRevisionDate is a date that indicates when a WorkBreakdownRevision was created.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workBreakdownRevisionDate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workBreakdownRevisionIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    workBreakdownRevisionIdentifier is an identifier that establishes a unique designator for a WorkBreakdownRevision and to differentiate it from other 
    instances of WorkBreakdownRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workBreakdownRevisionIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:workBreakdownRevisionIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workBreakdownRevisionRationale">
		<xsd:annotation>
			<xsd:documentation>
    workBreakdownRevisionRationale is a description that gives more information on why the revision for the WorkBreakdown was created.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workBreakdownRevisionRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workBreakdownRevisionStatus">
		<xsd:annotation>
			<xsd:documentation>
    workBreakdownRevisionStatus is a state that identifies the maturity of a WorkBreakdownRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workBreakdownRevisionStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:revisionStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workItemDescription">
		<xsd:annotation>
			<xsd:documentation>
    workItemDescription is a narrative statement explaining what the WorkItem is.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workItemDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workItemIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    workItemIdentifier is a string of characters that uniquely identifies a WorkItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workItemIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:workItemIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workItemPeriod">
		<xsd:annotation>
			<xsd:documentation>
    workItemPeriod is the period during which a WorkItem has to take place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workItemPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="endDate" type="xsd:date" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workItemStatus">
		<xsd:annotation>
			<xsd:documentation>
    workItemStatus is a classification that defines the situation of a WorkItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workItemStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:workItemStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workItemType">
		<xsd:annotation>
			<xsd:documentation>
    workItemType is a classification that allows to define different categories of work for a WorkItems.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workItemType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:workItemTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workOrderDateRaised">
		<xsd:annotation>
			<xsd:documentation>
    workOrderDateRaised is the date at which the work order was raised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workOrderDateRaised</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workOrderDescription">
		<xsd:annotation>
			<xsd:documentation>
    workOrderDescription is a narrative statement explaining the WorkOrder.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workOrderDescription</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="descr" type="nonEmptyString" nillable="true"/>
			<xsd:element name="lang" type="value:languageCode" nillable="true" minOccurs="0"/>
			<xsd:element name="date" type="xsd:date" nillable="true" minOccurs="0"/>
			<xsd:element name="providedBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workOrderExecutionPeriod">
		<xsd:annotation>
			<xsd:documentation>
    workOrderExecutionPeriod is the period of time during which the work order must be carried out.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workOrderExecutionPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="endTime" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workOrderIdentifier">
		<xsd:annotation>
			<xsd:documentation>
    workOrderIdentifier is a string of text that uniquely identifies a WorkOrder and allows to distinguish it from other WorkOrders.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workOrderIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="id" type="nonEmptyString" nillable="true"/>
			<xsd:element name="class" type="value:workOrderIdentifierClassCode" nillable="true" minOccurs="0"/>
			<xsd:element name="setBy" type="organizationRef" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workOrderImplementationTimeLimit">
		<xsd:annotation>
			<xsd:documentation>
    workOrderImplementationTimeLimit is a DateTime which represents the date and time at which the WorkOrder was implemented.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workOrderImplementationTimeLimit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="date" type="xsd:date" nillable="true"/>
			<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workOrderPriority">
		<xsd:annotation>
			<xsd:documentation>
    workOrderPriority is a [classification] that allows to define the priority of a WorkOrder.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workOrderPriority</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:workOrderPriorityCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workOrderStatus">
		<xsd:annotation>
			<xsd:documentation>
    workOrderStatus  is a state describing the current status of the WorkOrder.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workOrderStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="state" type="value:workOrderStatusCode" nillable="true"/>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-Extends -->
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workOrderType">
		<xsd:annotation>
			<xsd:documentation>
    workOrderType is a classification that allows to group different WorkOrders of similar characteristics.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workOrderType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:workOrderTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="xCoordinate">
		<xsd:annotation>
			<xsd:documentation>
    xCoordinate is a numerical value representing the longitudinal coordinate of a position within the referenced area.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:xCoordinate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="yCoordinate">
		<xsd:annotation>
			<xsd:documentation>
    yCoordinate is a numerical value representing the tramnsversal coordinate of a position within the referenced area.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:yCoordinate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="zCoordinate">
		<xsd:annotation>
			<xsd:documentation>
    zCoordinate is a numerical value representing the height coordinate of a position within the referenced area.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:zCoordinate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="recDate" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="date" type="xsd:date" nillable="true"/>
						<xsd:element name="time" type="xsd:time" nillable="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="vdtm" type="value:valueDeterminationCode" nillable="true" minOccurs="0"/>
			<xsd:sequence>
				<xsd:element name="unit" type="value:unit"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="value" type="xsd:decimal" nillable="true" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="nomVal" type="xsd:decimal"/>
						<xsd:element name="lowOff" type="xsd:decimal"/>
						<xsd:element name="uppOff" type="xsd:decimal"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element name="lowVal" type="xsd:decimal"/>
						<xsd:element name="uppVal" type="xsd:decimal"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="zoneElementType">
		<xsd:annotation>
			<xsd:documentation>
    zoneElementType is a classification that identifies further specialization for a ZoneElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:zoneElementType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="code" type="value:zoneElementTypeCode" nillable="true"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
			<xsd:element name="cmtItem" type="commentItem" nillable="true" minOccurs="0"/>
			<xsd:element name="orgRefs" type="organizationReferencingItem" nillable="true" minOccurs="0"/>
			<xsd:element name="projAttrs" type="projectSpecificExtensionItem" nillable="true" minOccurs="0"/>
			<xsd:element name="rmks" type="remarkItem" nillable="true" minOccurs="0"/>
			<xsd:element name="secs" type="securityClassificationItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ======================================= UML ATTRIBUTE GROUPS ======================================= -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="equipmentStatus">
		<xsd:annotation>
			<xsd:documentation>
    EquipmentStatus is an [attributeGroup] that represents the status of a SerializedHardwarePart during a specific period of time and the reason for such 
    status.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EquipmentStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="statusPeriod" type="equipmentStatusPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="reason" type="equipmentStatusReason" nillable="true" minOccurs="0"/>
			<xsd:element name="statusType" type="equipmentStatusType" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartAsDesignedCommerceData">
		<xsd:annotation>
			<xsd:documentation>
    HardwarePartAsDesignedCommerceData is a [class] that documents pricing information of a part based on its units of issue. The prices are used for planning 
    purposes on customer side and reflect initial prices, provided by provisioning.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:HardwarePartAsDesignedCommerceData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="msq" type="minimumSalesQuantity" nillable="true" minOccurs="0"/>
			<xsd:element name="top" type="typeOfPrice" nillable="true" minOccurs="0"/>
			<!-- UML-AttributeGroups -->
			<xsd:element name="pricebk" type="priceBreakData" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalModeStatus">
		<xsd:annotation>
			<xsd:documentation>
    OperationalModeStatus is an [attributeGroup] describing the mode of operation that is associated to a LogBookEntry.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalModeStatus</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="statusType" type="operationalModeStatusType" nillable="true" minOccurs="0"/>
			<xsd:element name="used" type="operationalModeStatusUsed" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityPlan">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceActivityPlan is an [attributeGroup] that details the information associated to the planning of a MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceActivityPlan</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="plAcc" type="maintenanceActivityPlanAccessHours" nillable="true" minOccurs="0"/>
			<xsd:element name="plExec" type="maintenanceActivityPlanExecutionHours" nillable="true" minOccurs="0"/>
			<xsd:element name="plPeriod" type="maintenanceActivityPlanPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="plPrep" type="maintenanceActivityPlanPreparationHours" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityRecord">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceActivityRecord is an [attributeGroup] that details the information associated to the execution of a MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceActivityRecord</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="recAcc" type="maintenanceActivityRecordAccessHours" nillable="true" minOccurs="0"/>
			<xsd:element name="recAppTime" type="maintenanceActivityRecordApprovalTime" nillable="true" minOccurs="0"/>
			<xsd:element name="recExec" type="maintenanceActivityRecordExecutionHours" nillable="true" minOccurs="0"/>
			<xsd:element name="recPeriod" type="maintenanceActivityRecordPeriod" nillable="true" minOccurs="0"/>
			<xsd:element name="recPrep" type="maintenanceActivityRecordPreparationHours" nillable="true" minOccurs="0"/>
			<xsd:element name="recDone" type="maintenanceActivityRecordWorkDone" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="priceBreakData">
		<xsd:annotation>
			<xsd:documentation>
    PriceBreakInformation is an [attributeGroup] that defines a single price band: from lower to upper quantity, and the related hardwarePartUnitOfIssuePrice.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PriceBreakData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="llq" type="lowerLimitSalesQuantity" nillable="true" minOccurs="0"/>
			<xsd:element name="ulq" type="upperLimitSalesQuantity" nillable="true" minOccurs="0"/>
			<xsd:element name="uop" type="hardwarePartUnitOfIssuePrice" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibrationMeasurement">
		<xsd:annotation>
			<xsd:documentation>
    CalibrationMeasurement is a [attributeGroup] that provides the individual measurements performed to carry out an individual Calibration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CalibrationMeasurement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="calMeaPat" type="calibrationMeasurementPattern" nillable="true" minOccurs="0"/>
			<xsd:element name="calMeaRd" type="calibrationMeasurementReading" nillable="true" minOccurs="0"/>
			<xsd:element name="calMeaNote" type="calibrationMeasurementNotes" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalTime">
		<xsd:annotation>
			<xsd:documentation>
    OperationalTime is an [attributeGroup] that can be associated to an OperationalTimeItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalTime</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="opTimeType" type="operationalTimeType" nillable="true" minOccurs="0"/>
			<xsd:element name="opTimeVal" type="operationalTimeValue" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfigurationPhysicalData">
		<xsd:annotation>
			<xsd:documentation>
    AllowedProductConfigurationPhysicalData is an [attributeGroup] that provides physical characteristics associated to an AllowedProductConfiguration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AllowedProductConfigurationPhysicalData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="dim" type="allowedProductConfigurationPhysicalDataDimensions" nillable="true" minOccurs="0"/>
			<xsd:element name="weight" type="allowedProductConfigurationPhysicalDataWeight" nillable="true" minOccurs="0"/>
			<xsd:element name="param" type="allowedProductConfigurationPhysicalDataParameter" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="openingTimes">
		<xsd:annotation>
			<xsd:documentation>
    OpeningTimes is an [attributeGroup] that defines the times at which a certain address is open to the public.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OpeningTimes</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="from" type="openingTimesFrom" nillable="true" minOccurs="0"/>
			<xsd:element name="to" type="openingTimesTo" nillable="true" minOccurs="0"/>
			<xsd:element name="day" type="openingTimesDay" nillable="true" minOccurs="0" maxOccurs="7"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDemilitarizationData">
		<xsd:annotation>
			<xsd:documentation>
    ItemDemilitarizationData is an [attributeGroup] that collects item characteristics that require a special handling of an item because of its military 
    nature.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ItemDemilitarizationData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="demilClass" type="itemDemilitarizationDataClass" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="descr" type="itemDemilitarizationDataDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartDefinitionDesignData">
		<xsd:annotation>
			<xsd:documentation>
    HardwarePartDefinitionDesignData is an [attributeGroup] that collects HardwarePartDefinition characteristics identified during design activities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:HardwarePartDefinitionDesignData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="haz" type="hardwarePartHazardousClass" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="opAul" type="hardwarePartOperationalAuthorizedLife" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="ftc" type="hardwarePartFitmentRequirement" nillable="true" minOccurs="0"/>
			<xsd:element name="emi" type="hardwarePartElectromagneticIncompatible" nillable="true" minOccurs="0"/>
			<xsd:element name="ess" type="hardwarePartElectrostaticSensitive" nillable="true" minOccurs="0"/>
			<xsd:element name="ems" type="hardwarePartElectromagneticSensitive" nillable="true" minOccurs="0"/>
			<xsd:element name="mse" type="hardwarePartMagneticSensitive" nillable="true" minOccurs="0"/>
			<xsd:element name="partRse" type="hardwarePartRadiationSensitive" nillable="true" minOccurs="0"/>
			<xsd:element name="suu" type="hardwarePartSize" nillable="true" minOccurs="0"/>
			<xsd:element name="wuu" type="hardwarePartMass" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartDefinitionSupportData">
		<xsd:annotation>
			<xsd:documentation>
    HardwarePartDefinitionSupportData is an [attributeGroup] that collects HardwarePartDefinition characteristics identified during supportability analysis 
    activities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:HardwarePartDefinitionSupportData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="partLogCat" type="hardwarePartLogisticsCategory" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="partRep" type="hardwarePartRepairability" nillable="true" minOccurs="0"/>
			<xsd:element name="sra" type="hardwarePartScrapRate" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nonConformanceData">
		<xsd:annotation>
			<xsd:documentation>
    NonConformanceData is an [attributeGroup] that collects information on how the EffectiveOnProductConfigurationItem does not comply with the requirements of 
    its usage in the AllowedProductConfigurationItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:NonConformanceData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="nonCType" type="nonConformanceType" nillable="true" minOccurs="0"/>
			<xsd:element name="nonCDescr" type="nonConformanceDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="nonCRstr" type="nonConformanceRestriction" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="remark">
		<xsd:annotation>
			<xsd:documentation>
    Remark is an [attributeGroup] that provides additional information about the associated item. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Remark</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="rmkText" type="remarkText" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rmkType" type="remarkType" nillable="true" minOccurs="0"/>
			<!-- UML-Extends -->
			<xsd:element name="files" type="digitalFileReferencingItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="authorityDrivenTaskRequirement">
		<xsd:annotation>
			<xsd:documentation>
				<font color="#0f0f0f">AuthorityDrivenTaskRequirement is an [attributeGroup] that collects information on TaskRequirement derived from regulations and/or 
    other authoritative sources.</font>
			</xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AuthorityDrivenTaskRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="authType" type="taskRequirementAuthoritySourceType" nillable="true" minOccurs="0"/>
			<xsd:element name="authOrg" type="taskRequirementAuthority" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="samplingDefinition">
		<xsd:annotation>
			<xsd:documentation>
    SamplingDefinition is an [attributeGroup] that specifies whether the associated action is to be performed on a subset of the population of the associated 
    target item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SamplingDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="samplDescr" type="samplingMethodDescription" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="samplVal" type="samplingValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskFrequency">
		<xsd:annotation>
			<xsd:documentation>
    TaskFrequency is an [attributeGroup] that specifies the rate of occurrence of a Task in its defined usage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskFrequency</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="freqVal" type="taskFrequencyValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="calcMthd" type="taskFrequencyCalculationMethod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisCandidateItemSelectionData">
		<xsd:annotation>
			<xsd:documentation>
    AnalysisCandidateItemSelectionData is an [attributeGroup] that summarizes decisions made for the AnalysisCandidateItem from a support analysis activities 
    perspective.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AnalysisCandidateItemSelectionData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="candDcsn" type="analysisCandidateItemSelectionIndicator" nillable="true" minOccurs="0"/>
			<xsd:element name="candRtnle" type="analysisCandidateItemSelectionRationale" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterValueGroup">
		<xsd:annotation>
			<xsd:documentation>
    PerformanceParameterValueGroup is an [attributeGroup] that organizes PerformanceParameter values according to a defined purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PerformanceParameterValueGroup</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="prfmPVal" type="performanceParameterValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prfmPFrctn" type="performanceParameterValueFraction" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="calcMthd" type="performanceParameterCalculationMethod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-Extends -->
			<xsd:element name="applic" type="applicabilityStatementItem" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDefinitionControlledItemData">
		<xsd:annotation>
			<xsd:documentation>
    PartDefinitionControlledItemData is an [attributeGroup] that collects PartDefinition characteristics identified during different controlled item analysis 
    activities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartDefinitionControlledItemData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="dec" type="partDemilitarizationClass" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyContactData">
		<xsd:annotation>
			<xsd:documentation>
    PartyContactData is an [attributeGroup] that provides contact details for a Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartyContactData</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-Attributes -->
			<xsd:element name="cntctType" type="partyContactDataType" nillable="true" minOccurs="0"/>
			<xsd:element name="cntctDetails" type="partyContactDataDetails" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- =============================== UML CLASS REFERENCE UTILITY CLASSES ================================ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="accelerometerRef">
		<xsd:annotation>
			<xsd:documentation>
    Accelerometer is a SensorType that measures acceleration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:accelerometer</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="actionRef">
		<xsd:annotation>
			<xsd:documentation>
    Action is a [class] that specifies measures to be taken.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:action</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="actnId" type="actionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="action[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(actnId) and not(@uriRef)) or (not(@uidRef) and actnId and not(@uriRef)) or (not(@uidRef) and not(actnId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="aggregatedElementRef">
		<xsd:annotation>
			<xsd:documentation>
    AggregatedElement is a BreakdownElement that is a container for a collection of BreakdownElements which are grouped for an identified purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:aggregatedElement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beId" type="breakdownElementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="be[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beId) and not(@uriRef)) or (not(@uidRef) and beId and not(@uriRef)) or (not(@uidRef) and not(beId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allocatedTaskLocationRef">
		<xsd:annotation>
			<xsd:documentation>
    AllocatedTaskLocation is a [class] that identifies where a Task is to be performed in the context of a given support solution.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:allocatedTaskLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="taskloc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfigurationByConfigurationIdentifierRef">
		<xsd:annotation>
			<xsd:documentation>
    AllowedProductConfigurationByConfigurationIdentifier is a [class] that defines an AllowedProductConfiguration by means other than a part number.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:allowedProductConfigurationByConfigurationIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="allwdPCId" type="allowedProductConfigurationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="apc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(allwdPCId) and not(@uriRef)) or (not(@uidRef) and allwdPCId and not(@uriRef)) or (not(@uidRef) and not(allwdPCId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfigurationHardwarePartDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    AllowedProductConfigurationHardwarePartDefinition is a HardwarePartDefinition that is managed as an AllowedProductConfiguration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:allowedProductConfigurationHardwarePartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfigurationRoleRef">
		<xsd:annotation>
			<xsd:documentation>
    AllowedProductConfigurationRole is a [relationship] that defines what OperationalRoles can be performed by a specific AllowedProductConfiguration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:allowedProductConfigurationRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="allwdPCRef" type="allowedProductConfigurationByConfigurationIdentifierRef"/>
				<xsd:element name="hwConfPartRef" type="allowedProductConfigurationHardwarePartDefinitionRef"/>
			</xsd:choice>
			<xsd:element name="apoc" type="allowedProductOperationalConfigurationItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="alprcoro[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(apoc) and not(@uriRef)) or (not(@uidRef) and apoc and not(@uriRef)) or (not(@uidRef) and not(apoc) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedRoleChangeRef">
		<xsd:annotation>
			<xsd:documentation>
    AllowedRoleChange is a [relationship] that defines the role changes that are possible to allow a Product in one specific role to be configured for a 
    different role.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:allowedRoleChange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="opRoleRef" type="operationalRoleRef"/>
			<xsd:element name="opRoleRef" type="operationalRoleRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="arc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(opRoleRef) and not(@uriRef)) or (not(@uidRef) and opRoleRef and not(@uriRef)) or (not(@uidRef) and not(opRoleRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="alternatePartDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    AlternatePartDefinition is a [relationship] that defines an alternate PartDefinition which can replace the base PartDefinition in all its usages ie, it is 
    context independent, and is form, fit, and function equivalent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:alternatePartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="altpt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partRef) and not(@uriRef)) or (not(@uidRef) and partRef and not(@uriRef)) or (not(@uidRef) and not(partRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityRef">
		<xsd:annotation>
			<xsd:documentation>
    AnalysisActivity is a [class] that represents the objective for, and outcome of, an analysis carried out for the AnalysisCandidateItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="anlysType" type="analysisActivityType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="anlysact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(anlysType) and not(@uriRef)) or (not(@uidRef) and anlysType and not(@uriRef)) or (not(@uidRef) and not(anlysType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="analysisActivityRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    AnalysisActivityRevision is a [class] representing an iteration applied to an AnalysisActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:analysisActivityRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="anlysType" type="analysisActivityType"/>
			<xsd:element name="revId" type="analysisActivityRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="anlysrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(anlysType) and not(@uriRef)) or (not(@uidRef) and anlysType and not(@uriRef)) or (not(@uidRef) and not(anlysType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="anchoringPointRef">
		<xsd:annotation>
			<xsd:documentation>
    AnchoringPoint is a [class] representing a point where an item can be moored or tied down.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:anchoringPoint</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="fleetRef" type="fleetRef"/>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="transpNetRef" type="transportNetworkRef"/>
			</xsd:choice>
			<xsd:element name="anchorId" type="anchoringPointIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="anchorpt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(anchorId) and not(@uriRef)) or (not(@uidRef) and anchorId and not(@uriRef)) or (not(@uidRef) and not(anchorId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="applicabilityStatementRef">
		<xsd:annotation>
			<xsd:documentation>
    ApplicabilityStatement is a [class] that defines the situation or situations under which related items are valid.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:applicabilityStatement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="applicId" type="applicabilityStatementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="applst[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(applicId) and not(@uriRef)) or (not(@uidRef) and applicId and not(@uriRef)) or (not(@uidRef) and not(applicId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="associatedActualEnvironmentRef">
		<xsd:annotation>
			<xsd:documentation>
    AssociatedActualEnvironment is a [relationship] that associates an EnvironmentItem with an ActualEnvironemnt relevant to its existence, operation and/or 
    support during a specified period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:associatedActualEnvironment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="countryRef" type="countryRef"/>
				<xsd:element name="evRef" type="eventRef"/>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="geoAreaRef" type="geographicalAreaRef"/>
				<xsd:element name="globPosRef" type="globalPositionRef"/>
				<xsd:element name="mvRef" type="movementRef"/>
				<xsd:element name="movlegRef" type="movementLegRef"/>
				<xsd:element name="oppRef" type="operationalPeriodRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="actualEnv" type="actualEnvironment"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="itemenv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(actualEnv) and not(@uriRef)) or (not(@uidRef) and actualEnv and not(@uriRef)) or (not(@uidRef) and not(actualEnv) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="associatedDegradationMechanismRef">
		<xsd:annotation>
			<xsd:documentation>
    AssociatedDegradationMechanism is a [relationship] where a DegradationMechanismItem relates to a DegradationMechanism which applies to the item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:associatedDegradationMechanism</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="degrMechRef" type="degradationMechanismRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="assdegr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(degrMechRef) and not(@uriRef)) or (not(@uidRef) and degrMechRef and not(@uriRef)) or (not(@uidRef) and not(degrMechRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="associatedEnvironmentDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    AssociatedEnvironmentDefinition is a [relationship] that associates an EnvironmentDefinitionItem with an EnvironmentDefinition relevant to its existence, 
    operation and/or support.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:associatedEnvironmentDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="countryRef" type="countryRef"/>
				<xsd:element name="geoAreaRef" type="geographicalAreaRef"/>
				<xsd:element name="globPosRef" type="globalPositionRef"/>
				<xsd:element name="mlvRef" type="maintenanceLevelRef"/>
				<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="resSpecRef" type="resourceSpecificationRef"/>
				<xsd:element name="trRevRef" type="taskRequirementRevisionRef"/>
			</xsd:choice>
			<xsd:element name="envDefRef" type="environmentDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="assenvd[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(envDefRef) and not(@uriRef)) or (not(@uidRef) and envDefRef and not(@uriRef)) or (not(@uidRef) and not(envDefRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="authorityRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    AuthorityRequirement is a Requirement that has been issued by a technical or legal authority.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:authorityRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="authorizationToOperateRef">
		<xsd:annotation>
			<xsd:documentation>
    AuthorizationToOperate is a [class] that represents a certification allowing a specific configuration of a product to be put into operation. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:authorizationToOperate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="allwdPCRef" type="allowedProductConfigurationByConfigurationIdentifierRef"/>
				<xsd:element name="hwConfPartRef" type="allowedProductConfigurationHardwarePartDefinitionRef"/>
			</xsd:choice>
			<xsd:element name="authToOpId" type="authorizationToOperateIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ato[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(authToOpId) and not(@uriRef)) or (not(@uidRef) and authToOpId and not(@uriRef)) or (not(@uidRef) and not(authToOpId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="availabilityRef">
		<xsd:annotation>
			<xsd:documentation>
    Availability is an indication of the global availability status of an AvailabilityItem at a specific day.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:availability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="fleetRef" type="fleetRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="avId" type="availabilityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="avail[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(avId) and not(@uriRef)) or (not(@uidRef) and avId and not(@uriRef)) or (not(@uidRef) and not(avId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="batchHardwarePartRef">
		<xsd:annotation>
			<xsd:documentation>
    BatchHardwarePart is a [class] that represents actual physical parts which can be identified by their batch membership.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:batchHardwarePart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partDefinitionIdentifier"/>
			<xsd:element name="batchId" type="batchHardwarePartIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="bpart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownRef">
		<xsd:annotation>
			<xsd:documentation>
    Breakdown is a [class] that identifies a specific partitioning of a Product to form a parent-child structure of related instances of BreakdownElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdown</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="bkdnType" type="breakdownType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="bkdn[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(bkdnType) and not(@uriRef)) or (not(@uidRef) and bkdnType and not(@uriRef)) or (not(@uidRef) and not(bkdnType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementRef">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElement is a [class] defining a partition of a Product that is used in one or many instances of Breakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beId" type="breakdownElementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="be[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beId) and not(@uriRef)) or (not(@uidRef) and beId and not(@uriRef)) or (not(@uidRef) and not(beId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementInZoneRef">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementInZone is a [relationship] where a BreakdownElementInZoneItem relates to the ZoneElement where it is located.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementInZone</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
			</xsd:choice>
			<xsd:element name="beZoneRef" type="zoneElementRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="beiz[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beZoneRef) and not(@uriRef)) or (not(@uidRef) and beZoneRef and not(@uriRef)) or (not(@uidRef) and not(beZoneRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementRevision is a [class] representing an iteration applied to a BreakdownElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beId" type="breakdownElementIdentifier"/>
			<xsd:element name="revId" type="breakdownElementRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ber[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beId) and not(@uriRef)) or (not(@uidRef) and beId and not(@uriRef)) or (not(@uidRef) and not(beId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementRevisionRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementRevisionRelationship is a [relationship] where one BreakdownElementRevision relates to another BreakdownElement or BreakdownElementRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementRevisionRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
			<xsd:element name="relBe" type="breakdownElementRevisionRelationshipItem"/>
			<xsd:element name="relType" type="breakdownElementRevisionRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="berr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beRevRef) and not(@uriRef)) or (not(@uidRef) and beRevRef and not(@uriRef)) or (not(@uidRef) and not(beRevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementStructureRef">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementStructure is a [relationship] that establishes a hierarchical structure between two usages of BreakdownElement that belong to the same 
    BreakdownRevision. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementStructure</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
			<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="bes[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beUsageRef) and not(@uriRef)) or (not(@uidRef) and beUsageRef and not(@uriRef)) or (not(@uidRef) and not(beUsageRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementUsageAttachmentRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementUsageAttachmentRelationship is a BreakdownElementUsageRelationship that identifies the connector and attachment slot that must be used on 
    the respective breakdown element when installed on the BreakdownItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementUsageAttachmentRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
			<xsd:element name="relType" type="breakdownElementUsageRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="beur[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beUsageRef) and not(@uriRef)) or (not(@uidRef) and beUsageRef and not(@uriRef)) or (not(@uidRef) and not(beUsageRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementUsageInBreakdownRef">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementUsageInBreakdown is a [class] that represents a member of a BreakdownRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementUsageInBreakdown</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="bkdnType" type="breakdownType"/>
			<xsd:element name="revId" type="breakdownRevisionIdentifier"/>
			<xsd:element name="usageId" type="breakdownElementUsageIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="beu[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(bkdnType) and not(@uriRef)) or (not(@uidRef) and bkdnType and not(@uriRef)) or (not(@uidRef) and not(bkdnType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementUsageRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementUsageRelationship is a [relationship] where one usage of a BreakdownElement relates to the usage of another BreakdownElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownElementUsageRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
			<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
			<xsd:element name="relType" type="breakdownElementUsageRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="beur[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beUsageRef) and not(@uriRef)) or (not(@uidRef) and beUsageRef and not(@uriRef)) or (not(@uidRef) and not(beUsageRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownRevision is a [class] representing an iteration applied to a Breakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="bkdnType" type="breakdownType"/>
			<xsd:element name="revId" type="breakdownRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="bkdnr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(bkdnType) and not(@uriRef)) or (not(@uidRef) and bkdnType and not(@uriRef)) or (not(@uidRef) and not(bkdnType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownRevisionRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownRevisionRelationship is a [relationship] where one BreakdownRevision relates to another BreakdownRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:breakdownRevisionRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="bkdnRevRef" type="breakdownRevisionRef"/>
			<xsd:element name="bkdnRevRef" type="breakdownRevisionRef"/>
			<xsd:element name="relType" type="breakdownRevisionRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="bkdnrevr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(bkdnRevRef) and not(@uriRef)) or (not(@uidRef) and bkdnRevRef and not(@uriRef)) or (not(@uidRef) and not(bkdnRevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="budgetRef">
		<xsd:annotation>
			<xsd:documentation>
    Budget is a class representing a cost proposal to perform a specific service or provide a certain item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:budget</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="contrClauseRef" type="contractClauseRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="projRef" type="projectRef"/>
				<xsd:element name="servRef" type="serviceRef"/>
			</xsd:choice>
			<xsd:element name="budgId" type="budgetIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="budget[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(budgId) and not(@uriRef)) or (not(@uidRef) and budgId and not(@uriRef)) or (not(@uidRef) and not(budgId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibrationRef">
		<xsd:annotation>
			<xsd:documentation>
    Calibration is an [attributeGroup&gt; that provides historical data about calibration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:calibration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partDefinitionIdentifier"/>
			<xsd:element name="serialId" type="serializedHardwarePartIdentifier"/>
			<xsd:element name="calibId" type="calibrationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="calib[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="calibrationDocumentRef">
		<xsd:annotation>
			<xsd:documentation>
    CalibrationDocument is a [relationship] that associates a Calibration to a Document.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:calibrationDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="calibRef" type="calibrationRef"/>
			<xsd:element name="docItem" type="documentItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="caldoc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(calibRef) and not(@uriRef)) or (not(@uidRef) and calibRef and not(@uriRef)) or (not(@uidRef) and not(calibRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityRef">
		<xsd:annotation>
			<xsd:documentation>
    Capability is a class that defines an actual ability or potential for an indicated use or deployment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="capId" type="capabilityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cap[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(capId) and not(@uriRef)) or (not(@uidRef) and capId and not(@uriRef)) or (not(@uidRef) and not(capId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    CapabilityDefinition is a [class] that defines an ability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="allwdPCRef" type="allowedProductConfigurationByConfigurationIdentifierRef"/>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="mlvRef" type="maintenanceLevelRef"/>
				<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="opRoleRef" type="productOperationalRoleRef"/>
				<xsd:element name="opRoleConfRef" type="productOperationalRoleConfigurationRef"/>
				<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef"/>
			</xsd:choice>
			<xsd:element name="capId" type="capabilityDefinitionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="capd[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(capId) and not(@uriRef)) or (not(@uidRef) and capId and not(@uriRef)) or (not(@uidRef) and not(capId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionCharacteristicRef">
		<xsd:annotation>
			<xsd:documentation>
    CapabilityDefinitionCharacteristic is a [class&gt; that specifies a measurable or observable feature which is significant for the CapabilityDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionCharacteristic</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="allwdPCRef" type="allowedProductConfigurationByConfigurationIdentifierRef"/>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="mlvRef" type="maintenanceLevelRef"/>
				<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="opRoleRef" type="productOperationalRoleRef"/>
				<xsd:element name="opRoleConfRef" type="productOperationalRoleConfigurationRef"/>
				<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef"/>
			</xsd:choice>
			<xsd:element name="capId" type="capabilityDefinitionIdentifier"/>
			<xsd:element name="revId" type="capabilityDefinitionRevisionIdentifier"/>
			<xsd:element name="charName" type="capabilityDefinitionCharacteristicName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="capdchar[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(capId) and not(@uriRef)) or (not(@uidRef) and capId and not(@uriRef)) or (not(@uidRef) and not(capId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    CapabilityDefinitionRevision is a [class] representing an iteration applied to a CapabilityDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityDefinitionRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="allwdPCRef" type="allowedProductConfigurationByConfigurationIdentifierRef"/>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="mlvRef" type="maintenanceLevelRef"/>
				<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="opRoleRef" type="productOperationalRoleRef"/>
				<xsd:element name="opRoleConfRef" type="productOperationalRoleConfigurationRef"/>
				<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef"/>
			</xsd:choice>
			<xsd:element name="capId" type="capabilityDefinitionIdentifier"/>
			<xsd:element name="revId" type="capabilityDefinitionRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="capdrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(capId) and not(@uriRef)) or (not(@uidRef) and capId and not(@uriRef)) or (not(@uidRef) and not(capId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityLimitationRef">
		<xsd:annotation>
			<xsd:documentation>
    CapabilityLimitation is a [class] that defines a limitation on the use of a specific Capability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:capabilityLimitation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="capId" type="capabilityIdentifier"/>
			<xsd:element name="camLimId" type="capabilityLimitationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="caplim[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(capId) and not(@uriRef)) or (not(@uidRef) and capId and not(@uriRef)) or (not(@uidRef) and not(capId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cargoItemRef">
		<xsd:annotation>
			<xsd:documentation>
    CargoItem is a class representing one or several items that need to be transported as part of a FleetTask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:cargoItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="cargoId" type="cargoItemIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cargo[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(cargoId) and not(@uriRef)) or (not(@uidRef) and cargoId and not(@uriRef)) or (not(@uidRef) and not(cargoId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeAuthorizationRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangeAuthorization is a [class] that is the record of the permission to modify product design, its procedures and/or associated product support data.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeAuthorization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="chgAuthId" type="changeAuthorizationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="chgau[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(chgAuthId) and not(@uriRef)) or (not(@uidRef) and chgAuthId and not(@uriRef)) or (not(@uidRef) and not(chgAuthId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changedItemAvailabilityRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangedItemAvailabilityRequirement is a [relationship] that defines the required availability of the SerializedProductVariant or ProductVariant fleet into 
    which the item to be upgraded has to be embodied during the Product upgrade.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changedItemAvailabilityRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="altPartRef" type="alternatePartDefinitionRef"/>
				<xsd:element name="anlysRevRef" type="analysisActivityRevisionRef"/>
				<xsd:element name="beInZoneRef" type="breakdownElementInZoneRef"/>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="beChildRef" type="breakdownElementStructureRef"/>
				<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
				<xsd:element name="bkdnRevRef" type="breakdownRevisionRef"/>
				<xsd:element name="capDefRevRef" type="capabilityDefinitionRevisionRef"/>
				<xsd:element name="cbLocRef" type="circuitBreakerLocationRef"/>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="costBkdnRevRef" type="costBreakdownRevisionRef"/>
				<xsd:element name="allwdPCEfyRef" type="effectiveOnProductConfigurationRef"/>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="fleetRef" type="fleetRef"/>
				<xsd:element name="beHwRealRef" type="hardwareElementPartRealizationRef"/>
				<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
				<xsd:element name="instPartRef" type="installedPartRef"/>
				<xsd:element name="mtrlDefRevRef" type="materialDefinitionRevisionRef"/>
				<xsd:element name="missnDRevRef" type="missionDefinitionRevisionRef"/>
				<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef"/>
				<xsd:element name="pListRevRef" type="partDefinitionPartsListRevisionRef"/>
				<xsd:element name="prfmPRevRef" type="performanceParameterRevisionRef"/>
				<xsd:element name="roleConfRevRef" type="productOperationalRoleConfigurationRevisionRef"/>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="reqRef" type="requirementRef"/>
				<xsd:element name="resSpecRealRef" type="resourceSpecificationRealizationRef"/>
				<xsd:element name="resSpecRevRef" type="resourceSpecificationRevisionRef"/>
				<xsd:element name="secRef" type="securityClassificationRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="partModRef" type="serializedHardwarePartModificationRef"/>
				<xsd:element name="serPartPosRef" type="serializedPartsListPositionRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="servRef" type="serviceRef"/>
				<xsd:element name="beSwRealRef" type="softwareElementPartRealizationRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
				<xsd:element name="subsRevRef" type="substanceDefinitionRevisionRef"/>
				<xsd:element name="substPartRef" type="substitutePartDefinitionRef"/>
				<xsd:element name="trRevRef" type="taskRequirementRevisionRef"/>
				<xsd:element name="taskResRef" type="taskResourceRef"/>
				<xsd:element name="taskRevRef" type="taskRevisionRef"/>
				<xsd:element name="taskUseRef" type="taskUsageRef"/>
				<xsd:element name="timeLimRef" type="timeLimitRef"/>
				<xsd:element name="usableOnRef" type="usableOnProductVariantRef"/>
				<xsd:element name="wbsRevRef" type="workBreakdownRevisionRef"/>
			</xsd:choice>
			<xsd:element name="upReqRef" type="upgradeRequirementRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="chItavrq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(upReqRef) and not(@uriRef)) or (not(@uidRef) and upReqRef and not(@uriRef)) or (not(@uidRef) and not(upReqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeEmbodimentRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangeEmbodimentRequirement is a Requirement to embody an authorized modification into one or several items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeEmbodimentRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeNotificationRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangeNotification is a [relationship] that identifies an item changed due to the associated ChangeAuthorization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeNotification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="altPartRef" type="alternatePartDefinitionRef"/>
				<xsd:element name="anlysRevRef" type="analysisActivityRevisionRef"/>
				<xsd:element name="beInZoneRef" type="breakdownElementInZoneRef"/>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="beChildRef" type="breakdownElementStructureRef"/>
				<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
				<xsd:element name="bkdnRevRef" type="breakdownRevisionRef"/>
				<xsd:element name="capDefRevRef" type="capabilityDefinitionRevisionRef"/>
				<xsd:element name="cbLocRef" type="circuitBreakerLocationRef"/>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="costBkdnRevRef" type="costBreakdownRevisionRef"/>
				<xsd:element name="allwdPCEfyRef" type="effectiveOnProductConfigurationRef"/>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="fleetRef" type="fleetRef"/>
				<xsd:element name="beHwRealRef" type="hardwareElementPartRealizationRef"/>
				<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
				<xsd:element name="instPartRef" type="installedPartRef"/>
				<xsd:element name="mtrlDefRevRef" type="materialDefinitionRevisionRef"/>
				<xsd:element name="missnDRevRef" type="missionDefinitionRevisionRef"/>
				<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef"/>
				<xsd:element name="pListRevRef" type="partDefinitionPartsListRevisionRef"/>
				<xsd:element name="prfmPRevRef" type="performanceParameterRevisionRef"/>
				<xsd:element name="roleConfRevRef" type="productOperationalRoleConfigurationRevisionRef"/>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="reqRef" type="requirementRef"/>
				<xsd:element name="resSpecRealRef" type="resourceSpecificationRealizationRef"/>
				<xsd:element name="resSpecRevRef" type="resourceSpecificationRevisionRef"/>
				<xsd:element name="secRef" type="securityClassificationRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="partModRef" type="serializedHardwarePartModificationRef"/>
				<xsd:element name="serPartPosRef" type="serializedPartsListPositionRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="servRef" type="serviceRef"/>
				<xsd:element name="beSwRealRef" type="softwareElementPartRealizationRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
				<xsd:element name="subsRevRef" type="substanceDefinitionRevisionRef"/>
				<xsd:element name="substPartRef" type="substitutePartDefinitionRef"/>
				<xsd:element name="trRevRef" type="taskRequirementRevisionRef"/>
				<xsd:element name="taskResRef" type="taskResourceRef"/>
				<xsd:element name="taskRevRef" type="taskRevisionRef"/>
				<xsd:element name="taskUseRef" type="taskUsageRef"/>
				<xsd:element name="timeLimRef" type="timeLimitRef"/>
				<xsd:element name="usableOnRef" type="usableOnProductVariantRef"/>
				<xsd:element name="wbsRevRef" type="workBreakdownRevisionRef"/>
			</xsd:choice>
			<xsd:element name="chgAuthRef" type="changeAuthorizationRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="chg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(chgAuthRef) and not(@uriRef)) or (not(@uidRef) and chgAuthRef and not(@uriRef)) or (not(@uidRef) and not(chgAuthRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequest is a [class] that represents a formal proposal for a modification to a configuration item upon a given baseline.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequest</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="crId" type="changeRequestIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(crId) and not(@uriRef)) or (not(@uidRef) and crId and not(@uriRef)) or (not(@uidRef) and not(crId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestAddedOrRemovedMaterialRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestAddedOrRemovedMaterial is a [relationship] that allows to associate to an item the material that has been added or removed as a consequence of 
    a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestAddedOrRemovedMaterial</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="crRef" type="changeRequestRef"/>
			<xsd:element name="crEnvImpact" type="changeRequestEnvironmentallyImpactedItem"/>
			<xsd:element name="crChngMat" type="changeRequestAddedOrRemovedMaterialIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="crmat[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(crRef) and not(@uriRef)) or (not(@uidRef) and crRef and not(@uriRef)) or (not(@uidRef) and not(crRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestAddedOrRemovedSubstanceRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestAddedOrRemovedSubstance is a [relationship] that allows to associate to an item the substances that have been added or removed as a 
    consequence of a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestAddedOrRemovedSubstance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="crRef" type="changeRequestRef"/>
			<xsd:element name="crEnvImpact" type="changeRequestEnvironmentallyImpactedItem"/>
			<xsd:element name="crChngSubs" type="changeRequestAddedOrRemovedSubstanceIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="crsubs[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(crRef) and not(@uriRef)) or (not(@uidRef) and crRef and not(@uriRef)) or (not(@uidRef) and not(crRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestCauseRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestCause is a [relationship] that allows to associate the underlying cause(s) for a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestCause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="crRef" type="changeRequestRef"/>
			<xsd:element name="crReason" type="changeRequestReasonItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="crcau[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(crRef) and not(@uriRef)) or (not(@uidRef) and crRef and not(@uriRef)) or (not(@uidRef) and not(crRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestConsumptionChangeRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestConsumptionChange is a [relationship] that allows to associate an increase or reduction of an item consumption to the ChangeRequest that 
    caused it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestConsumptionChange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="crRef" type="changeRequestRef"/>
			<xsd:element name="consiRef" type="consumableItemRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="crconschg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(crRef) and not(@uriRef)) or (not(@uidRef) and crRef and not(@uriRef)) or (not(@uidRef) and not(crRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestEmissionChangeRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestEmissionChange is a [relationship] that allows to associate an increase or reduction of a substance emission to the ChangeRequest that caused 
    it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestEmissionChange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="crRef" type="changeRequestRef"/>
			<xsd:element name="subsRef" type="substanceDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cremiss[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(crRef) and not(@uriRef)) or (not(@uidRef) and crRef and not(@uriRef)) or (not(@uidRef) and not(crRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestPartyRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestParty is a [relationship] where a ChangeRequest relates to a Party that in some way is associated with the ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="crRef" type="changeRequestRef"/>
			<xsd:element name="party" type="party"/>
			<xsd:element name="ptyRole" type="changeRequestPartyRole"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="crparty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(crRef) and not(@uriRef)) or (not(@uidRef) and crRef and not(@uriRef)) or (not(@uidRef) and not(crRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestRationaleRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestRationale is a [relationship] that associates a ChangeRequest with a ChangeRequestRationaleItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestRationale</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="crRef" type="changeRequestRef"/>
			<xsd:element name="rtnleItem" type="changeRequestRationaleItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="crs[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(crRef) and not(@uriRef)) or (not(@uidRef) and crRef and not(@uriRef)) or (not(@uidRef) and not(crRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestTargetRef">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestTarget is a [relationship] that associates a ChangeRequest with a ChangeRequestTargetItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:changeRequestTarget</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="crRef" type="changeRequestRef"/>
			<xsd:element name="targItem" type="changeRequestTargetItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="crtgt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(crRef) and not(@uriRef)) or (not(@uidRef) and crRef and not(@uriRef)) or (not(@uidRef) and not(crRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerRef">
		<xsd:annotation>
			<xsd:documentation>
    CircuitBreaker is a [class] that represents an individual circuit breaker identified in the context of a defined Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:circuitBreaker</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="cbId" type="circuitBreakerIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cb[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(cbId) and not(@uriRef)) or (not(@uidRef) and cbId and not(@uriRef)) or (not(@uidRef) and not(cbId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerLocationRef">
		<xsd:annotation>
			<xsd:documentation>
    CircuitBreakerLocation is a [relationship] that identifies the item on which the CircuitBreaker is placed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:circuitBreakerLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="cbRef" type="circuitBreakerRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cbloc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(cbRef) and not(@uriRef)) or (not(@uidRef) and cbRef and not(@uriRef)) or (not(@uidRef) and not(cbRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerSettingRef">
		<xsd:annotation>
			<xsd:documentation>
    CircuitBreakerSetting is a [class] that specifies an individual CircuitBreakerItem that must be in a specific state.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:circuitBreakerSetting</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskId" type="taskIdentifier"/>
			<xsd:element name="revId" type="taskRevisionIdentifier"/>
			<xsd:element name="subtId" type="subtaskIdentifier"/>
			<xsd:element name="settingsId" type="circuitBreakerSettingsIdentifier"/>
			<xsd:element name="settingId" type="circuitBreakerSettingIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cbset[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskId) and not(@uriRef)) or (not(@uidRef) and taskId and not(@uriRef)) or (not(@uidRef) and not(taskId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerSettingsRef">
		<xsd:annotation>
			<xsd:documentation>
    CircuitBreakerSettings is a [class] that identifies a set of CircuitBreakersItems that must be set in specific states.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:circuitBreakerSettings</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskId" type="taskIdentifier"/>
			<xsd:element name="revId" type="taskRevisionIdentifier"/>
			<xsd:element name="subtId" type="subtaskIdentifier"/>
			<xsd:element name="settingsId" type="circuitBreakerSettingsIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cbsets[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskId) and not(@uriRef)) or (not(@uidRef) and taskId and not(@uriRef)) or (not(@uidRef) and not(taskId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="cloudInfrastructureRef">
		<xsd:annotation>
			<xsd:documentation>
    CloudInfrastructure is an Infrastructure that represents a network of remote servers hosted on the Internet and used to store, manage, and process data in 
    place of local servers or personal computers.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:cloudInfrastructure</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrId" type="infrastructureIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrId) and not(@uriRef)) or (not(@uidRef) and infrId and not(@uriRef)) or (not(@uidRef) and not(infrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentRef">
		<xsd:annotation>
			<xsd:documentation>
    Comment is a textual statement about a related item that deals with an issue associated to that item that needs to be addressed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:comment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="cmtId" type="commentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cmt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(cmtId) and not(@uriRef)) or (not(@uidRef) and cmtId and not(@uriRef)) or (not(@uidRef) and not(cmtId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentActionRef">
		<xsd:annotation>
			<xsd:documentation>
    CommentAction is a [relationship] that allows to associate a Comment to one or several Actions performed in response to the Comment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentAction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="cmtRef" type="commentRef"/>
			<xsd:element name="actionRef" type="actionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cmtact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(cmtRef) and not(@uriRef)) or (not(@uidRef) and cmtRef and not(@uriRef)) or (not(@uidRef) and not(cmtRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentPartyRef">
		<xsd:annotation>
			<xsd:documentation>
    CommentParty is a [relationship] defining the association between a Comment and a Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="cmtRef" type="commentRef"/>
			<xsd:element name="party" type="party"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cmtpty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(cmtRef) and not(@uriRef)) or (not(@uidRef) and cmtRef and not(@uriRef)) or (not(@uidRef) and not(cmtRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    CommentRelationship is a [relationship] that defines the association between two different Comments.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:commentRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="cmtRef" type="commentRef"/>
			<xsd:element name="cmtRef" type="commentRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cmtrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(cmtRef) and not(@uriRef)) or (not(@uidRef) and cmtRef and not(@uriRef)) or (not(@uidRef) and not(cmtRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="communicationsNetworkRef">
		<xsd:annotation>
			<xsd:documentation>
    CommunicationsNetwork is an Infrastructure that represents a number of machines, computers and communication lines that allow the communication between 
    different parties or machines.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:communicationsNetwork</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrId" type="infrastructureIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrId) and not(@uriRef)) or (not(@uidRef) and infrId and not(@uriRef)) or (not(@uidRef) and not(infrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    CompetencyDefinition is a [class] that defines measurable or observable knowledge, skills, and attitudes necessary for successful performance by a person 
    in a given context.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:competencyDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="compId" type="competencyDefinitionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="compdef[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(compId) and not(@uriRef)) or (not(@uidRef) and compId and not(@uriRef)) or (not(@uidRef) and not(compId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyDefinitionRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    CompetencyDefinitionRelationship is a [relationship] where one CompetencyDefinition relates to another CompetencyDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:competencyDefinitionRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="compDefRef" type="competencyDefinitionRef"/>
			<xsd:element name="compDefRef" type="competencyDefinitionRef"/>
			<xsd:element name="relType" type="competencyDefinitionRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="compdrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(compDefRef) and not(@uriRef)) or (not(@uidRef) and compDefRef and not(@uriRef)) or (not(@uidRef) and not(compDefRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyFrameworkRef">
		<xsd:annotation>
			<xsd:documentation>
    CompetencyFramework is a [class] that specifies the context within which a CompetencyFrameworkItem is defined.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:competencyFramework</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="frwkName" type="competencyFrameworkName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="compfrwk[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(frwkName) and not(@uriRef)) or (not(@uidRef) and frwkName and not(@uriRef)) or (not(@uidRef) and not(frwkName) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="compliesWithRef">
		<xsd:annotation>
			<xsd:documentation>
    CompliesWith is a [relationship] that allows to associate an item with the PoliciesAndRegulations with which it complies.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:compliesWith</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="dataRelPartRef" type="dataSetAsReleasedRef"/>
				<xsd:element name="docRef" type="documentRef"/>
				<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="dispOperRef" type="itemDisposalOperationRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="projRef" type="projectRef"/>
				<xsd:element name="reqRef" type="requirementRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="servRef" type="serviceRef"/>
				<xsd:element name="wasteDispOpRef" type="wasteDisposalOperationRef"/>
			</xsd:choice>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
			<xsd:element name="polRegRef" type="policiesAndRegulationsRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="compw[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(exConRegRef) and not(@uriRef)) or (not(@uidRef) and exConRegRef and not(@uriRef)) or (not(@uidRef) and not(exConRegRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="computerNetworkRef">
		<xsd:annotation>
			<xsd:documentation>
    ComputerNetwork is an Infrastructure that represents a number of interconnected computers, irrespectively of their location.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:computerNetwork</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrId" type="infrastructureIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrId) and not(@uriRef)) or (not(@uidRef) and infrId and not(@uriRef)) or (not(@uidRef) and not(infrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionInstanceRef">
		<xsd:annotation>
			<xsd:documentation>
    ConditionInstance is a [class] that defines an individual concept or object having the characteristics of a generic ConditionType.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:conditionInstance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="condName" type="conditionTypeName"/>
			<xsd:element name="instId" type="conditionInstanceIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="condi[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(condName) and not(@uriRef)) or (not(@uidRef) and condName and not(@uriRef)) or (not(@uidRef) and not(condName) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionTypeRef">
		<xsd:annotation>
			<xsd:documentation>
    ConditionType is a [class] that defines a concept or an object that needs to be included in applicability statements where the concept or object is not 
    already represented in the data model.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:conditionType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="condName" type="conditionTypeName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="condtype[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(condName) and not(@uriRef)) or (not(@uidRef) and condName and not(@uriRef)) or (not(@uidRef) and not(condName) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionTypeAssertMemberRef">
		<xsd:annotation>
			<xsd:documentation>
    ConditionTypeAssertMember is a [class] that defines a member for a given ConditionType which can be mapped to a Boolean expression and be evaluated to be 
    either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:conditionTypeAssertMember</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="condName" type="conditionTypeName"/>
			<xsd:element name="membName" type="conditionTypeAssertMemberName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="condm[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(condName) and not(@uriRef)) or (not(@uidRef) and condName and not(@uriRef)) or (not(@uidRef) and not(condName) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consequenceRef">
		<xsd:annotation>
			<xsd:documentation>
    Consequence is a class providing information about the consequences of an Event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consequence</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="eventId" type="eventIdentifier"/>
			<xsd:element name="consId" type="consequenceIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="consq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(eventId) and not(@uriRef)) or (not(@uidRef) and eventId and not(@uriRef)) or (not(@uidRef) and not(eventId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumableItemRef">
		<xsd:annotation>
			<xsd:documentation>
    ConsumableItem is a supply item that is consumed and cannot be reused.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consumableItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="itemId" type="consumableItemIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="consi[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(itemId) and not(@uriRef)) or (not(@uidRef) and itemId and not(@uriRef)) or (not(@uidRef) and not(itemId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumptionRef">
		<xsd:annotation>
			<xsd:documentation>
    Consumption is a [relationship] that defines the Product(s) that have been consumed by a SerializedProductVariant as part of an operational period, 
    movement or movement leg.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:consumption</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="infOpRef" type="infrastructureOperatingPeriodRef"/>
				<xsd:element name="mvRef" type="movementRef"/>
				<xsd:element name="movlegRef" type="movementLegRef"/>
				<xsd:element name="oppRef" type="operationalPeriodRef"/>
			</xsd:choice>
			<xsd:element name="consiRef" type="consumableItemRef"/>
			<xsd:element name="consId" type="consumptionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="consp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(consiRef) and not(@uriRef)) or (not(@uidRef) and consiRef and not(@uriRef)) or (not(@uidRef) and not(consiRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containedMaterialRef">
		<xsd:annotation>
			<xsd:documentation>
    ContainedMaterial is a [relationship] that allows to associate an item to the amount of material that it contains.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:containedMaterial</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="hwPartContainerRef" type="hardwarePartContainerRef"/>
				<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="matRef" type="materialRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="contMat[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(matRef) and not(@uriRef)) or (not(@uidRef) and matRef and not(@uriRef)) or (not(@uidRef) and not(matRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containedSubstanceRef">
		<xsd:annotation>
			<xsd:documentation>
    ContainedSubstance is a [relationship] that associates a SubstanceContainingItem with a contained SubstanceDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:containedSubstance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="batchPartRef" type="batchHardwarePartRef"/>
				<xsd:element name="consiRef" type="consumableItemRef"/>
				<xsd:element name="hwPartContainerRef" type="hardwarePartContainerRef"/>
				<xsd:element name="looseWasteRef" type="looseWasteRef"/>
				<xsd:element name="matRef" type="materialRef"/>
				<xsd:element name="mtrlDefRef" type="materialDefinitionRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="wasteContRef" type="wasteContainerRef"/>
			</xsd:choice>
			<xsd:element name="subsRef" type="substanceDefinitionRef"/>
			<xsd:element name="subsRef" type="substanceDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cosubs[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(subsRef) and not(@uriRef)) or (not(@uidRef) and subsRef and not(@uriRef)) or (not(@uidRef) and not(subsRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containerAsDesignedRef">
		<xsd:annotation>
			<xsd:documentation>
    ContainerAsDesigned is a HardwarePartAsDesigned representing a vessel for the storage or transport of items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:containerAsDesigned</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="containerPartRef">
		<xsd:annotation>
			<xsd:documentation>
    ContainerPart is a [relationship] that allows to associate a HardwarePartContainer with one or more HardwarePartAsDesigned that it contains.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:containerPart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="hwPartContainerRef" type="hardwarePartContainerRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="contPartId" type="containerPartIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="contpart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(hwPartContainerRef) and not(@uriRef)) or (not(@uidRef) and hwPartContainerRef and not(@uriRef)) or (not(@uidRef) and not(hwPartContainerRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractRef">
		<xsd:annotation>
			<xsd:documentation>
    Contract is a [class] that represents a binding agreement between two or more parties.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contract</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="contrId" type="contractIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="contr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(contrId) and not(@uriRef)) or (not(@uidRef) and contrId and not(@uriRef)) or (not(@uidRef) and not(contrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractClauseRef">
		<xsd:annotation>
			<xsd:documentation>
    ContractClause is a class that represents specific provision included in a Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractClause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="contrId" type="contractIdentifier"/>
			<xsd:element name="clauseId" type="contractClauseIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="contrc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(contrId) and not(@uriRef)) or (not(@uidRef) and contrId and not(@uriRef)) or (not(@uidRef) and not(contrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractClauseRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    ContractClauseRelationship is a [relationship] where one ContractClause relates to another ContractClause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractClauseRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="contrClauseRef" type="contractClauseRef"/>
			<xsd:element name="contrClauseRef" type="contractClauseRef"/>
			<xsd:element name="slacRef" type="serviceLevelAgreementClauseRef"/>
			<xsd:element name="relType" type="contractClauseRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="contrcr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(contrClauseRef) and not(@uriRef)) or (not(@uidRef) and contrClauseRef and not(@uriRef)) or (not(@uidRef) and not(contrClauseRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractLaborRef">
		<xsd:annotation>
			<xsd:documentation>
    ContractLabor is a [relationship] that identifies labor specified in the context of the defined Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractLabor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="contrClauseRef" type="contractClauseRef"/>
			</xsd:choice>
			<xsd:element name="defComp" type="competencyDefinitionItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="labrate[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(defComp) and not(@uriRef)) or (not(@uidRef) and defComp and not(@uriRef)) or (not(@uidRef) and not(defComp) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractPartyRef">
		<xsd:annotation>
			<xsd:documentation>
    ContractParty is a [relationship] that identifies a Contract stakeholder.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="party" type="legalParty"/>
			<xsd:element name="ptyRole" type="contractPartyRole"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="contrpty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(contrRef) and not(@uriRef)) or (not(@uidRef) and contrRef and not(@uriRef)) or (not(@uidRef) and not(contrRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    ContractRelationship is a [relationship] where one Contract relates to another Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="relType" type="contractRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="contrrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(contrRef) and not(@uriRef)) or (not(@uidRef) and contrRef and not(@uriRef)) or (not(@uidRef) and not(contrRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractSubjectRef">
		<xsd:annotation>
			<xsd:documentation>
    ContractSubject is a [relationship] that identifies an item which is the subject of the Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:contractSubject</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="contrItem" type="contractSubjectItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="contritdet[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(contrRef) and not(@uriRef)) or (not(@uidRef) and contrRef and not(@uriRef)) or (not(@uidRef) and not(contrRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costBreakdownRef">
		<xsd:annotation>
			<xsd:documentation>
    CostBreakdown is a class that represents cost concepts associated with a particular purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costBreakdown</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="budgRef" type="budgetRef"/>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="contrClauseRef" type="contractClauseRef"/>
				<xsd:element name="dispReqRef" type="disposalRequirementRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="projRef" type="projectRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="servRef" type="serviceRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
			</xsd:choice>
			<xsd:element name="costBkdnId" type="costBreakdownIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="costbk[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(costBkdnId) and not(@uriRef)) or (not(@uidRef) and costBkdnId and not(@uriRef)) or (not(@uidRef) and not(costBkdnId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costBreakdownRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    CostBreakdownRevision is a class representing an iteration applied to a CostIBreakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costBreakdownRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="budgRef" type="budgetRef"/>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="contrClauseRef" type="contractClauseRef"/>
				<xsd:element name="dispReqRef" type="disposalRequirementRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="projRef" type="projectRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="servRef" type="serviceRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
			</xsd:choice>
			<xsd:element name="costBkdnId" type="costBreakdownIdentifier"/>
			<xsd:element name="revId" type="costBreakdownRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="costbkrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(costBkdnId) and not(@uriRef)) or (not(@uidRef) and costBkdnId and not(@uriRef)) or (not(@uidRef) and not(costBkdnId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costEntryRef">
		<xsd:annotation>
			<xsd:documentation>
    CostEntry is a class that represents an individual expense made at a specific date for a specific amount that needs to be recorded for accounting purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costEntry</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="costItemId" type="costItemIdentifier"/>
			<xsd:element name="entryId" type="costEntryIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cost[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(costItemId) and not(@uriRef)) or (not(@uidRef) and costItemId and not(@uriRef)) or (not(@uidRef) and not(costItemId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costItemRef">
		<xsd:annotation>
			<xsd:documentation>
    CostItem is a class that represents a generic concept used to group individual expenses for accounting or program management purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:costItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="costItemId" type="costItemIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="costi[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(costItemId) and not(@uriRef)) or (not(@uidRef) and costItemId and not(@uriRef)) or (not(@uidRef) and not(costItemId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="countryRef">
		<xsd:annotation>
			<xsd:documentation>
    Country is a [class] that represents a self-governing political entity, occupying a particular territory.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:country</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="ctryCode" type="countryIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="country[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(ctryCode) and not(@uriRef)) or (not(@uidRef) and ctryCode and not(@uriRef)) or (not(@uidRef) and not(ctryCode) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageRef">
		<xsd:annotation>
			<xsd:documentation>
    Damage is a harm to an item resulting in loss of value or the impairment of usefulness.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="eventId" type="eventIdentifier"/>
			<xsd:element name="damId" type="damageIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dmg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(eventId) and not(@uriRef)) or (not(@uidRef) and eventId and not(@uriRef)) or (not(@uidRef) and not(eventId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageAnalysisRef">
		<xsd:annotation>
			<xsd:documentation>
    DamageAnalysis is an AnalysisActivity that represents the objective for, and outcome of, a damage analysis carried out for the AnalysisCandidateItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageAnalysis</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="anlysType" type="analysisActivityType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="anlysact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(anlysType) and not(@uriRef)) or (not(@uidRef) and anlysType and not(@uriRef)) or (not(@uidRef) and not(anlysType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageAnalysisRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    DamageAnalysisRevision is an AnalysisActivityRevision representing an iteration applied to a DamageAnalysis.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageAnalysisRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="anlysType" type="analysisActivityType"/>
			<xsd:element name="revId" type="analysisActivityRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="anlysrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(anlysType) and not(@uriRef)) or (not(@uidRef) and anlysType and not(@uriRef)) or (not(@uidRef) and not(anlysType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageCharacteristicRef">
		<xsd:annotation>
			<xsd:documentation>
    DamageCharacteristic is a [class] that allows to document the characteristics of a Damage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageCharacteristic</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="eventId" type="eventIdentifier"/>
			<xsd:element name="damId" type="damageIdentifier"/>
			<xsd:element name="charId" type="damageCharacteristicIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dmgchar[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(eventId) and not(@uriRef)) or (not(@uidRef) and eventId and not(@uriRef)) or (not(@uidRef) and not(eventId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    DamageDefinition is a [class] that represents a loss or reduction of functionality due to external causes or use outside specified limits. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="anlysType" type="analysisActivityType"/>
			<xsd:element name="revId" type="analysisActivityRevisionIdentifier"/>
			<xsd:element name="dmgName" type="damageDefinitionName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dmgd[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(anlysType) and not(@uriRef)) or (not(@uidRef) and anlysType and not(@uriRef)) or (not(@uidRef) and not(anlysType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageDefinitionCauseRef">
		<xsd:annotation>
			<xsd:documentation>
    DamageDefinitionCause is a [relationship] where a DamageDefinition relates to a SpecialEventDefinition that in some way is associated with the 
    DamageDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageDefinitionCause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="dmgDefRef" type="damageDefinitionRef"/>
			<xsd:element name="spEvDefRef" type="specialEventDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dmgdcse[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(dmgDefRef) and not(@uriRef)) or (not(@uidRef) and dmgDefRef and not(@uriRef)) or (not(@uidRef) and not(dmgDefRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damageDefinitionImpactRef">
		<xsd:annotation>
			<xsd:documentation>
    DamageDefinitionImpact is a [relationship] that defines a consequence resulting from the identified DamageDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:damageDefinitionImpact</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="dmgDefRef" type="damageDefinitionRef"/>
			<xsd:element name="fModeRef" type="failureModeRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dmgdimpct[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(dmgDefRef) and not(@uriRef)) or (not(@uidRef) and dmgDefRef and not(@uriRef)) or (not(@uidRef) and not(dmgDefRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataRequestRef">
		<xsd:annotation>
			<xsd:documentation>
    DataRequest is a [class] that allows an exchange party to request a specific data set.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataRequest</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="datareq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataRequestByClassNameRef">
		<xsd:annotation>
			<xsd:documentation>
    DataRequestByClassName is a [class] that allows an exchange party to request a specific data set by using the class name
    

   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataRequestByClassName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="datareq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataRequestByIdentifierRef">
		<xsd:annotation>
			<xsd:documentation>
    DataRequestByIdentifier is a [class] that allows an exchange party to request a specific data set by using one identifier.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataRequestByIdentifier</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="datareq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataRequestByUseCaseNameRef">
		<xsd:annotation>
			<xsd:documentation>
    DataRequestByUseCaseName is a [class] that allows an exchange party to request a specific data set by using the usecase name
    

   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataRequestByUseCaseName</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="datareq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataSetAsDesignedRef">
		<xsd:annotation>
			<xsd:documentation>
    DataSetAsDesigned is a class representing a data structure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataSetAsDesigned</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataSetAsReleasedRef">
		<xsd:annotation>
			<xsd:documentation>
    DataSetAsReleased is a class representing a set of actual data that are structured as a DataSetAsDesigned.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataSetAsReleased</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partDefinitionIdentifier"/>
			<xsd:element name="swRelId" type="softwarePartAsReleasedIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="relswpart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="dataSetAssociatedWithRef">
		<xsd:annotation>
			<xsd:documentation>
    DataSetAssociatedWith is a [relationship] that allows to associate a DataSetAsDesigned to a PartAsDesigned
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:dataSetAssociatedWith</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="dataPartRef" type="dataSetAsDesignedRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="datarel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(dataPartRef) and not(@uriRef)) or (not(@uidRef) and dataPartRef and not(@uriRef)) or (not(@uidRef) and not(dataPartRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="decisionTreeTemplateRef">
		<xsd:annotation>
			<xsd:documentation>
    DecisionTreeTemplate is a [class] that enables the representation of a decision process including a set of defined steps and binary decisions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:decisionTreeTemplate</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="dcsnTmplId" type="decisionTreeTemplateIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dcsnt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(dcsnTmplId) and not(@uriRef)) or (not(@uidRef) and dcsnTmplId and not(@uriRef)) or (not(@uidRef) and not(dcsnTmplId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="degradationMechanismRef">
		<xsd:annotation>
			<xsd:documentation>
    DegradationMechanism is a class that represents a physical, chemical or other process that ultimately leads to a damage or failure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:degradationMechanism</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="degrMechName" type="degradationMechanismName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="degrmech[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(degrMechName) and not(@uriRef)) or (not(@uidRef) and degrMechName and not(@uriRef)) or (not(@uidRef) and not(degrMechName) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="degradationMechanismAcceptanceCriteriaRef">
		<xsd:annotation>
			<xsd:documentation>
    DegradationMechanismAcceptanceCriteria is a class that represents the acceptable degradation that can be applied to a feature so that the part remains 
    operational.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:degradationMechanismAcceptanceCriteria</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="accptCritId" type="partFeatureDegradationMechanismAcceptanceCriteriaIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="feataccptcrit[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(accptCritId) and not(@uriRef)) or (not(@uidRef) and accptCritId and not(@uriRef)) or (not(@uidRef) and not(accptCritId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="derivedChangeRequestRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    DerivedChangeRequestRequirement is a [relationship] that allows to associate a Requirement or more of them to an existing ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:derivedChangeRequestRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="crRef" type="changeRequestRef"/>
			<xsd:element name="reqRef" type="requirementRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dercrreq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(crRef) and not(@uriRef)) or (not(@uidRef) and crRef and not(@uriRef)) or (not(@uidRef) and not(crRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMeanCapabilityRef">
		<xsd:annotation>
			<xsd:documentation>
    DetectionMeanCapability is a class that identifies the capability to detect a failure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:detectionMeanCapability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
			</xsd:choice>
			<xsd:element name="capId" type="detectionMeanCapabilityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="detmecap[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(capId) and not(@uriRef)) or (not(@uidRef) and capId and not(@uriRef)) or (not(@uidRef) and not(capId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMechanismRef">
		<xsd:annotation>
			<xsd:documentation>
    DetectionMechanism is a class that allows to define the mechanism by means of which a failure is detected.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:detectionMechanism</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
			</xsd:choice>
			<xsd:element name="capId" type="detectionMeanCapabilityIdentifier"/>
			<xsd:element name="detMecid" type="detectionMechanismIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="detmec[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(capId) and not(@uriRef)) or (not(@uidRef) and capId and not(@uriRef)) or (not(@uidRef) and not(capId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="digitalFileRef">
		<xsd:annotation>
			<xsd:documentation>
    DigitalFile is a [class] that provides the identification of data stored on an electronic device that can be interpreted by a computer.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:digitalFile</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="filePath" type="digitalFileLocator"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="file[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(filePath) and not(@uriRef)) or (not(@uidRef) and filePath and not(@uriRef)) or (not(@uidRef) and not(filePath) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="digitalFileReferenceRef">
		<xsd:annotation>
			<xsd:documentation>
    DigitalFileReference is a [relationship] that allows a DigitalFile to reference a DigitalFileReferencedItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:digitalFileReference</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fileRef" type="digitalFileRef"/>
			<xsd:element name="refItem" type="digitalFileReferencedItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fileref[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fileRef) and not(@uriRef)) or (not(@uidRef) and fileRef and not(@uriRef)) or (not(@uidRef) and not(fileRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="discreteTimeLimitRef">
		<xsd:annotation>
			<xsd:documentation>
    DiscreteTimeLimit is a TimeLimit that is distinct, where its next possible occurrence cannot be scheduled.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:discreteTimeLimit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="timelim[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalLocationRef">
		<xsd:annotation>
			<xsd:documentation>
    DisposalLocation is a [relationship] that allows to associate the different locations involved in a DisposalRequirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:disposalLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="dispReqRef" type="disposalRequirementRef"/>
			<xsd:element name="dispSite" type="disposalSite"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="disploc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(dispReqRef) and not(@uriRef)) or (not(@uidRef) and dispReqRef and not(@uriRef)) or (not(@uidRef) and not(dispReqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    DisposalRequirement is a Requirement to proceed with the disposal of an item, waste or hazardous material.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:disposalRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalTransportRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    DisposalTransportRequirement is a [relationship] that a allows to associate a DisposalRequirement with a TransportRequirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:disposalTransportRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="dispReqRef" type="disposalRequirementRef"/>
			<xsd:element name="transReqRef" type="transportRequirementRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="disptrreq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(dispReqRef) and not(@uriRef)) or (not(@uidRef) and dispReqRef and not(@uriRef)) or (not(@uidRef) and not(dispReqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentRef">
		<xsd:annotation>
			<xsd:documentation>
    Document is a [class] that represents a compiled set of information that serves a purpose. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:document</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentIssueRef">
		<xsd:annotation>
			<xsd:documentation>
    DocumentIssue is a [class] that represents a specific release of a Document
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentIssue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
			<xsd:element name="docIssId" type="documentIssueIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dociss[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentPartyRef">
		<xsd:annotation>
			<xsd:documentation>
    DocumentParty is a [relationship] where a Document relates to a DocumentStakeholderParty that in some way is associated with the Document.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:documentParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="docRef" type="documentRef"/>
				<xsd:element name="docIssRef" type="documentIssueRef"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="docRef" type="documentRef"/>
			</xsd:choice>
			<xsd:element name="party" type="documentStakeholderParty"/>
			<xsd:element name="ptyRole" type="documentPartyRole"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="docp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(party) and not(@uriRef)) or (not(@uidRef) and party and not(@uriRef)) or (not(@uidRef) and not(party) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="downTimePeriodRef">
		<xsd:annotation>
			<xsd:documentation>
    DownTimePeriod is a class representing a planned or actual downtime for a SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:downTimePeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="prodId" type="productDefinitionIdentifier"/>
			<xsd:element name="prodVarId" type="productVariantDefinitionIdentifier"/>
			<xsd:element name="serPVId" type="serializedProductVariantIdentifier"/>
			<xsd:element name="downId" type="downTimeIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dwntp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(prodId) and not(@uriRef)) or (not(@uidRef) and prodId and not(@uriRef)) or (not(@uidRef) and not(prodId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="effectiveOnProductConfigurationRef">
		<xsd:annotation>
			<xsd:documentation>
    EffectiveOnProductConfiguration is a [relationship] that identifies that a EffectiveOnProductConfigurationItem, included in the Breakdown for the overall 
    Product, is effective in the associated AllowedProductConfigurationItem. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:effectiveOnProductConfiguration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="dispReqRef" type="disposalRequirementRef"/>
			<xsd:choice>
				<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
				<xsd:element name="beHwRealRef" type="hardwareElementPartRealizationRef"/>
				<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef"/>
				<xsd:element name="pListRevRef" type="partDefinitionPartsListRevisionRef"/>
				<xsd:element name="beSwRealRef" type="softwareElementPartRealizationRef"/>
			</xsd:choice>
			<xsd:element name="allwdPCItem" type="allowedProductConfigurationItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="iipc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(dispReqRef) and not(@uriRef)) or (not(@uidRef) and dispReqRef and not(@uriRef)) or (not(@uidRef) and not(dispReqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRef">
		<xsd:annotation>
			<xsd:documentation>
    Environment is a class that represents the actual environment in which the Product operation or maintenance takes place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="envId" type="environmentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="env[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(envId) and not(@uriRef)) or (not(@uidRef) and envId and not(@uriRef)) or (not(@uidRef) and not(envId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentDefinition is a [class] that specifies the circumstances, objects, events and/or conditions by which something can be surrounded and that 
    influence the performance of an associated item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="envId" type="environmentDefinitionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="envdef[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(envId) and not(@uriRef)) or (not(@uidRef) and envId and not(@uriRef)) or (not(@uidRef) and not(envId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionCharacteristicRef">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentDefinitionCharacteristic is a [class] that represents a measurable or observable characteristic  for a circumstance, object, event or condition 
    that is significant to the EnvironmentDefinition. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionCharacteristic</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="envId" type="environmentDefinitionIdentifier"/>
			<xsd:element name="revId" type="environmentDefinitionRevisionIdentifier"/>
			<xsd:element name="charName" type="environmentDefinitionCharacteristicName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="envdch[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(envId) and not(@uriRef)) or (not(@uidRef) and envId and not(@uriRef)) or (not(@uidRef) and not(envId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentDefinitionRelationship is a [relationship] where one EnvironmentDefinition relates to another EnvironmentDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="envDefRef" type="environmentDefinitionRef"/>
			<xsd:element name="envDefRef" type="environmentDefinitionRef"/>
			<xsd:element name="relType" type="environmentDefinitionRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="envdrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(envDefRef) and not(@uriRef)) or (not(@uidRef) and envDefRef and not(@uriRef)) or (not(@uidRef) and not(envDefRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentDefinitionRevision is a [class] representing an iteration applied to an EnvironmentDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentDefinitionRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="envId" type="environmentDefinitionIdentifier"/>
			<xsd:element name="revId" type="environmentDefinitionRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="envdrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(envId) and not(@uriRef)) or (not(@uidRef) and envId and not(@uriRef)) or (not(@uidRef) and not(envId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentRelationship is a [relationship] that allows associations between two different Environments to be defined.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="envRef" type="environmentRef"/>
			<xsd:element name="envRef" type="environmentRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="envrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(envRef) and not(@uriRef)) or (not(@uidRef) and envRef and not(@uriRef)) or (not(@uidRef) and not(envRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentRevision is a [class] representing an iteration applied to an Environment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:environmentRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="envId" type="environmentIdentifier"/>
			<xsd:element name="envRevId" type="environmentRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="envrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(envId) and not(@uriRef)) or (not(@uidRef) and envId and not(@uriRef)) or (not(@uidRef) and not(envId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="equipmentOperationRef">
		<xsd:annotation>
			<xsd:documentation>
    EquipmentOperation is a [relationship] that defines which Party has operated a SerializedHardwarePart during a specific time period.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:equipmentOperation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="party" type="party"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="eqop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPartRef) and not(@uriRef)) or (not(@uidRef) and serialPartRef and not(@uriRef)) or (not(@uidRef) and not(serialPartRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="equipmentOwnerRef">
		<xsd:annotation>
			<xsd:documentation>
    EquipmentOwner is a [relationship] defining who and to what extent is the equipment owner during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:equipmentOwner</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="party" type="party"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="eqown[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPartRef) and not(@uriRef)) or (not(@uidRef) and serialPartRef and not(@uriRef)) or (not(@uidRef) and not(serialPartRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByAssertionOfClassInstanceRef">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationByAssertionOfClassInstance is an EvaluationCriteria that identifies a class instance to be used as an assert item and be mapped to a Boolean 
    expression which can be evaluated to be either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:evaluationByAssertionOfClassInstance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByAssertionOfConditionRef">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationByAssertionOfCondition is an EvaluationCriteria that identifies a combination of a defined condition and a defined value to be used as an assert 
    item and be mapped to a Boolean expression which can be evaluated to be either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:evaluationByAssertionOfCondition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByAssertionOfDateRangeRef">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationByAssertionOfDateRange is an EvaluationCriteria that specifies a date range to be asserted and be mapped to a Boolean expression which can be 
    evaluated to be either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:evaluationByAssertionOfDateRange</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByAssertionOfSerializedItemsRef">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationByAssertionOfSerializedItems is an EvaluationCriteria that identifies a class instance together with an associated serial number range to be used 
    as an assert item and be mapped to a Boolean expression which can be evaluated to be either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:evaluationByAssertionOfSerializedItems</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByNestedApplicabilityStatementRef">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationByNestedApplicabilityStatement is an EvaluationCriteria that enables an ApplicabilityStatement to be reused as part of this EvaluationCriteria.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:evaluationByNestedApplicabilityStatement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationByNestedExpressionRef">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationByNestedExpression is an EvaluationCriteria that defines a Boolean expression between additional EvaluationCriteria that can be evaluated to 
    either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:evaluationByNestedExpression</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="evaluationCriteriaRef">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationCriteria is a [class] that defines conditions that can be mapped to a Boolean expression which can be evaluated to be either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:evaluationCriteria</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventRef">
		<xsd:annotation>
			<xsd:documentation>
    Event is an important happening or occurrence at a specific point in time that requires to be documented or recorded.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:event</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="eventId" type="eventIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(eventId) and not(@uriRef)) or (not(@uidRef) and eventId and not(@uriRef)) or (not(@uidRef) and not(eventId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventAffectedBreakdownElementRef">
		<xsd:annotation>
			<xsd:documentation>
    EventAffectedBreakdownElement is a [relationship] that allows to associate an Event to the BreakdownElements affected by it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventAffectedBreakdownElement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="evRef" type="eventRef"/>
			<xsd:element name="beRef" type="breakdownElementRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="evabe[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(evRef) and not(@uriRef)) or (not(@uidRef) and evRef and not(@uriRef)) or (not(@uidRef) and not(evRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventExplanationRef">
		<xsd:annotation>
			<xsd:documentation>
    EventExplanation is a [relationship] that allows to associate an Event to the ExplanatoryFactors that explain it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventExplanation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="evRef" type="eventRef"/>
			<xsd:element name="expfRef" type="explanatoryFactorRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="evex[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(evRef) and not(@uriRef)) or (not(@uidRef) and evRef and not(@uriRef)) or (not(@uidRef) and not(evRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    EventRelationship is a [relationship] describing the association between two different events.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="evRef" type="eventRef"/>
			<xsd:element name="evRef" type="eventRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="evr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(evRef) and not(@uriRef)) or (not(@uidRef) and evRef and not(@uriRef)) or (not(@uidRef) and not(evRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventRelationshipItemRef">
		<xsd:annotation>
			<xsd:documentation>
    EventRelationshipItem is a [relationship] that allows to associate an Event to an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventRelationshipItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="evRef" type="eventRef"/>
			<xsd:element name="evItem" type="eventItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="evrelitem[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(evRef) and not(@uriRef)) or (not(@uidRef) and evRef and not(@uriRef)) or (not(@uidRef) and not(evRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventReporterRef">
		<xsd:annotation>
			<xsd:documentation>
    EventReporter is a [relationship] that permits to associate an event to the Party that has reported that Event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventReporter</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="evRef" type="eventRef"/>
			<xsd:element name="party" type="party"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="evntrep[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(evRef) and not(@uriRef)) or (not(@uidRef) and evRef and not(@uriRef)) or (not(@uidRef) and not(evRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventThresholdDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    EventThresholdDefinition is a ThresholdDefinition that is driven by occurrences of related TimeLimitEventItems.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:eventThresholdDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="thres[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="explanatoryFactorRef">
		<xsd:annotation>
			<xsd:documentation>
    ExplanatoryFactor is a class that provides information about the factor that caused an Event.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:explanatoryFactor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="efId" type="explanatoryFactorIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="expf[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(efId) and not(@uriRef)) or (not(@uidRef) and efId and not(@uriRef)) or (not(@uidRef) and not(efId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlLicenseRef">
		<xsd:annotation>
			<xsd:documentation>
    ExportControlLicense is a [class] representing the authorization to one or more parties to export item(s) under the terms of an ExportControlRegulation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlLicense</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="licId" type="exportControlLicenseIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="exconli[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(licId) and not(@uriRef)) or (not(@uidRef) and licId and not(@uriRef)) or (not(@uidRef) and not(licId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlLicenseItemRef">
		<xsd:annotation>
			<xsd:documentation>
    ExportControlLicenseItem is a [relationship] that associates an ExportControlLicense to the export controlled items to which this license applies.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlLicenseItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="expContrLicRef" type="exportControlLicenseRef"/>
			<xsd:element name="expContrItem" type="exportControlledItem"/>
			<xsd:element name="licItemId" type="exportControlLicenseItemidentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="exconliit[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(expContrLicRef) and not(@uriRef)) or (not(@uidRef) and expContrLicRef and not(@uriRef)) or (not(@uidRef) and not(expContrLicRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlPartyRef">
		<xsd:annotation>
			<xsd:documentation>
    ExportControlParty is a [relationship] that associates an ExportControlLicense to the Organization to which it applies or that control it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="expContrLicRef" type="exportControlLicenseRef"/>
			<xsd:element name="orgRef" type="organizationRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="exconpty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(expContrLicRef) and not(@uriRef)) or (not(@uidRef) and expContrLicRef and not(@uriRef)) or (not(@uidRef) and not(expContrLicRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlRegulationRef">
		<xsd:annotation>
			<xsd:documentation>
    ExportControlRegulation is a legal document that defines export control restrictions to one or several items or item categories.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlRegulation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlRequirementAppliedToCountryRef">
		<xsd:annotation>
			<xsd:documentation>
    ExportControlRequirementAppliedToCountry is a [relationship] that defines to which countries an ExportControlRegulation is applied.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:exportControlRequirementAppliedToCountry</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
			<xsd:element name="countryRef" type="countryRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="exconreqco[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(exConRegRef) and not(@uriRef)) or (not(@uidRef) and exConRegRef and not(@uriRef)) or (not(@uidRef) and not(exConRegRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="expressionEvaluationRef">
		<xsd:annotation>
			<xsd:documentation>
    ExpressionEvaluation is a Boolean expression that can be evaluated to be either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:expressionEvaluation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="expEvalId" type="expressionEvaluationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="expev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(expEvalId) and not(@uriRef)) or (not(@uidRef) and expEvalId and not(@uriRef)) or (not(@uidRef) and not(expEvalId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="externalDocumentRef">
		<xsd:annotation>
			<xsd:documentation>
    ExternalDocument is a specialization of class Document, and represents all documents that do not have a specialied class.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:externalDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityRef">
		<xsd:annotation>
			<xsd:documentation>
    Facility is a [class]that represents a physically limited infrastructure which exists, or is intended to be built or installed, and is established to serve 
    a particular purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facility</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fcltyId" type="facilityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fclty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fcltyId) and not(@uriRef)) or (not(@uidRef) and fcltyId and not(@uriRef)) or (not(@uidRef) and not(fcltyId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityLocationRef">
		<xsd:annotation>
			<xsd:documentation>
    FacilityLocation is a [relationship] that defines the past, present or future Location for the Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="locItem" type="locationItem"/>
			<xsd:element name="fcltyLocId" type="facilityLocationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fcltyloc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(facilityRef) and not(@uriRef)) or (not(@uidRef) and facilityRef and not(@uriRef)) or (not(@uidRef) and not(facilityRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityOperatorRef">
		<xsd:annotation>
			<xsd:documentation>
    FacilityOperator is a [relationship] that identifies the party responsible for running the Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="operator" type="facilityOperatorItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fcltyop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(facilityRef) and not(@uriRef)) or (not(@uidRef) and facilityRef and not(@uriRef)) or (not(@uidRef) and not(facilityRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityOwnerRef">
		<xsd:annotation>
			<xsd:documentation>
    FacilityOwner is a [relationship] that defines the total or partial ownership of a facility by a specific party during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityOwner</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="party" type="party"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="facown[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(facilityRef) and not(@uriRef)) or (not(@uidRef) and facilityRef and not(@uriRef)) or (not(@uidRef) and not(facilityRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    FacilityRelationship is a [relationship] where one Facility relates to another Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:facilityRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="relType" type="facilityRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fcltyrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(facilityRef) and not(@uriRef)) or (not(@uidRef) and facilityRef and not(@uriRef)) or (not(@uidRef) and not(facilityRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureDetectionRef">
		<xsd:annotation>
			<xsd:documentation>
    FailureDetection is a [relationship] that allows to define which DetectionMechanism is capable of detecting a specific Failure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureDetection</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="detmecRef" type="detectionMechanismRef"/>
			<xsd:element name="fail" type="failure"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fd[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(detmecRef) and not(@uriRef)) or (not(@uidRef) and detmecRef and not(@uriRef)) or (not(@uidRef) and not(detmecRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeRef">
		<xsd:annotation>
			<xsd:documentation>
    FailureMode is a [class] that defines a functional consequence of an unacceptable state of the AnalysisActivityItem. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureMode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="anlysType" type="analysisActivityType"/>
			<xsd:element name="revId" type="analysisActivityRevisionIdentifier"/>
			<xsd:element name="fModeId" type="failureModeIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fmode[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(anlysType) and not(@uriRef)) or (not(@uidRef) and anlysType and not(@uriRef)) or (not(@uidRef) and not(anlysType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeAnalysisRef">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeAnalysis is a [class] that represents failure modes, effects and criticality identified for the associated AnalysisActivityItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeAnalysis</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="anlysType" type="analysisActivityType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="anlysact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(anlysType) and not(@uriRef)) or (not(@uidRef) and anlysType and not(@uriRef)) or (not(@uidRef) and not(anlysType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeAnalysisRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeAnalysisRevision is a [class] representing an iteration applied to a FailureModeAnalysis.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeAnalysisRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="anlysType" type="analysisActivityType"/>
			<xsd:element name="revId" type="analysisActivityRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="anlysrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(anlysType) and not(@uriRef)) or (not(@uidRef) and anlysType and not(@uriRef)) or (not(@uidRef) and not(anlysType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCauseRef">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeCause is a [class] that specifies the physical or chemical process(es) that is the reason for the FailureMode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeCause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="anlysType" type="analysisActivityType"/>
			<xsd:element name="revId" type="analysisActivityRevisionIdentifier"/>
			<xsd:element name="fModeId" type="failureModeIdentifier"/>
			<xsd:element name="causeId" type="failureModeCauseIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fmcse[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(anlysType) and not(@uriRef)) or (not(@uidRef) and anlysType and not(@uriRef)) or (not(@uidRef) and not(anlysType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCauseItemRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeCauseItemRelationship is a [relationship] where a FailureModeCause relates to the FailureModeCauseItem that in some way is associated with the 
    FailureModeCause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeCauseItemRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fModeCauseRef" type="failureModeCauseRef"/>
			<xsd:element name="causeItem" type="failureModeCauseItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fmcserel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fModeCauseRef) and not(@uriRef)) or (not(@uidRef) and fModeCauseRef and not(@uriRef)) or (not(@uidRef) and not(fModeCauseRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCompensatingProvisionRef">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeCompensatingProvision is a [class&gt; that represents actions taken to negate or reduce the effect of a failure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeCompensatingProvision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="anlysType" type="analysisActivityType"/>
			<xsd:element name="revId" type="analysisActivityRevisionIdentifier"/>
			<xsd:element name="fModeId" type="failureModeIdentifier"/>
			<xsd:element name="compId" type="failureModeCompensatingProvisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fmodecpr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(anlysType) and not(@uriRef)) or (not(@uidRef) and anlysType and not(@uriRef)) or (not(@uidRef) and not(anlysType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeEffectRef">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeEffect is a [class] that defines the consequences of an identified FailureMode on the operation, function, or status for the referred item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeEffect</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="anlysType" type="analysisActivityType"/>
			<xsd:element name="revId" type="analysisActivityRevisionIdentifier"/>
			<xsd:element name="fModeId" type="failureModeIdentifier"/>
			<xsd:element name="efctName" type="failureModeEffectName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fmefct[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(anlysType) and not(@uriRef)) or (not(@uidRef) and anlysType and not(@uriRef)) or (not(@uidRef) and not(anlysType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeEffectItemRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeEffectItemRelationship is a [relationship] where a FailureModeEffect relates to the FailureModeEffectItem that is affected by the FailureMode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:failureModeEffectItemRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fModeEfctRef" type="failureModeEffectRef"/>
			<xsd:element name="efctItem" type="failureModeEffectItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="efctrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fModeEfctRef) and not(@uriRef)) or (not(@uidRef) and fModeEfctRef and not(@uriRef)) or (not(@uidRef) and not(fModeEfctRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="faultRef">
		<xsd:annotation>
			<xsd:documentation>
    Fault represents an unidentified anomalous behavior that occurred on a specific item at a specific date.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fault</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="faultId" type="faultIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="eqflt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(faultId) and not(@uriRef)) or (not(@uidRef) and faultId and not(@uriRef)) or (not(@uidRef) and not(faultId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="faultCauseRef">
		<xsd:annotation>
			<xsd:documentation>
    FaultCause is a [relationship] that allows to associate a Fault to its underlying cause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:faultCause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="eqfltRef" type="faultRef"/>
			<xsd:element name="fail" type="failure"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fltcau[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(eqfltRef) and not(@uriRef)) or (not(@uidRef) and eqfltRef and not(@uriRef)) or (not(@uidRef) and not(eqfltRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="faultSymptomRef">
		<xsd:annotation>
			<xsd:documentation>
    FaultSymptom is a [class] that represents an indication of the existence of a Fault.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:faultSymptom</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="faultId" type="faultIdentifier"/>
			<xsd:element name="sympId" type="faultSymptomIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fltsym[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(faultId) and not(@uriRef)) or (not(@uidRef) and faultId and not(@uriRef)) or (not(@uidRef) and not(faultId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetRef">
		<xsd:annotation>
			<xsd:documentation>
    Fleet is a [class] representing a group of SerializedProductVariants that move together, are engaged in the same activity, belong to a same owner or are 
    operated by a same organization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleet</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fleetId" type="fleetIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="flt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fleetId) and not(@uriRef)) or (not(@uidRef) and fleetId and not(@uriRef)) or (not(@uidRef) and not(fleetId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetBasedAtRef">
		<xsd:annotation>
			<xsd:documentation>
    FleetBasedAt is a [relationship] that indicates the location at which as Fleet is based at a specific point in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetBasedAt</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="opBaseRef" type="operatingBaseRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fltbase[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fleetRef) and not(@uriRef)) or (not(@uidRef) and fleetRef and not(@uriRef)) or (not(@uidRef) and not(fleetRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetOperatedByRef">
		<xsd:annotation>
			<xsd:documentation>
    FleetOperatedBy is a [relationship] that allows to assign an Operator to a Fleet during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetOperatedBy</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="fleetOp" type="fleetOperator"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fltop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fleetRef) and not(@uriRef)) or (not(@uidRef) and fleetRef and not(@uriRef)) or (not(@uidRef) and not(fleetRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetOperatesAtLocationRef">
		<xsd:annotation>
			<xsd:documentation>
    FleetOperatesAtLocation is a [relationship] that indicates the location at which as Fleet operates at a specific point in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetOperatesAtLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fltoploc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fleetRef) and not(@uriRef)) or (not(@uidRef) and fleetRef and not(@uriRef)) or (not(@uidRef) and not(fleetRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetPlanningRef">
		<xsd:annotation>
			<xsd:documentation>
    FleetPlanning is a class representing the planned usage of a fleet during a specified period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetPlanning</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="planId" type="fleetPlanningIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fltpl[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(planId) and not(@uriRef)) or (not(@uidRef) and planId and not(@uriRef)) or (not(@uidRef) and not(planId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    FleetRelationship is a [relationship] that indicates how two Fleets are related with each other.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fltrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fleetRef) and not(@uriRef)) or (not(@uidRef) and fleetRef and not(@uriRef)) or (not(@uidRef) and not(fleetRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    FleetRequirement is a Requirement (need) that a fleet must comply with.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskRef">
		<xsd:annotation>
			<xsd:documentation>
    FleetTask is a  planned activity to be carried out by a SerializedProductVariant as part of the activities that the fleet has to perform.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskId" type="fleetTaskIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="flttsk[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskId) and not(@uriRef)) or (not(@uidRef) and taskId and not(@uriRef)) or (not(@uidRef) and not(taskId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskCancellationNoticeRef">
		<xsd:annotation>
			<xsd:documentation>
    FleetTaskCancellationNotice is a Document published by an Operator to cancel a FleetTask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTaskCancellationNotice</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="operOrgRef" type="operatorOrganizationRef"/>
				<xsd:element name="operPersRef" type="operatorPersonRef"/>
			</xsd:choice>
			<xsd:element name="noticeId" type="fleetTaskCancellationNoticeIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fltskcn[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(noticeId) and not(@uriRef)) or (not(@uidRef) and noticeId and not(@uriRef)) or (not(@uidRef) and not(noticeId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskCargoRef">
		<xsd:annotation>
			<xsd:documentation>
    FleetTaskCargo is a [relationship] that allows to associate a CargoItem to a FleetTask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTaskCargo</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fltTskRef" type="fleetTaskRef"/>
			<xsd:element name="cargoRef" type="cargoItemRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="flttskc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fltTskRef) and not(@uriRef)) or (not(@uidRef) and fltTskRef and not(@uriRef)) or (not(@uidRef) and not(fltTskRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetTaskListRef">
		<xsd:annotation>
			<xsd:documentation>
    FleetTaskList is a [relationship] that defines which FleetTasks are performed by which Fleets for a specific FleetPlanning.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:fleetTaskList</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="fltTskRef" type="fleetTaskRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="flttsklst[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fleetRef) and not(@uriRef)) or (not(@uidRef) and fleetRef and not(@uriRef)) or (not(@uidRef) and not(fleetRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="geographicalAreaRef">
		<xsd:annotation>
			<xsd:documentation>
    GeographicalArea is a [class] that represents a particular extent of space.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:geographicalArea</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="areaName" type="geographicalAreaName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="geoar[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(areaName) and not(@uriRef)) or (not(@uidRef) and areaName and not(@uriRef)) or (not(@uidRef) and not(areaName) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="globalPositionRef">
		<xsd:annotation>
			<xsd:documentation>
    GlobalPosition is a [class] that identifies a point in space by a set of coordinates.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:globalPosition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="lat" type="latitude"/>
			<xsd:element name="long" type="longitude"/>
			<xsd:element name="alt" type="altitude"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="globpos[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(lat) and not(@uriRef)) or (not(@uidRef) and lat and not(@uriRef)) or (not(@uidRef) and not(lat) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementRef">
		<xsd:annotation>
			<xsd:documentation>
    HardwareElement is a BreakdownElement that is realized as a HardwarePartDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwareElement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beId" type="breakdownElementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="be[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beId) and not(@uriRef)) or (not(@uidRef) and beId and not(@uriRef)) or (not(@uidRef) and not(beId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementAttachingConnectorRef">
		<xsd:annotation>
			<xsd:documentation>
    HardwareElementAttachingConnector is a [class] that specifies a position on the HardwareElement which can be used to attach the 
    HardwareElementAttachingConnector  to another HardwareElement with a defined HardwareElementAttachmentSlot.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwareElementAttachingConnector</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beId" type="breakdownElementIdentifier"/>
			<xsd:element name="revId" type="breakdownElementRevisionIdentifier"/>
			<xsd:element name="connId" type="hardwareElementAttachmentConnectorIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="behwconn[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beId) and not(@uriRef)) or (not(@uidRef) and beId and not(@uriRef)) or (not(@uidRef) and not(beId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementAttachmentSlotRef">
		<xsd:annotation>
			<xsd:documentation>
    HardwareElementAttachmentSlot is a [class] that specifies a position on the HardwareElement where another HardwareElement with a defined 
    HardwareElementAttachingConnector can be attached.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwareElementAttachmentSlot</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beId" type="breakdownElementIdentifier"/>
			<xsd:element name="revId" type="breakdownElementRevisionIdentifier"/>
			<xsd:element name="slotId" type="hardwareElementAttachmentSlotIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="behwslot[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beId) and not(@uriRef)) or (not(@uidRef) and beId and not(@uriRef)) or (not(@uidRef) and not(beId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementPartRealizationRef">
		<xsd:annotation>
			<xsd:documentation>
    HardwareElementPartRealization is a [relationship] where a HardwareElementRevision relates to an instance of HardwarePartDefinition which fulfills the 
    HardwareElement specification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwareElementPartRealization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beHwRevRef" type="hardwareElementRevisionRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="hwr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beHwRevRef) and not(@uriRef)) or (not(@uidRef) and beHwRevRef and not(@uriRef)) or (not(@uidRef) and not(beHwRevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwareElementRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    HardwareElementRevision is a BreakdownElementRevision representing an iteration applied to a HardwareElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwareElementRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beId" type="breakdownElementIdentifier"/>
			<xsd:element name="revId" type="breakdownElementRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ber[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beId) and not(@uriRef)) or (not(@uidRef) and beId and not(@uriRef)) or (not(@uidRef) and not(beId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartContainerRef">
		<xsd:annotation>
			<xsd:documentation>
    HardwarePartContainer represents a container holding one or several similar HardwareParts that are not managed individually.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartContainer</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="hwPartContId" type="hardwarePartContainerIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="hwptcont[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(hwPartContId) and not(@uriRef)) or (not(@uidRef) and hwPartContId and not(@uriRef)) or (not(@uidRef) and not(hwPartContId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="hardwarePartDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    HardwarePartDefinition is a PartDefinition that is to be realized as physical items, including non-countable material
    

   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:hardwarePartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="indicatedFaultSymptomRef">
		<xsd:annotation>
			<xsd:documentation>
    IndicatedFaultSymptom is a [class] that represents an indication of the existence of a Fault by some measuring or monitoring device.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:indicatedFaultSymptom</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="faultId" type="faultIdentifier"/>
			<xsd:element name="sympId" type="faultSymptomIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fltsym[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(faultId) and not(@uriRef)) or (not(@uidRef) and faultId and not(@uriRef)) or (not(@uidRef) and not(faultId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureRef">
		<xsd:annotation>
			<xsd:documentation>
    Infrastructure is a [class] that represents the basic physical and organizational structures and facilities needed for the operation of an organization or 
    Product or required for the provision of a service.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructure</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrId" type="infrastructureIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrId) and not(@uriRef)) or (not(@uidRef) and infrId and not(@uriRef)) or (not(@uidRef) and not(infrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureAvailableRef">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureAvailable is a [relationship] that provides the capability of associating an infrastructure or facility to items that can use it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureAvailable</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
			</xsd:choice>
			<xsd:element name="infrReqItem" type="infrastructureRequiringItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infritav[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrReqItem) and not(@uriRef)) or (not(@uidRef) and infrReqItem and not(@uriRef)) or (not(@uidRef) and not(infrReqItem) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureNodeRef">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureNode is a [class] that specifies an infrastructure node which is part of the defined Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureNode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrId" type="infrastructureIdentifier"/>
			<xsd:element name="revId" type="infrastructureRevisionIdentifier"/>
			<xsd:element name="nodeId" type="infrastructureNodeIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="inclnode[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrId) and not(@uriRef)) or (not(@uidRef) and infrId and not(@uriRef)) or (not(@uidRef) and not(infrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureNodeAtLocationRef">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureNodeAtLocation is a [relationship] that defines the location at which an IncludedInfrastructureNode is located.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureNodeAtLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beHwRef" type="hardwareElementRef"/>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="beSwRef" type="softwareElementRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
			</xsd:choice>
			<xsd:element name="infrNodeRef" type="infrastructureNodeRef"/>
			<xsd:element name="locItem" type="locationItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infnodeat[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrNodeRef) and not(@uriRef)) or (not(@uidRef) and infrNodeRef and not(@uriRef)) or (not(@uidRef) and not(infrNodeRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureNodeRealizationRef">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureNodeRealization is a [relationship] where an InfrastructureNode relates to an instance of InfrastructureNodeItem which is used to realize the 
    InfrastructureNode.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureNodeRealization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrNodeRef" type="infrastructureNodeRef"/>
			<xsd:element name="nodeRealItem" type="infrastructureNodeItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="nodereal[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrNodeRef) and not(@uriRef)) or (not(@uidRef) and infrNodeRef and not(@uriRef)) or (not(@uidRef) and not(infrNodeRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureOperatingPeriodRef">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureOperatingPeriod is a [class] indicating a period of time during which an infrastructure has operated at total or partial capability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureOperatingPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
			</xsd:choice>
			<xsd:element name="id" type="infrastructureOperatingPeriodIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(id) and not(@uriRef)) or (not(@uidRef) and id and not(@uriRef)) or (not(@uidRef) and not(id) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructurePartyRef">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureParty is a [relationship] that identifies a Party that is associated with the Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="party" type="party"/>
			<xsd:element name="ptyRole" type="infrastructurePartyRole"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infrepty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrstrRef) and not(@uriRef)) or (not(@uidRef) and infrstrRef and not(@uriRef)) or (not(@uidRef) and not(infrstrRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureRelationship is a [relationship] where one Infrastructure relates to another Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="relType" type="infrastructureRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infrrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrstrRef) and not(@uriRef)) or (not(@uidRef) and infrstrRef and not(@uriRef)) or (not(@uidRef) and not(infrstrRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureRevision  is a [class] representing an iteration applied to an Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:infrastructureRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrId" type="infrastructureIdentifier"/>
			<xsd:element name="revId" type="infrastructureRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infrrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrId) and not(@uriRef)) or (not(@uidRef) and infrId and not(@uriRef)) or (not(@uidRef) and not(infrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="inServiceOptimizationAnalysisRef">
		<xsd:annotation>
			<xsd:documentation>
    InServiceOptimizationAnalysis is a [class] that represents the result from an in-service optimization analysis carried out for the 
    InServiceOptimizationAnalysisItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:inServiceOptimizationAnalysis</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="isoName" type="inServiceOptimizationAnalysisName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="isoanlys[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(isoName) and not(@uriRef)) or (not(@uidRef) and isoName and not(@uriRef)) or (not(@uidRef) and not(isoName) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="installationLocationRef">
		<xsd:annotation>
			<xsd:documentation>
    InstallationLocation is a [class] that represents a position within the associated SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:installationLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="prodId" type="productDefinitionIdentifier"/>
			<xsd:element name="prodVarId" type="productVariantDefinitionIdentifier"/>
			<xsd:element name="serPVId" type="serializedProductVariantIdentifier"/>
			<xsd:element name="instLocId" type="installationLocationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="instloc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(prodId) and not(@uriRef)) or (not(@uidRef) and prodId and not(@uriRef)) or (not(@uidRef) and not(prodId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="installedPartRef">
		<xsd:annotation>
			<xsd:documentation>
    InstalledPart is a [class] that identifies a period during which a given RealizedPart is, or has been, installed at the InstallationLocation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:installedPart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="instLocRef" type="installationLocationRef"/>
				<xsd:element name="serPartPosRef" type="serializedPartsListPositionRef"/>
			</xsd:choice>
			<xsd:element name="instDate" type="installedDateTime"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="instpart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(instDate) and not(@uriRef)) or (not(@uidRef) and instDate and not(@uriRef)) or (not(@uidRef) and not(instDate) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="inventoryActivityRef">
		<xsd:annotation>
			<xsd:documentation>
    InventoryActivity is an Activity associated to the management of spares or warehouses-
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:inventoryActivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="rptActId" type="reportableActivityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="rptact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(rptActId) and not(@uriRef)) or (not(@uidRef) and rptActId and not(@uriRef)) or (not(@uidRef) and not(rptActId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="involvedDisposalOrganizationRef">
		<xsd:annotation>
			<xsd:documentation>
    InvolvedDisposalOrganization is a [relationship] that allows to document the organizations involved in a disposal.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:involvedDisposalOrganization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="dispReqRef" type="disposalRequirementRef"/>
			<xsd:element name="orgRef" type="organizationRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="disporg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(dispReqRef) and not(@uriRef)) or (not(@uidRef) and dispReqRef and not(@uriRef)) or (not(@uidRef) and not(dispReqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDisposalOperationRef">
		<xsd:annotation>
			<xsd:documentation>
    ItemDisposalOperation is a [class] representing the action that has been taken in order to dispose of a DisposableItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemDisposalOperation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
			<xsd:element name="id" type="itemDisposalOperationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dispop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDisposalOperationActionRef">
		<xsd:annotation>
			<xsd:documentation>
    ItemDisposalOperationAction is a [relationship] that allows to associate an ItemDisposalOperation with one or more Actions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemDisposalOperationAction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="dispOperRef" type="itemDisposalOperationRef"/>
			<xsd:element name="actionRef" type="actionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dispact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(dispOperRef) and not(@uriRef)) or (not(@uidRef) and dispOperRef and not(@uriRef)) or (not(@uidRef) and not(dispOperRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDisposalRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    ItemDisposalRequirement is a DisposalRequirement to proceed with the disposal of an individual item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemDisposalRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemExportControlRegulationRef">
		<xsd:annotation>
			<xsd:documentation>
    ItemExportControlRegulation is a [relationship] that allows to associate an ItemUnderExportControl with the ExportControlRegulation that governs its export,
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemExportControlRegulation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="docRef" type="documentRef"/>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
				<xsd:element name="swPartRef" type="softwarePartDefinitionRef"/>
			</xsd:choice>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="itexcore[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(exConRegRef) and not(@uriRef)) or (not(@uidRef) and exConRegRef and not(@uriRef)) or (not(@uidRef) and not(exConRegRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemWarrantyRef">
		<xsd:annotation>
			<xsd:documentation>
    ItemWarranty is a [relationship] that defines the association between a WarrantyItem and the legal justification for the warranty of the WarrantyItem , 
    such as a contract or contract clause.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:itemWarranty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="contrClauseRef" type="contractClauseRef"/>
			<xsd:element name="wtyItem" type="warrantyItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="siw[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(contrClauseRef) and not(@uriRef)) or (not(@uidRef) and contrClauseRef and not(@uriRef)) or (not(@uidRef) and not(contrClauseRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="laborRatesRef">
		<xsd:annotation>
			<xsd:documentation>
    LaborRates is a [relationship] that allows to assign labor rates to different skills, skill levels and trades.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:laborRates</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="contrClauseRef" type="contractClauseRef"/>
			<xsd:element name="labRateItem" type="laborRateItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="labrate[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(contrClauseRef) and not(@uriRef)) or (not(@uidRef) and contrClauseRef and not(@uriRef)) or (not(@uidRef) and not(contrClauseRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="localPositionRef">
		<xsd:annotation>
			<xsd:documentation>
    LocalPosition is a [class] representing the local coordinates that uniquely identify a position within a ReferencedPositionItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:localPosition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="posId" type="localPositionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="localpos[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(posId) and not(@uriRef)) or (not(@uidRef) and posId and not(@uriRef)) or (not(@uidRef) and not(posId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="locationRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    LocationRelationship is a [relationship] where one LocationItem relates to another LocationItem
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:locationRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="countryRef" type="countryRef"/>
				<xsd:element name="geoAreaRef" type="geographicalAreaRef"/>
				<xsd:element name="globPosRef" type="globalPositionRef"/>
				<xsd:element name="strAddrRef" type="streetAddressRef"/>
			</xsd:choice>
			<xsd:element name="locItem" type="locationItem"/>
			<xsd:element name="relType" type="locationRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="locrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(locItem) and not(@uriRef)) or (not(@uidRef) and locItem and not(@uriRef)) or (not(@uidRef) and not(locItem) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="locatorRef">
		<xsd:annotation>
			<xsd:documentation>
    Locator is a functional area that indicates where an item is physically placed at a specific location.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:locator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="countryRef" type="countryRef"/>
				<xsd:element name="geoAreaRef" type="geographicalAreaRef"/>
				<xsd:element name="globPosRef" type="globalPositionRef"/>
				<xsd:element name="strAddrRef" type="streetAddressRef"/>
			</xsd:choice>
			<xsd:element name="lctrId" type="locatorIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="loctr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(lctrId) and not(@uriRef)) or (not(@uidRef) and lctrId and not(@uriRef)) or (not(@uidRef) and not(lctrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBookRef">
		<xsd:annotation>
			<xsd:documentation>
    LogBook is a class that represents a set of records called LogBookEntries that compile critical activities or events that need to be registered for a 
    defined purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logBook</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="logId" type="logBookIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="log[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(logId) and not(@uriRef)) or (not(@uidRef) and logId and not(@uriRef)) or (not(@uidRef) and not(logId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBookEntryRef">
		<xsd:annotation>
			<xsd:documentation>
    LogBookEntry is an individual entry into a logbook, defining one critical activity or event to be included in the LogBook.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logBookEntry</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="logId" type="logBookIdentifier"/>
			<xsd:element name="entryId" type="logBookEntryIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="loge[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(logId) and not(@uriRef)) or (not(@uidRef) and logId and not(@uriRef)) or (not(@uidRef) and not(logId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logBookEntryMeasurementPointRef">
		<xsd:annotation>
			<xsd:documentation>
    LogBookEntryMeasurementPoint represents a measurement point  in a SerializedItem corresponding to a specific LogBookEntry.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logBookEntryMeasurementPoint</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="logId" type="logBookIdentifier"/>
			<xsd:element name="entryId" type="logBookEntryIdentifier"/>
			<xsd:element name="id" type="logbookEntryMeasurementPointIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="logec[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(logId) and not(@uriRef)) or (not(@uidRef) and logId and not(@uriRef)) or (not(@uidRef) and not(logId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logicalAndRef">
		<xsd:annotation>
			<xsd:documentation>
    LogicalAnd is an EvaluationCriteria that defines a boolean operation where the results of all its associated EvaluationCriteria must be TRUE for the result 
    to be TRUE, otherwise the result is FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logicalAnd</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logicalNotRef">
		<xsd:annotation>
			<xsd:documentation>
    LogicalNot is an EvaluationCriteria that defines a boolean operation where the result from its associated EvaluationCriteria must be FALSE for the result 
    to be TRUE, otherwise the result is FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logicalNot</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logicalOrRef">
		<xsd:annotation>
			<xsd:documentation>
    LogicalOr is an EvaluationCriteria that defines a boolean operation where the result from at least one of its associated EvaluationCriteria must be TRUE 
    for the result to be TRUE, otherwise the result is FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logicalOr</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="logicalXorRef">
		<xsd:annotation>
			<xsd:documentation>
    LogicalXor is an EvaluationCriteria that defines a boolean operation where the result from one and only one of its associated EvaluationCriteria must be 
    TRUE for the result to be TRUE, otherwise the result is FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:logicalXor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="applev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="looseWasteRef">
		<xsd:annotation>
			<xsd:documentation>
    LooseWaste is a [class] representing a certain volume of solid waste that cannot be easily transported by means of containers or is not stored in 
    containers at the source location.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:looseWaste</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="id" type="looseWasteIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="loosewaste[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(id) and not(@uriRef)) or (not(@uidRef) and id and not(@uriRef)) or (not(@uidRef) and not(id) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceActivity is a ReportableActivity that is associated to a maintenance task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="rptActId" type="reportableActivityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="rptact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(rptActId) and not(@uriRef)) or (not(@uidRef) and rptActId and not(@uriRef)) or (not(@uidRef) and not(rptActId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityDocumentRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceActivityDocument is a [relationship] that allows to associate documents (relating) to a MaintenanceActivity requiring them (related).
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="mactRef" type="maintenanceActivityRef"/>
			<xsd:element name="docRef" type="documentRef"/>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mactd[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mactRef) and not(@uriRef)) or (not(@uidRef) and mactRef and not(@uriRef)) or (not(@uidRef) and not(mactRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceActivityPartyRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceActivityParty is a [relationship] that allows to associate a MaintenanceActivity to the person who is going to carry out the MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceActivityParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="mactRef" type="maintenanceActivityRef"/>
			<xsd:element name="mpRef" type="maintenancePersonRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mactpty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mactRef) and not(@uriRef)) or (not(@uidRef) and mactRef and not(@uriRef)) or (not(@uidRef) and not(mactRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceEventRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceEvent is an event that consists in the realization of one or several maintenance activities or occurs as the result of a maintenance activity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceEvent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="eventId" type="eventIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(eventId) and not(@uriRef)) or (not(@uidRef) and eventId and not(@uriRef)) or (not(@uidRef) and not(eventId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilityRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceFacility is a Facility that is mainly established for providing product support.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceFacility</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fcltyId" type="facilityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fclty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fcltyId) and not(@uriRef)) or (not(@uidRef) and fcltyId and not(@uriRef)) or (not(@uidRef) and not(fcltyId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilityLevelRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceFacilityLevel is a [relationship> that defines the MaintenanceLevels of a Facility.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceFacilityLevel</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="mlvRef" type="maintenanceLevelRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mfacl[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(maintFcltyRef) and not(@uriRef)) or (not(@uidRef) and maintFcltyRef and not(@uriRef)) or (not(@uidRef) and not(maintFcltyRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilitySlotRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceFacilitySlot is a fixed position within a MaintenanceFacility in which exactly one SerializedProductVariant can be accommodated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceFacilitySlot</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fcltyId" type="facilityIdentifier"/>
			<xsd:element name="slotId" type="maintenanceFacilitySlotIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mfacs[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fcltyId) and not(@uriRef)) or (not(@uidRef) and fcltyId and not(@uriRef)) or (not(@uidRef) and not(fcltyId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilitySlotAccomodationRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceFacilitySlotAccomodation is a [relationship] that defines which ProductVariants can be accommodated in a specific MaintenanceFacilitySlot.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceFacilitySlotAccomodation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="mfacsRef" type="maintenanceFacilitySlotRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mfacsa[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(prodVarRef) and not(@uriRef)) or (not(@uidRef) and prodVarRef and not(@uriRef)) or (not(@uidRef) and not(prodVarRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceFacilitySlotPlannedUsageRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceFacilitySlotPlannedUsage is a [relationship] that indicates the planned allocation of a MaintenanceFacilitySlot to a specific 
    SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceFacilitySlotPlannedUsage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="mfacsRef" type="maintenanceFacilitySlotRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mfacspu[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mfacsRef) and not(@uriRef)) or (not(@uidRef) and mfacsRef and not(@uriRef)) or (not(@uidRef) and not(mfacsRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceLevelRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceLevel is a [class] that represents the definition of a set of maintenance capabilities which will be made available to support a defined Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceLevel</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="mlvId" type="maintenanceLevelIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mlv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mlvId) and not(@uriRef)) or (not(@uidRef) and mlvId and not(@uriRef)) or (not(@uidRef) and not(mlvId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceLicenseRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceLicense is a class representing the authorization of an authority to a MaintenancePerson to perform specific maintenance tasks.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceLicense</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="persId" type="personIdentifier"/>
			<xsd:element name="licId" type="maintenanceLicenceIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mlic[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(persId) and not(@uriRef)) or (not(@uidRef) and persId and not(@uriRef)) or (not(@uidRef) and not(persId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceOrganizationRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceOrganization is an organization approved to perform maintenance tasks on a specific set of Products or ProductVariants.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceOrganization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="orgId" type="organizationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="org[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(orgId) and not(@uriRef)) or (not(@uidRef) and orgId and not(@uriRef)) or (not(@uidRef) and not(orgId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceOrganizationApprovalRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceOrganizationApproval is a [relationship] that identifies the authorization of an Organization to operate as a Maintenanceorganization for a 
    specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceOrganizationApproval</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="morgRef" type="maintenanceOrganizationRef"/>
			<xsd:element name="orgRef" type="organizationRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="morgap[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(morgRef) and not(@uriRef)) or (not(@uidRef) and morgRef and not(@uriRef)) or (not(@uidRef) and not(morgRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenancePersonRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenancePerson is a person with the skills to be able to perform maintenance activities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenancePerson</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="persId" type="personIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="pers[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(persId) and not(@uriRef)) or (not(@uidRef) and persId and not(@uriRef)) or (not(@uidRef) and not(persId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenancePersonApprovedProductRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenancePersonApprovedProduct is a [relationship] that defines which MaintenancePersons have been approved to carry out maintenance on specific 
    ProductVariants, possibly with a specific approval by an organization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenancePersonApprovedProduct</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="mpRef" type="maintenancePersonRef"/>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mpap[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mpRef) and not(@uriRef)) or (not(@uidRef) and mpRef and not(@uriRef)) or (not(@uidRef) and not(mpRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenancePersonFacilityRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenancePersonFacility is a [relationship] that documents the MaintenanceFacility where a MaintenancePerson is working during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenancePersonFacility</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="mpRef" type="maintenancePersonRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mpf[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mpRef) and not(@uriRef)) or (not(@uidRef) and mpRef and not(@uriRef)) or (not(@uidRef) and not(mpRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceProgramRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceProgram is a class that represents a set of TaskRequirements that must be applied to a ProductVariant so as to maintain the ProductVariant in an 
    operational state.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceProgram</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceProgramRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceProgramRevision is an iteration of a MaintenanceProgram.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceProgramRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
			<xsd:element name="docIssId" type="documentIssueIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dociss[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceRequirement is a Requirement to carry out one or several maintenance actions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:maintenanceRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="majorComponentRef">
		<xsd:annotation>
			<xsd:documentation>
    MajorComponent is a [relationship] declaring that a SerializedHardwarePart is of special importance within a SerializedProductVariant and therefore needs 
    special tracking.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:majorComponent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPVRef) and not(@uriRef)) or (not(@uidRef) and serialPVRef and not(@uriRef)) or (not(@uidRef) and not(serialPVRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="managedFleetRef">
		<xsd:annotation>
			<xsd:documentation>
    ManagedFleet is a [relationship] that allows to associate a FleetManager to the Fleet that it manages during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:managedFleet</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="operOrgRef" type="operatorOrganizationRef"/>
				<xsd:element name="operPersRef" type="operatorPersonRef"/>
			</xsd:choice>
			<xsd:element name="fleetRef" type="fleetRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fleetman[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fleetRef) and not(@uriRef)) or (not(@uidRef) and fleetRef and not(@uriRef)) or (not(@uidRef) and not(fleetRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialRef">
		<xsd:annotation>
			<xsd:documentation>
    Material is a solid substance that can be refined in a manufacturing process.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:material</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="matId" type="materialIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mat[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(matId) and not(@uriRef)) or (not(@uidRef) and matId and not(@uriRef)) or (not(@uidRef) and not(matId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    MaterialDefinition is a [class] that represents a substance or mixture of substances which is not dependent upon geometry and is subject to be processed in 
    a manufacturing or maintenance process.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="mtrlId" type="materialDefinitionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mtrldef[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mtrlId) and not(@uriRef)) or (not(@uidRef) and mtrlId and not(@uriRef)) or (not(@uidRef) and not(mtrlId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialDefinitionRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    MaterialDefinitionRevision is a [class] representing an iteration applied to a MaterialDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:materialDefinitionRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="mtrlId" type="materialDefinitionIdentifier"/>
			<xsd:element name="revId" type="materialDefinitionRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mtrldefrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mtrlId) and not(@uriRef)) or (not(@uidRef) and mtrlId and not(@uriRef)) or (not(@uidRef) and not(mtrlId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="measurementPointRef">
		<xsd:annotation>
			<xsd:documentation>
    MeasurementPoint is a [class] that represents a measured value recorded for the associated item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:measurementPoint</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
				<xsd:element name="instLocRef" type="installationLocationRef"/>
				<xsd:element name="mvRef" type="movementRef"/>
				<xsd:element name="movlegRef" type="movementLegRef"/>
				<xsd:element name="oppRef" type="operationalPeriodRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="mPointId" type="measurementPointIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mpoint[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mPointId) and not(@uriRef)) or (not(@uidRef) and mPointId and not(@uriRef)) or (not(@uidRef) and not(mPointId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="measuringPointDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    MeasuringPointDefinition is a [class] that specifies a characteristic which can be measured for the MeasuringPointDefinitionItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:measuringPointDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="mpDefId" type="measuringPointDefinitionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mpointdef[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mpDefId) and not(@uriRef)) or (not(@uidRef) and mpDefId and not(@uriRef)) or (not(@uidRef) and not(mpDefId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageRef">
		<xsd:annotation>
			<xsd:documentation>
    Message is a [class] that represents the collection of information brought together by a message sender for the purpose of communicating it to another 
    party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:message</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="msgId" type="messageIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="msg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(msgId) and not(@uriRef)) or (not(@uidRef) and msgId and not(@uriRef)) or (not(@uidRef) and not(msgId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageContextRef">
		<xsd:annotation>
			<xsd:documentation>
    MessageContext is a [relationship] between a Message and the context for which it is being provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:messageContext</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="msgRef" type="messageRef"/>
			<xsd:element name="context" type="messageContextItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="msgcxt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(msgRef) and not(@uriRef)) or (not(@uidRef) and msgRef and not(@uriRef)) or (not(@uidRef) and not(msgRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messagePartyRef">
		<xsd:annotation>
			<xsd:documentation>
    MessageParty is a [relationship] between a Message and a stakeholder for the Message.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:messageParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="msgRef" type="messageRef"/>
			<xsd:element name="party" type="messagePartyItem"/>
			<xsd:element name="ptyType" type="messagePartyType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="msgpty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(msgRef) and not(@uriRef)) or (not(@uidRef) and msgRef and not(@uriRef)) or (not(@uidRef) and not(msgRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    MessageRelationship is a [relationship] where one Message relates to another Message.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:messageRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="msgRef" type="messageRef"/>
			<xsd:element name="msgRef" type="messageRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="msgrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(msgRef) and not(@uriRef)) or (not(@uidRef) and msgRef and not(@uriRef)) or (not(@uidRef) and not(msgRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    MissionDefinition is a [class] that represents the defining information for a Product operational scenario.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:missionDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="missnDName" type="missionDefinitionName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="missndef[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(missnDName) and not(@uriRef)) or (not(@uidRef) and missnDName and not(@uriRef)) or (not(@uidRef) and not(missnDName) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="missionDefinitionRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    MissionDefinitionRevision is a [class] representing an iteration applied to a MissionDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:missionDefinitionRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="missnDName" type="missionDefinitionName"/>
			<xsd:element name="revId" type="missionDefinitionRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="missndrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(missnDName) and not(@uriRef)) or (not(@uidRef) and missnDName and not(@uriRef)) or (not(@uidRef) and not(missnDName) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementRef">
		<xsd:annotation>
			<xsd:documentation>
    Movement represents the act of autonomously changing the physical location or position of a SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="periodId" type="operationalPeriodIdentifier"/>
			<xsd:element name="movId" type="movementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(periodId) and not(@uriRef)) or (not(@uidRef) and periodId and not(@uriRef)) or (not(@uidRef) and not(periodId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegRef">
		<xsd:annotation>
			<xsd:documentation>
    MovementLeg is a class representing one of the individual displacements performed during a Movement, which will be at least one MovementLeg.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLeg</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="periodId" type="operationalPeriodIdentifier"/>
			<xsd:element name="movId" type="movementIdentifier"/>
			<xsd:element name="legid" type="movementLegIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="movleg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(periodId) and not(@uriRef)) or (not(@uidRef) and periodId and not(@uriRef)) or (not(@uidRef) and not(periodId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegDelayRef">
		<xsd:annotation>
			<xsd:documentation>
    MovementLegDelay is a class representing a delay that occurred during a travelLeg.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLegDelay</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="periodId" type="operationalPeriodIdentifier"/>
			<xsd:element name="movId" type="movementIdentifier"/>
			<xsd:element name="legid" type="movementLegIdentifier"/>
			<xsd:element name="delayId" type="movementLegDelayIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mvld[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(periodId) and not(@uriRef)) or (not(@uidRef) and periodId and not(@uriRef)) or (not(@uidRef) and not(periodId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="movementLegPositionRef">
		<xsd:annotation>
			<xsd:documentation>
    MovementLegPosition is a [relationship] that defines at which point in space a Product was at a certain moment during a MovementLeg.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:movementLegPosition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="movlegRef" type="movementLegRef"/>
			<xsd:element name="locItem" type="locationItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mvlg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(movlegRef) and not(@uriRef)) or (not(@uidRef) and movlegRef and not(@uriRef)) or (not(@uidRef) and not(movlegRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="mRONetworkRef">
		<xsd:annotation>
			<xsd:documentation>
    MRONetwork is an Infrastructure consisting of Maintenance, Repair and Overhaul (MRO) facilities.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:mRONetwork</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrId" type="infrastructureIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrId) and not(@uriRef)) or (not(@uidRef) and infrId and not(@uriRef)) or (not(@uidRef) and not(infrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nestedAllowedProductConfigurationRef">
		<xsd:annotation>
			<xsd:documentation>
    NestedAllowedProductConfiguration is a [relationship] that defines that one AllowedProductConfiguration includes a subordinate AllowedProductConfiguration. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:nestedAllowedProductConfiguration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="allwdPCRef" type="allowedProductConfigurationByConfigurationIdentifierRef"/>
				<xsd:element name="hwConfPartRef" type="allowedProductConfigurationHardwarePartDefinitionRef"/>
			</xsd:choice>
			<xsd:element name="allwdPCItem" type="allowedProductConfigurationItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="napc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(allwdPCItem) and not(@uriRef)) or (not(@uidRef) and allwdPCItem and not(@uriRef)) or (not(@uidRef) and not(allwdPCItem) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nestedProductVariantRef">
		<xsd:annotation>
			<xsd:documentation>
    NestedProductVariant is a [relationship] that defines that one ProductVariant includes a subordinate ProductVariant. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:nestedProductVariant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="npv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(prodVarRef) and not(@uriRef)) or (not(@uidRef) and prodVarRef and not(@uriRef)) or (not(@uidRef) and not(prodVarRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nestedSerializedProductVariantRef">
		<xsd:annotation>
			<xsd:documentation>
    NestedSerializedProductVariant is a [relationship] that that defines that one SerializedProductVariant includes a subordinate SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:nestedSerializedProductVariant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="nstspv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPVRef) and not(@uriRef)) or (not(@uidRef) and serialPVRef and not(@uriRef)) or (not(@uidRef) and not(serialPVRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nonAvailabilityCauseRef">
		<xsd:annotation>
			<xsd:documentation>
    NonAvailabilityCause is a &lt;class] that describes why a Availability was not achieved at a certain date.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:nonAvailabilityCause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="fleetRef" type="fleetRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="avId" type="availabilityIdentifier"/>
			<xsd:element name="causeId" type="nonAvailabilityCauseIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="navcau[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(avId) and not(@uriRef)) or (not(@uidRef) and avId and not(@uriRef)) or (not(@uidRef) and not(avId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="observedFaultSymptomRef">
		<xsd:annotation>
			<xsd:documentation>
    ObservedFaultSymptom is a [class] that represents an indication of the existence of a Fault by means of physical observation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:observedFaultSymptom</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="faultId" type="faultIdentifier"/>
			<xsd:element name="sympId" type="faultSymptomIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fltsym[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(faultId) and not(@uriRef)) or (not(@uidRef) and faultId and not(@uriRef)) or (not(@uidRef) and not(faultId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="obsolescenceParameterRef">
		<xsd:annotation>
			<xsd:documentation>
    ObsolescenceParameter is a class representing a criterion that allows to evaluate whether an ObsolescenceRequirement has been met.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:obsolescenceParameter</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
			<xsd:element name="obsParamId" type="obsolescenceParameterIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="obscp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="obsolescenceRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    ObsolescenceRequirement is a Requirement that indicates when an item becomes obsolete.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:obsolescenceRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatingBaseRef">
		<xsd:annotation>
			<xsd:documentation>
    OperatingBase is a Facility that is mainly established for providing support for operations.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operatingBase</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fcltyId" type="facilityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fclty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fcltyId) and not(@uriRef)) or (not(@uidRef) and fcltyId and not(@uriRef)) or (not(@uidRef) and not(fcltyId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatingBaseCapacityRef">
		<xsd:annotation>
			<xsd:documentation>
    OperatingBaseCapacity is a [relationship] that identifies the capacity of an OperatingBase to allow the operation of a specific ProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operatingBaseCapacity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="opBaseRef" type="operatingBaseRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="capId" type="operatingBaseCapacityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="opbc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(opBaseRef) and not(@uriRef)) or (not(@uidRef) and opBaseRef and not(@uriRef)) or (not(@uidRef) and not(opBaseRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatingLocationTypeRef">
		<xsd:annotation>
			<xsd:documentation>
    OperatingLocationType is a [class] that represents the definition of the nature of the environment in which a product will be operated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operatingLocationType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="opLocTId" type="operatingLocationTypeIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="oplt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(opLocTId) and not(@uriRef)) or (not(@uidRef) and opLocTId and not(@uriRef)) or (not(@uidRef) and not(opLocTId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalActivityRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalActivity is an Activity associated to the operation of a SerializedProduct.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalActivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="rptActId" type="reportableActivityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="rptact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(rptActId) and not(@uriRef)) or (not(@uidRef) and rptActId and not(@uriRef)) or (not(@uidRef) and not(rptActId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalApprovalRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalApproval is a class that represents the authorization to a SerializedProductVariant for a specific mode of operation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalApproval</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="appId" type="operationalApprovalIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="opap[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(appId) and not(@uriRef)) or (not(@uidRef) and appId and not(@uriRef)) or (not(@uidRef) and not(appId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalEvent is a class representing an Event during the SerializedProductVariant operation that can have an impact on the operation itself, on 
    maintenance, or on safety.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEvent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="eventId" type="eventIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(eventId) and not(@uriRef)) or (not(@uidRef) and eventId and not(@uriRef)) or (not(@uidRef) and not(eventId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventMessageRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalEventMessage is a message, failure code or acoustic or visual warning that occurred during an OperationalEvent.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventMessage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="eventId" type="eventIdentifier"/>
			<xsd:element name="msgId" type="operationalEventMessageIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="opevm[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(eventId) and not(@uriRef)) or (not(@uidRef) and eventId and not(@uriRef)) or (not(@uidRef) and not(eventId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalEventOperatorRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalEventOperator is a [relationship] that allows to associate an OperationalEvent to the Party that was operating the ProductVariant at that moment 
    in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalEventOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="opevRef" type="operationalEventRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="opevo[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(opevRef) and not(@uriRef)) or (not(@uidRef) and opevRef and not(@uriRef)) or (not(@uidRef) and not(opevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalModeRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalMode represents the actual usage mode of a SerializedProductVariant during a specific OperationalPeriod.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalMode</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="opModId" type="operationalModeIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="opm[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(opModId) and not(@uriRef)) or (not(@uidRef) and opModId and not(@uriRef)) or (not(@uidRef) and not(opModId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriodRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalPeriod is a class that defines the characteristics of a time frame during which a SerializedProductVariant was operated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="periodId" type="operationalPeriodIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="opp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(periodId) and not(@uriRef)) or (not(@uidRef) and periodId and not(@uriRef)) or (not(@uidRef) and not(periodId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriodOperatorRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalPeriodOperator is a [relationship] that defines which Party has carried out the operation during an OperationalPeriod.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalPeriodOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="oppRef" type="operationalPeriodRef"/>
			<xsd:element name="operOrgRef" type="operatorOrganizationRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="oppo[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(oppRef) and not(@uriRef)) or (not(@uidRef) and oppRef and not(@uriRef)) or (not(@uidRef) and not(oppRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalPeriodRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalPeriodRelationship is a [relationship] that defines the association between two different OperationalPeriods.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalPeriodRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="oppRef" type="operationalPeriodRef"/>
			<xsd:element name="oppRef" type="operationalPeriodRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="oppr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(oppRef) and not(@uriRef)) or (not(@uidRef) and oppRef and not(@uriRef)) or (not(@uidRef) and not(oppRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalRequirement is a Requirement to perform a specific operation with a Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRequirementsPlanningRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalRequirementsPlanning is a [relationship] that relates an OperationalRquirement to the FleetPlanning during one or several OperationalPeriods.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRequirementsPlanning</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="operReqRef" type="operationalRequirementRef"/>
			<xsd:element name="fltplRef" type="fleetPlanningRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="oprp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(operReqRef) and not(@uriRef)) or (not(@uidRef) and operReqRef and not(@uriRef)) or (not(@uidRef) and not(operReqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRoleRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalRole defines the capabilities that a product must be able to provide so as to perform a specific task or mission as part of its operation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="opRoleId" type="operationalRoleidentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="oprole[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(opRoleId) and not(@uriRef)) or (not(@uidRef) and opRoleId and not(@uriRef)) or (not(@uidRef) and not(opRoleId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalRoleKitImpactRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalRoleKitImpact is a [class] that specifies how an installed ProductOperationalRoleKit can affect the characteristics and/or performance on the 
    ProductOperationalRoleKitItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalRoleKitImpact</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="roleKitId" type="productOperationalRoleKitIdentifier"/>
			<xsd:element name="kitImpctId" type="operationalRoleKitImpactIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="rolekitimp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(roleKitId) and not(@uriRef)) or (not(@uidRef) and roleKitId and not(@uriRef)) or (not(@uidRef) and not(roleKitId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalTaskRef">
		<xsd:annotation>
			<xsd:documentation>
    OperationalTask is a Task that is required to support the use of a product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operationalTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskId" type="taskIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="task[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskId) and not(@uriRef)) or (not(@uidRef) and taskId and not(@uriRef)) or (not(@uidRef) and not(taskId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatorOrganizationRef">
		<xsd:annotation>
			<xsd:documentation>
    OperatorOrganization is an Organization that operates one or several instances of  SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operatorOrganization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="orgId" type="organizationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="org[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(orgId) and not(@uriRef)) or (not(@uidRef) and orgId and not(@uriRef)) or (not(@uidRef) and not(orgId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatorPersonRef">
		<xsd:annotation>
			<xsd:documentation>
    OperatorPerson is a Person that operates one or several instances of SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:operatorPerson</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="persId" type="personIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="pers[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(persId) and not(@uriRef)) or (not(@uidRef) and persId and not(@uriRef)) or (not(@uidRef) and not(persId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationRef">
		<xsd:annotation>
			<xsd:documentation>
    Organization is a [class] that represents an administrative structure with a particular purpose belonging to a legal entity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="orgId" type="organizationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="org[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(orgId) and not(@uriRef)) or (not(@uidRef) and orgId and not(@uriRef)) or (not(@uidRef) and not(orgId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalBreakdownStructureRef">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalBreakdownStructure is a [class] that represents the systematic arrangement of human resources in an organization so as to achieve common 
    business objectives.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalBreakdownStructure</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="projRef" type="projectRef"/>
			</xsd:choice>
			<xsd:element name="strType" type="organizationalBreakdownStructureType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="orgstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(strType) and not(@uriRef)) or (not(@uidRef) and strType and not(@uriRef)) or (not(@uidRef) and not(strType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalBreakdownStructureRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalBreakdownStructureRevision is a [class] representing an iteration applied to a OrganizationalBreakdownStructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalBreakdownStructureRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="projRef" type="projectRef"/>
			</xsd:choice>
			<xsd:element name="strType" type="organizationalBreakdownStructureType"/>
			<xsd:element name="revId" type="organizationalBreakdownStructureRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="strrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(strType) and not(@uriRef)) or (not(@uidRef) and strType and not(@uriRef)) or (not(@uidRef) and not(strType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitRef">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalUnit is a [class] that represents division of labor within an Organization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalUnit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="orgStrRevRef" type="organizationalBreakdownStructureRevisionRef"/>
				<xsd:element name="orgUnitRef" type="organizationalUnitRef"/>
			</xsd:choice>
			<xsd:element name="unitId" type="organizationalUnitIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="orgunit[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(unitId) and not(@uriRef)) or (not(@uidRef) and unitId and not(@uriRef)) or (not(@uidRef) and not(unitId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitMemberRef">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalUnitMember is a [class] that specifies a  type of personnel that is part of the OrganizationalUnit.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalUnitMember</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="orgStrRevRef" type="organizationalBreakdownStructureRevisionRef"/>
				<xsd:element name="orgUnitRef" type="organizationalUnitRef"/>
			</xsd:choice>
			<xsd:element name="unitId" type="organizationalUnitIdentifier"/>
			<xsd:element name="membRole" type="organizationalUnitMemberRole"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="unitmemb[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(unitId) and not(@uriRef)) or (not(@uidRef) and unitId and not(@uriRef)) or (not(@uidRef) and not(unitId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalUnitRelationship is a [relationship] where one OrganizationalUnit relates to another OrganizationalUnit.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationalUnitRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="orgUnitRef" type="organizationalUnitRef"/>
			<xsd:element name="orgUnitRef" type="organizationalUnitRef"/>
			<xsd:element name="relType" type="organizationalUnitRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="unitrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(orgUnitRef) and not(@uriRef)) or (not(@uidRef) and orgUnitRef and not(@uriRef)) or (not(@uidRef) and not(orgUnitRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationOperationsApprovalRef">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationOperationsApproval is a [relationship] that identifies the authorization of an OperatorOrganization to operate a specific ProductVariant for a 
    specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:organizationOperationsApproval</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="operOrgRef" type="operatorOrganizationRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="orgoa[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(operOrgRef) and not(@uriRef)) or (not(@uidRef) and operOrgRef and not(@uriRef)) or (not(@uidRef) and not(operOrgRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="otherFacilityRef">
		<xsd:annotation>
			<xsd:documentation>
    OtherFacility is a Facility that has no specific classification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:otherFacility</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fcltyId" type="facilityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fclty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fcltyId) and not(@uriRef)) or (not(@uidRef) and fcltyId and not(@uriRef)) or (not(@uidRef) and not(fcltyId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="parameterThresholdDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    ParameterThresholdDefinition is a ThresholdDefinition that is continuously measured and evaluated, and when reached, activates the associated trigger 
    threshold.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:parameterThresholdDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="thres[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="parkingFacilityRef">
		<xsd:annotation>
			<xsd:documentation>
    ParkingFacility is a Facility used to park SerializedProductVariants that are mobile and can move beween different Locations.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:parkingFacility</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fcltyId" type="facilityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fclty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fcltyId) and not(@uriRef)) or (not(@uidRef) and fcltyId and not(@uriRef)) or (not(@uidRef) and not(fcltyId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partActionRef">
		<xsd:annotation>
			<xsd:documentation>
    PartAction is an action performed on a part as a result of a MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partAction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
			</xsd:choice>
			<xsd:element name="actId" type="partActionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="pact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(actId) and not(@uriRef)) or (not(@uidRef) and actId and not(@uriRef)) or (not(@uidRef) and not(actId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    PartDefinition is a [class] that represents the definitional information for an artifact fulfilling a set of requirements, which can be produced or 
    realized.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDefinitionPartsListRef">
		<xsd:annotation>
			<xsd:documentation>
    PartDefinitionPartsList is a [class] that represents the definitional information for the collection of PartDefinitionPartsListEntry included in the 
    assembly of the parent PartDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partDefinitionPartsList</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
			<xsd:element name="pListType" type="partsListType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="plist[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDefinitionPartsListEntryRef">
		<xsd:annotation>
			<xsd:documentation>
    PartDefinitionPartsListEntry is a [class] that represents the inclusion of a PartDefinition in a PartDefinitionPartsListRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partDefinitionPartsListEntry</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
			<xsd:element name="pListType" type="partsListType"/>
			<xsd:element name="revId" type="partsListRevisionIdentifier"/>
			<xsd:element name="entryId" type="partsListEntryIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ple[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDefinitionPartsListRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    PartDefinitionPartsListRelationship is a [relationship] where one PartDefinitionPartsList relates to another PartDefinitionPartsList.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partDefinitionPartsListRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="pListRevRef" type="partDefinitionPartsListRevisionRef"/>
			<xsd:element name="pListRevRef" type="partDefinitionPartsListRevisionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="plrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(pListRevRef) and not(@uriRef)) or (not(@uidRef) and pListRevRef and not(@uriRef)) or (not(@uidRef) and not(pListRevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partDefinitionPartsListRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    PartDefinitionPartsListRevision is a [class] representing an iteration applied to a PartDefinitionPartsList.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partDefinitionPartsListRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
			<xsd:element name="pListType" type="partsListType"/>
			<xsd:element name="revId" type="partsListRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="plrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partInPoolRef">
		<xsd:annotation>
			<xsd:documentation>
    PartInPool is a [relationship] that indicates the period during which a part has been in a defined Pool of parts.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partInPool</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="poolRef" type="poolRef"/>
			<xsd:element name="poolItem" type="poolItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="sppartp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(poolRef) and not(@uriRef)) or (not(@uidRef) and poolRef and not(@uriRef)) or (not(@uidRef) and not(poolRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partInWarehouseRef">
		<xsd:annotation>
			<xsd:documentation>
    PartInWarehouse is a [relationship] that defines the time that a SerializedHardwarePart has been stored in a Warehouse.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partInWarehouse</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="batchPartRef" type="batchHardwarePartRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			</xsd:choice>
			<xsd:element name="whRef" type="warehouseRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="partw[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(whRef) and not(@uriRef)) or (not(@uidRef) and whRef and not(@uriRef)) or (not(@uidRef) and not(whRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partOwnerRef">
		<xsd:annotation>
			<xsd:documentation>
    PartOwner is a [relationship] that allows to associate a SerializedHardwarePart with its owning Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partOwner</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="party" type="party"/>
			<xsd:element name="partOwnId" type="partOwnerIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="partowner[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPartRef) and not(@uriRef)) or (not(@uidRef) and serialPartRef and not(@uriRef)) or (not(@uidRef) and not(serialPartRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyAddressRef">
		<xsd:annotation>
			<xsd:documentation>
    PartyAddress is a [relationship] that defines the association between a Party and an Address.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partyAddress</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="orgUnitRef" type="organizationalUnitRef"/>
				<xsd:element name="persRef" type="personRef"/>
			</xsd:choice>
			<xsd:element name="strAddrRef" type="streetAddressRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ptya[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(strAddrRef) and not(@uriRef)) or (not(@uidRef) and strAddrRef and not(@uriRef)) or (not(@uidRef) and not(strAddrRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    PartyRelationship is a relationship where one Party relates to another Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:partyRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="orgUnitRef" type="organizationalUnitRef"/>
				<xsd:element name="persRef" type="personRef"/>
			</xsd:choice>
			<xsd:element name="party" type="party"/>
			<xsd:element name="relType" type="partyRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ptyr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(party) and not(@uriRef)) or (not(@uidRef) and party and not(@uriRef)) or (not(@uidRef) and not(party) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="penaltyRef">
		<xsd:annotation>
			<xsd:documentation>
    Penalty is a [class] that represents a punishment imposed for breaking or not complying with a contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:penalty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="penId" type="penaltyIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="pty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(penId) and not(@uriRef)) or (not(@uidRef) and penId and not(@uriRef)) or (not(@uidRef) and not(penId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterRef">
		<xsd:annotation>
			<xsd:documentation>
    PerformanceParameter is a [class] that represents a metric that if changed, or not fulfilled, can have a major impact on the performance, schedule, cost 
    and/or risk for the PerformanceParameterItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:performanceParameter</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="contrClauseRef" type="contractClauseRef"/>
				<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
				<xsd:element name="mlvRef" type="maintenanceLevelRef"/>
				<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="slacRef" type="serviceLevelAgreementClauseRef"/>
				<xsd:element name="taskRef" type="taskRef"/>
			</xsd:choice>
			<xsd:element name="prfmPType" type="performanceParameterType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="prfmpara[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(prfmPType) and not(@uriRef)) or (not(@uidRef) and prfmPType and not(@uriRef)) or (not(@uidRef) and not(prfmPType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    PerformanceParameterRevision is a [class] that represents an iteration applied to a PerformanceParameter.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:performanceParameterRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="contrClauseRef" type="contractClauseRef"/>
				<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
				<xsd:element name="mlvRef" type="maintenanceLevelRef"/>
				<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="slacRef" type="serviceLevelAgreementClauseRef"/>
				<xsd:element name="taskRef" type="taskRef"/>
			</xsd:choice>
			<xsd:element name="prfmPType" type="performanceParameterType"/>
			<xsd:element name="revId" type="performanceParameterRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="prfmprev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(prfmPType) and not(@uriRef)) or (not(@uidRef) and prfmPType and not(@uriRef)) or (not(@uidRef) and not(prfmPType) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="periodicTimeLimitRef">
		<xsd:annotation>
			<xsd:documentation>
    PeriodicTimeLimit is a TimeLimit that is repeated and its next occurrence can be scheduled.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:periodicTimeLimit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="timelim[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personRef">
		<xsd:annotation>
			<xsd:documentation>
    Person is a class that represents a human being.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:person</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="persId" type="personIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="pers[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(persId) and not(@uriRef)) or (not(@uidRef) and persId and not(@uriRef)) or (not(@uidRef) and not(persId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personCompetenceRef">
		<xsd:annotation>
			<xsd:documentation>
    PersonCompetence is a [relationship] that defines the competences that a Person has acquired.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:personCompetence</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="persRef" type="personRef"/>
				<xsd:element name="persTypeRef" type="typeOfPersonRef"/>
			</xsd:choice>
			<xsd:element name="defComp" type="competencyDefinitionItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mpc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(defComp) and not(@uriRef)) or (not(@uidRef) and defComp and not(@uriRef)) or (not(@uidRef) and not(defComp) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personGroupRef">
		<xsd:annotation>
			<xsd:documentation>
    PersonGroup is a [relationship] that allows to associate a Person to different types of persons.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:personGroup</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="persRef" type="personRef"/>
			<xsd:element name="persTypeRef" type="typeOfPersonRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="personcat[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(persRef) and not(@uriRef)) or (not(@uidRef) and persRef and not(@uriRef)) or (not(@uidRef) and not(persRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personOperationsApprovalRef">
		<xsd:annotation>
			<xsd:documentation>
    PersonOperationsApproval is a [relationship] that documents the authorization by an Organization to an OperatorPerson to operate a ProductVariant during a 
    specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:personOperationsApproval</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="operPersRef" type="operatorPersonRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="persoa[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(operPersRef) and not(@uriRef)) or (not(@uidRef) and operPersRef and not(@uriRef)) or (not(@uidRef) and not(operPersRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedItemUpgradeRef">
		<xsd:annotation>
			<xsd:documentation>
    PlannedItemUpgrade is a [class] that defines the planning for the upgrade for a ChangeEmbodimentRequirement for one or several items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:plannedItemUpgrade</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="upgrId" type="plannedItemUpgradeIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="pliu[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(upgrId) and not(@uriRef)) or (not(@uidRef) and upgrId and not(@uriRef)) or (not(@uidRef) and not(upgrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedPartInstallationLocationRef">
		<xsd:annotation>
			<xsd:documentation>
    PlannedPartInstallationLocation is a [relationship] that allows to indicate which Part was installed or uninstalled at which location on a specific 
    SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:plannedPartInstallationLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="pactRef" type="partActionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="plpil[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPVRef) and not(@uriRef)) or (not(@uidRef) and serialPVRef and not(@uriRef)) or (not(@uidRef) and not(serialPVRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedTaskUsageRef">
		<xsd:annotation>
			<xsd:documentation>
    PlannedTaskUsage is a TaskUsage that expands the definition of a required Task in the context of a given support solution.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:plannedTaskUsage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="taskRevRef" type="taskRevisionRef"/>
			</xsd:choice>
			<xsd:element name="plndTask" type="plannedTaskItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="taskuse[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(plndTask) and not(@uriRef)) or (not(@uidRef) and plndTask and not(@uriRef)) or (not(@uidRef) and not(plndTask) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedUpgradeTimescalesRef">
		<xsd:annotation>
			<xsd:documentation>
    PlannedUpgradeTimescales is a class that defines the planned periods of times during which a PlannedUpgrade will be performed on specific items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:plannedUpgradeTimescales</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="altPartRef" type="alternatePartDefinitionRef"/>
				<xsd:element name="anlysRevRef" type="analysisActivityRevisionRef"/>
				<xsd:element name="beInZoneRef" type="breakdownElementInZoneRef"/>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="beChildRef" type="breakdownElementStructureRef"/>
				<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
				<xsd:element name="bkdnRevRef" type="breakdownRevisionRef"/>
				<xsd:element name="capDefRevRef" type="capabilityDefinitionRevisionRef"/>
				<xsd:element name="cbLocRef" type="circuitBreakerLocationRef"/>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="costBkdnRevRef" type="costBreakdownRevisionRef"/>
				<xsd:element name="allwdPCEfyRef" type="effectiveOnProductConfigurationRef"/>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="fleetRef" type="fleetRef"/>
				<xsd:element name="beHwRealRef" type="hardwareElementPartRealizationRef"/>
				<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
				<xsd:element name="instPartRef" type="installedPartRef"/>
				<xsd:element name="mtrlDefRevRef" type="materialDefinitionRevisionRef"/>
				<xsd:element name="missnDRevRef" type="missionDefinitionRevisionRef"/>
				<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef"/>
				<xsd:element name="pListRevRef" type="partDefinitionPartsListRevisionRef"/>
				<xsd:element name="prfmPRevRef" type="performanceParameterRevisionRef"/>
				<xsd:element name="roleConfRevRef" type="productOperationalRoleConfigurationRevisionRef"/>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="reqRef" type="requirementRef"/>
				<xsd:element name="resSpecRealRef" type="resourceSpecificationRealizationRef"/>
				<xsd:element name="resSpecRevRef" type="resourceSpecificationRevisionRef"/>
				<xsd:element name="secRef" type="securityClassificationRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="partModRef" type="serializedHardwarePartModificationRef"/>
				<xsd:element name="serPartPosRef" type="serializedPartsListPositionRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="servRef" type="serviceRef"/>
				<xsd:element name="beSwRealRef" type="softwareElementPartRealizationRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
				<xsd:element name="subsRevRef" type="substanceDefinitionRevisionRef"/>
				<xsd:element name="substPartRef" type="substitutePartDefinitionRef"/>
				<xsd:element name="trRevRef" type="taskRequirementRevisionRef"/>
				<xsd:element name="taskResRef" type="taskResourceRef"/>
				<xsd:element name="taskRevRef" type="taskRevisionRef"/>
				<xsd:element name="taskUseRef" type="taskUsageRef"/>
				<xsd:element name="timeLimRef" type="timeLimitRef"/>
				<xsd:element name="usableOnRef" type="usableOnProductVariantRef"/>
				<xsd:element name="wbsRevRef" type="workBreakdownRevisionRef"/>
			</xsd:choice>
			<xsd:element name="timeId" type="plannedUpgradeTimescaleIdentifier"/>
			<xsd:element name="timeVersion" type="plannedUpgradeTimescaleVersion"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="plut[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(timeId) and not(@uriRef)) or (not(@uidRef) and timeId and not(@uriRef)) or (not(@uidRef) and not(timeId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="policiesAndRegulationsRef">
		<xsd:annotation>
			<xsd:documentation>
    PoliciesAndRegulations is a Document that defines mandatory practices for a Project, Product, Contract, Service or major item requiring specific guidelines.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:policiesAndRegulations</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolRef">
		<xsd:annotation>
			<xsd:documentation>
    Pool is a set of parts that are managed as a functional group and that is shared by different Parties.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:pool</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="poolId" type="poolIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="pool[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(poolId) and not(@uriRef)) or (not(@uidRef) and poolId and not(@uriRef)) or (not(@uidRef) and not(poolId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolOwnerRef">
		<xsd:annotation>
			<xsd:documentation>
    PoolOwner is a [relationship] that defines the ownership ration and period of a Party over a Pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolOwner</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="poolRef" type="poolRef"/>
			<xsd:element name="party" type="party"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="poolo[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(poolRef) and not(@uriRef)) or (not(@uidRef) and poolRef and not(@uriRef)) or (not(@uidRef) and not(poolRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolStockedInWareHouseRef">
		<xsd:annotation>
			<xsd:documentation>
    PoolStockedInWareHouse is a [relationship] that allows to indicate the Warehouse or Warehouses where a Pool of parts is stocked.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolStockedInWareHouse</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="poolRef" type="poolRef"/>
			<xsd:element name="whRef" type="warehouseRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="pinwhr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(poolRef) and not(@uriRef)) or (not(@uidRef) and poolRef and not(@uriRef)) or (not(@uidRef) and not(poolRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolUserRef">
		<xsd:annotation>
			<xsd:documentation>
    PoolUser is a [relationship] that associates a spare Pool with the Parties that are allowed to access and use that SparePool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:poolUser</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="poolRef" type="poolRef"/>
			<xsd:element name="party" type="party"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="poolUsr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(poolRef) and not(@uriRef)) or (not(@uidRef) and poolRef and not(@uriRef)) or (not(@uidRef) and not(poolRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="portRef">
		<xsd:annotation>
			<xsd:documentation>
    Port is an infrastructure used for the docking of ships.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:port</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrId" type="infrastructureIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrId) and not(@uriRef)) or (not(@uidRef) and infrId and not(@uriRef)) or (not(@uidRef) and not(infrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="powerGridRef">
		<xsd:annotation>
			<xsd:documentation>
    PowerGrid is an Infrastructure used to generate, transport and distribute power.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:powerGrid</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrId" type="infrastructureIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrId) and not(@uriRef)) or (not(@uidRef) and infrId and not(@uriRef)) or (not(@uidRef) and not(infrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="pressureSensorRef">
		<xsd:annotation>
			<xsd:documentation>
    PressureSensor is a SensorType that measures pressure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:pressureSensor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productRef">
		<xsd:annotation>
			<xsd:documentation>
    Product is [class] that represents a family of items which share the same underlying design purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:product</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="prodId" type="productIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="prod[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(prodId) and not(@uriRef)) or (not(@uidRef) and prodId and not(@uriRef)) or (not(@uidRef) and not(prodId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductOperationalRole is a class that defines a specific use that the associated ProductOperationalRoleItem must be able to perform.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="opRoleId" type="productOperationalRoleIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="oprole[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(opRoleId) and not(@uriRef)) or (not(@uidRef) and opRoleId and not(@uriRef)) or (not(@uidRef) and not(opRoleId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfigurationRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductOperationalRoleConfiguration is a [class] that defines a permitted combination of product operational role kits  to be used in order to realize the 
    associated ProductOperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleConfiguration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="opRoleId" type="productOperationalRoleIdentifier"/>
			<xsd:element name="roleConfId" type="productOperationalRoleConfigurationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="oproleconf[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(opRoleId) and not(@uriRef)) or (not(@uidRef) and opRoleId and not(@uriRef)) or (not(@uidRef) and not(opRoleId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfigurationRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductOperationalRoleConfigurationRevision is a [class] representing an iteration applied to a ProductOperationalRoleConfiguration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleConfigurationRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="opRoleId" type="productOperationalRoleIdentifier"/>
			<xsd:element name="roleConfId" type="productOperationalRoleConfigurationIdentifier"/>
			<xsd:element name="revId" type="productOperationalRoleConfigurationRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="confrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(opRoleId) and not(@uriRef)) or (not(@uidRef) and opRoleId and not(@uriRef)) or (not(@uidRef) and not(opRoleId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleConfigurationRoleKitRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductOperationalRoleConfigurationRoleKit is a [relationship] that identifies a ProductOperationalRoleKit defined for the product, which can or must be 
    installed on the product when configured to perform the specified ProductOperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleConfigurationRoleKit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="roleConfRevRef" type="productOperationalRoleConfigurationRevisionRef"/>
			<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="roleconfkit[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(roleConfRevRef) and not(@uriRef)) or (not(@uidRef) and roleConfRevRef and not(@uriRef)) or (not(@uidRef) and not(roleConfRevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productOperationalRoleKitRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductOperationalRoleKit is a [class] that specifies a combination of hardware that must be installed as a whole in order to support one or many product 
    operational roles.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productOperationalRoleKit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="roleKitId" type="productOperationalRoleKitIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="oprolekit[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(roleKitId) and not(@uriRef)) or (not(@uidRef) and roleKitId and not(@uriRef)) or (not(@uidRef) and not(roleKitId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productParameterAtOperationalEventRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductParameterAtOperationalEvent provides the value of a Product parameter when an operational event occurred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productParameterAtOperationalEvent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="eventId" type="eventIdentifier"/>
			<xsd:element name="paramId" type="productParametersAtOperationalEventIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="prodpoev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(eventId) and not(@uriRef)) or (not(@uidRef) and eventId and not(@uriRef)) or (not(@uidRef) and not(eventId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductUsagePhase is a distinct period of time during which a Product, ProductVariant or SerializedProductVariant will be used in a specific way, which is 
    different from any other ProductUsagePhase.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productUsagePhase</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="phaseId" type="productUsagePhaseIdentifier"/>
			<xsd:element name="phseName" type="productUsagePhaseName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="pup[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(phaseId) and not(@uriRef)) or (not(@uidRef) and phaseId and not(@uriRef)) or (not(@uidRef) and not(phaseId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseHierarchicalRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductUsagePhaseHierarchicalRelationship is a [relationship] that allows to define a hierarchical association between two ProductUsagePhases.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productUsagePhaseHierarchicalRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="pupRef" type="productUsagePhaseRef"/>
			<xsd:element name="relType" type="productUsagePhaseRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="puprel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(pupRef) and not(@uriRef)) or (not(@uidRef) and pupRef and not(@uriRef)) or (not(@uidRef) and not(pupRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductUsagePhaseRelationship is a [relationship] where one ProductUsagePhase relates to another ProductUsagePhase.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productUsagePhaseRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="usePhseRef" type="productUsagePhaseRef"/>
			<xsd:element name="pupRef" type="productUsagePhaseRef"/>
			<xsd:element name="pupRef" type="productUsagePhaseRef"/>
			<xsd:element name="pupRef" type="productUsagePhaseRef"/>
			<xsd:element name="relType" type="productUsagePhaseRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="puprel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(usePhseRef) and not(@uriRef)) or (not(@uidRef) and usePhseRef and not(@uriRef)) or (not(@uidRef) and not(usePhseRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseSequentialRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductUsagePhaseSequentialRelationship is a [relationship] that allows to define a sequential association between two ProductUsagePhases.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productUsagePhaseSequentialRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="pupRef" type="productUsagePhaseRef"/>
			<xsd:element name="relType" type="productUsagePhaseRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="puprel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(pupRef) and not(@uriRef)) or (not(@uidRef) and pupRef and not(@uriRef)) or (not(@uidRef) and not(pupRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductVariant is a [class] that defines a member of a Product family which is configured for a specific purpose and is made available to the market.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="prodId" type="productIdentifier"/>
			<xsd:element name="prodVarId" type="productVariantIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="prodv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(prodId) and not(@uriRef)) or (not(@uidRef) and prodId and not(@uriRef)) or (not(@uidRef) and not(prodId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantMaintenanceRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductVariantMaintenance is a [relationship] allowing to associate a MaintenanceOrganisation (relating) to the ProductVariants it can maintain (related).
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantMaintenance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="morgRef" type="maintenanceOrganizationRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="prodvm[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(morgRef) and not(@uriRef)) or (not(@uidRef) and morgRef and not(@uriRef)) or (not(@uidRef) and not(morgRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productVariantSupportedByPoolRef">
		<xsd:annotation>
			<xsd:documentation>
    ProductVariantSupportedByPool is a [relationship] that indicates that a ProductVariant is supported by a defined part Pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:productVariantSupportedByPool</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="poolRef" type="poolRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="prodvsp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(prodVarRef) and not(@uriRef)) or (not(@uidRef) and prodVarRef and not(@uriRef)) or (not(@uidRef) and not(prodVarRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="projectRef">
		<xsd:annotation>
			<xsd:documentation>
    Project is a [class] that represents the overall set of Integrated Product Support (IPS) activities defined for a Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:project</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="projId" type="projectIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="proj[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(projId) and not(@uriRef)) or (not(@uidRef) and projId and not(@uriRef)) or (not(@uidRef) and not(projId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="projectContractRef">
		<xsd:annotation>
			<xsd:documentation>
    ProjectContract is a [relationship] that establishes an association between a Project and a Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:projectContract</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="projRef" type="projectRef"/>
			<xsd:element name="contrRef" type="contractRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="projcontr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(projRef) and not(@uriRef)) or (not(@uidRef) and projRef and not(@uriRef)) or (not(@uidRef) and not(projRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="projectRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    ProjectRelationship is a [relationship] where one Project relates to another Project.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:projectRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="projRef" type="projectRef"/>
			<xsd:element name="projRef" type="projectRef"/>
			<xsd:element name="relType" type="projectRelationshipType"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="projr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(projRef) and not(@uriRef)) or (not(@uidRef) and projRef and not(@uriRef)) or (not(@uidRef) and not(projRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="recordedFaultSymptomRef">
		<xsd:annotation>
			<xsd:documentation>
    RecordedFaultSymptom is a [class] that represents an indication of the existence of a Fault that has been recorded by a monitoring device.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:recordedFaultSymptom</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="faultId" type="faultIdentifier"/>
			<xsd:element name="sympId" type="faultSymptomIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fltsym[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(faultId) and not(@uriRef)) or (not(@uidRef) and faultId and not(@uriRef)) or (not(@uidRef) and not(faultId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="recoveredItemRef">
		<xsd:annotation>
			<xsd:documentation>
    RecoveredItem is a [relationship] that allows to identify the items that have been recovered as part of an ItemDisposalOperation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:recoveredItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="dispOperRef" type="itemDisposalOperationRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="recovitem[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(dispOperRef) and not(@uriRef)) or (not(@uidRef) and dispOperRef and not(@uriRef)) or (not(@uidRef) and not(dispOperRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="rectifyingTaskRef">
		<xsd:annotation>
			<xsd:documentation>
    RectifyingTask is a Task that ensures or returns the function of the associated item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:rectifyingTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskId" type="taskIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="task[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskId) and not(@uriRef)) or (not(@uidRef) and taskId and not(@uriRef)) or (not(@uidRef) and not(taskId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="referencedDigitalFileRef">
		<xsd:annotation>
			<xsd:documentation>
    ReferencedDigitalFile is a [relationship> that allows an item to refer to a DigitalFile.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:referencedDigitalFile</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="anlysRevRef" type="analysisActivityRevisionRef"/>
				<xsd:element name="assDegrRef" type="associatedDegradationMechanismRef"/>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="bkdnRevRef" type="breakdownRevisionRef"/>
				<xsd:element name="capDefRevRef" type="capabilityDefinitionRevisionRef"/>
				<xsd:element name="cargoRef" type="cargoItemRef"/>
				<xsd:element name="chgAuthRef" type="changeAuthorizationRef"/>
				<xsd:element name="crRef" type="changeRequestRef"/>
				<xsd:element name="cbRef" type="circuitBreakerRef"/>
				<xsd:element name="compDefRef" type="competencyDefinitionRef"/>
				<xsd:element name="dmgDefRef" type="damageDefinitionRef"/>
				<xsd:element name="degrMechRef" type="degradationMechanismRef"/>
				<xsd:element name="docRef" type="documentRef"/>
				<xsd:element name="envRef" type="environmentRef"/>
				<xsd:element name="envDefRevRef" type="environmentDefinitionRevisionRef"/>
				<xsd:element name="evRef" type="eventRef"/>
				<xsd:element name="expContrLicRef" type="exportControlLicenseRef"/>
				<xsd:element name="fModeRef" type="failureModeRef"/>
				<xsd:element name="fModeCauseRef" type="failureModeCauseRef"/>
				<xsd:element name="fModeEfctRef" type="failureModeEffectRef"/>
				<xsd:element name="fleetRef" type="fleetRef"/>
				<xsd:element name="geoAreaRef" type="geographicalAreaRef"/>
				<xsd:element name="globPosRef" type="globalPositionRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
				<xsd:element name="instLocRef" type="installationLocationRef"/>
				<xsd:element name="mtrlDefRevRef" type="materialDefinitionRevisionRef"/>
				<xsd:element name="mPointRef" type="measurementPointRef"/>
				<xsd:element name="mPointDefRef" type="measuringPointDefinitionRef"/>
				<xsd:element name="missnDRevRef" type="missionDefinitionRevisionRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="orgStrRevRef" type="organizationalBreakdownStructureRevisionRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="poolRef" type="poolRef"/>
				<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef"/>
				<xsd:element name="rptdIssRef" type="reportedIssueRef"/>
				<xsd:element name="rptdMetrRef" type="reportedMetricRef"/>
				<xsd:element name="resSpecRef" type="resourceSpecificationRef"/>
				<xsd:element name="resSpecRevRef" type="resourceSpecificationRevisionRef"/>
				<xsd:element name="restrRef" type="restrictionRef"/>
				<xsd:element name="secRef" type="securityClassificationRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="servRef" type="serviceRef"/>
				<xsd:element name="spEvDefRef" type="specialEventDefinitionRef"/>
				<xsd:element name="strAddrRef" type="streetAddressRef"/>
				<xsd:element name="subtByDefRef" type="subtaskByDefinitionRef"/>
				<xsd:element name="taskRef" type="taskRef"/>
				<xsd:element name="wcRef" type="warrantyClaimRef"/>
				<xsd:element name="beZoneRevRef" type="zoneElementRevisionRef"/>
			</xsd:choice>
			<xsd:element name="fileRef" type="digitalFileRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="reffile[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fileRef) and not(@uriRef)) or (not(@uidRef) and fileRef and not(@uriRef)) or (not(@uidRef) and not(fileRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="referencedDocumentRef">
		<xsd:annotation>
			<xsd:documentation>
    ReferencedDocument is a [relationship] where one DocumentReferencingItem relates to a DocumentItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:referencedDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="accRef" type="accelerometerRef"/>
				<xsd:element name="actionRef" type="actionRef"/>
				<xsd:element name="beAggrRef" type="aggregatedElementRef"/>
				<xsd:element name="taskLocRef" type="allocatedTaskLocationRef"/>
				<xsd:element name="allwdPCRef" type="allowedProductConfigurationByConfigurationIdentifierRef"/>
				<xsd:element name="hwConfPartRef" type="allowedProductConfigurationHardwarePartDefinitionRef"/>
				<xsd:element name="alPrCoRoRef" type="allowedProductConfigurationRoleRef"/>
				<xsd:element name="arcRef" type="allowedRoleChangeRef"/>
				<xsd:element name="altPartRef" type="alternatePartDefinitionRef"/>
				<xsd:element name="anlysActRef" type="analysisActivityRef"/>
				<xsd:element name="anlysRevRef" type="analysisActivityRevisionRef"/>
				<xsd:element name="anchorPtRef" type="anchoringPointRef"/>
				<xsd:element name="applicDefRef" type="applicabilityStatementRef"/>
				<xsd:element name="itemEnvRef" type="associatedActualEnvironmentRef"/>
				<xsd:element name="assDegrRef" type="associatedDegradationMechanismRef"/>
				<xsd:element name="assEnvDefRef" type="associatedEnvironmentDefinitionRef"/>
				<xsd:element name="authReqRef" type="authorityRequirementRef"/>
				<xsd:element name="authToOpRef" type="authorizationToOperateRef"/>
				<xsd:element name="availRef" type="availabilityRef"/>
				<xsd:element name="batchPartRef" type="batchHardwarePartRef"/>
				<xsd:element name="bkdnRef" type="breakdownRef"/>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="beInZoneRef" type="breakdownElementInZoneRef"/>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="beRelRef" type="breakdownElementRevisionRelationshipRef"/>
				<xsd:element name="beChildRef" type="breakdownElementStructureRef"/>
				<xsd:element name="attachBeRef" type="breakdownElementUsageAttachmentRelationshipRef"/>
				<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
				<xsd:element name="relBeRef" type="breakdownElementUsageRelationshipRef"/>
				<xsd:element name="bkdnRevRef" type="breakdownRevisionRef"/>
				<xsd:element name="bkdnRevRelRef" type="breakdownRevisionRelationshipRef"/>
				<xsd:element name="budgRef" type="budgetRef"/>
				<xsd:element name="calibRef" type="calibrationRef"/>
				<xsd:element name="calDocRef" type="calibrationDocumentRef"/>
				<xsd:element name="capRef" type="capabilityRef"/>
				<xsd:element name="capDefRef" type="capabilityDefinitionRef"/>
				<xsd:element name="capDefCharRef" type="capabilityDefinitionCharacteristicRef"/>
				<xsd:element name="capDefRevRef" type="capabilityDefinitionRevisionRef"/>
				<xsd:element name="capLimRef" type="capabilityLimitationRef"/>
				<xsd:element name="cargoRef" type="cargoItemRef"/>
				<xsd:element name="chgAuthRef" type="changeAuthorizationRef"/>
				<xsd:element name="chItAvRqRef" type="changedItemAvailabilityRequirementRef"/>
				<xsd:element name="chEmReqRef" type="changeEmbodimentRequirementRef"/>
				<xsd:element name="chgRef" type="changeNotificationRef"/>
				<xsd:element name="crRef" type="changeRequestRef"/>
				<xsd:element name="crMatRef" type="changeRequestAddedOrRemovedMaterialRef"/>
				<xsd:element name="crSubsRef" type="changeRequestAddedOrRemovedSubstanceRef"/>
				<xsd:element name="crCauseRef" type="changeRequestCauseRef"/>
				<xsd:element name="crConsumpRef" type="changeRequestConsumptionChangeRef"/>
				<xsd:element name="crEmissRef" type="changeRequestEmissionChangeRef"/>
				<xsd:element name="crPartyRef" type="changeRequestPartyRef"/>
				<xsd:element name="crRtnleRef" type="changeRequestRationaleRef"/>
				<xsd:element name="crTargetRef" type="changeRequestTargetRef"/>
				<xsd:element name="cbRef" type="circuitBreakerRef"/>
				<xsd:element name="cbLocRef" type="circuitBreakerLocationRef"/>
				<xsd:element name="cbSettingRef" type="circuitBreakerSettingRef"/>
				<xsd:element name="cbSettingsRef" type="circuitBreakerSettingsRef"/>
				<xsd:element name="cloudRef" type="cloudInfrastructureRef"/>
				<xsd:element name="cmtRef" type="commentRef"/>
				<xsd:element name="cmtActRef" type="commentActionRef"/>
				<xsd:element name="cmtPtyRef" type="commentPartyRef"/>
				<xsd:element name="cmtRelRef" type="commentRelationshipRef"/>
				<xsd:element name="commNetRef" type="communicationsNetworkRef"/>
				<xsd:element name="compDefRef" type="competencyDefinitionRef"/>
				<xsd:element name="compDefRelRef" type="competencyDefinitionRelationshipRef"/>
				<xsd:element name="compFrwkRef" type="competencyFrameworkRef"/>
				<xsd:element name="compWRef" type="compliesWithRef"/>
				<xsd:element name="compNetRef" type="computerNetworkRef"/>
				<xsd:element name="condInstRef" type="conditionInstanceRef"/>
				<xsd:element name="condTypeRef" type="conditionTypeRef"/>
				<xsd:element name="condMembRef" type="conditionTypeAssertMemberRef"/>
				<xsd:element name="consqRef" type="consequenceRef"/>
				<xsd:element name="consiRef" type="consumableItemRef"/>
				<xsd:element name="conspRef" type="consumptionRef"/>
				<xsd:element name="contMatRef" type="containedMaterialRef"/>
				<xsd:element name="contSubsRef" type="containedSubstanceRef"/>
				<xsd:element name="containerRef" type="containerAsDesignedRef"/>
				<xsd:element name="contPartRef" type="containerPartRef"/>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="contrClauseRef" type="contractClauseRef"/>
				<xsd:element name="clauseRelRef" type="contractClauseRelationshipRef"/>
				<xsd:element name="contrLaborRef" type="contractLaborRef"/>
				<xsd:element name="contrPtyRef" type="contractPartyRef"/>
				<xsd:element name="contrRelRef" type="contractRelationshipRef"/>
				<xsd:element name="contrSubjRef" type="contractSubjectRef"/>
				<xsd:element name="costBkdnRef" type="costBreakdownRef"/>
				<xsd:element name="costBkdnRevRef" type="costBreakdownRevisionRef"/>
				<xsd:element name="costEntryRef" type="costEntryRef"/>
				<xsd:element name="costItemRef" type="costItemRef"/>
				<xsd:element name="countryRef" type="countryRef"/>
				<xsd:element name="dmgRef" type="damageRef"/>
				<xsd:element name="dmgAnlysRef" type="damageAnalysisRef"/>
				<xsd:element name="dmgAnlysRevRef" type="damageAnalysisRevisionRef"/>
				<xsd:element name="dmgCharRef" type="damageCharacteristicRef"/>
				<xsd:element name="dmgDefRef" type="damageDefinitionRef"/>
				<xsd:element name="dmgDefCauseRef" type="damageDefinitionCauseRef"/>
				<xsd:element name="dmgDefImpctRef" type="damageDefinitionImpactRef"/>
				<xsd:element name="datarequestRef" type="dataRequestRef"/>
				<xsd:element name="datarequestCNameRef" type="dataRequestByClassNameRef"/>
				<xsd:element name="datarequestIdRef" type="dataRequestByIdentifierRef"/>
				<xsd:element name="dataRequestUCRef" type="dataRequestByUseCaseNameRef"/>
				<xsd:element name="dataPartRef" type="dataSetAsDesignedRef"/>
				<xsd:element name="dataRelPartRef" type="dataSetAsReleasedRef"/>
				<xsd:element name="dataRelRef" type="dataSetAssociatedWithRef"/>
				<xsd:element name="dcsnTmplRef" type="decisionTreeTemplateRef"/>
				<xsd:element name="degrMechRef" type="degradationMechanismRef"/>
				<xsd:element name="featAccptCritRef" type="degradationMechanismAcceptanceCriteriaRef"/>
				<xsd:element name="derCRReqRef" type="derivedChangeRequestRequirementRef"/>
				<xsd:element name="detMeCapRef" type="detectionMeanCapabilityRef"/>
				<xsd:element name="detmecRef" type="detectionMechanismRef"/>
				<xsd:element name="fileRef" type="digitalFileRef"/>
				<xsd:element name="fileRefRef" type="digitalFileReferenceRef"/>
				<xsd:element name="discrTimeLimRef" type="discreteTimeLimitRef"/>
				<xsd:element name="dispLocRef" type="disposalLocationRef"/>
				<xsd:element name="dispReqRef" type="disposalRequirementRef"/>
				<xsd:element name="dispTransReqRef" type="disposalTransportRequirementRef"/>
				<xsd:element name="docRef" type="documentRef"/>
				<xsd:element name="docIssRef" type="documentIssueRef"/>
				<xsd:element name="docPtyRef" type="documentPartyRef"/>
				<xsd:element name="dwnTPRef" type="downTimePeriodRef"/>
				<xsd:element name="allwdPCEfyRef" type="effectiveOnProductConfigurationRef"/>
				<xsd:element name="envRef" type="environmentRef"/>
				<xsd:element name="envDefRef" type="environmentDefinitionRef"/>
				<xsd:element name="envDefCharRef" type="environmentDefinitionCharacteristicRef"/>
				<xsd:element name="envDefRelRef" type="environmentDefinitionRelationshipRef"/>
				<xsd:element name="envDefRevRef" type="environmentDefinitionRevisionRef"/>
				<xsd:element name="envRelRef" type="environmentRelationshipRef"/>
				<xsd:element name="envRevRef" type="environmentRevisionRef"/>
				<xsd:element name="eqOpRef" type="equipmentOperationRef"/>
				<xsd:element name="eqOwnRef" type="equipmentOwnerRef"/>
				<xsd:element name="assrtInstRef" type="evaluationByAssertionOfClassInstanceRef"/>
				<xsd:element name="assrtCondRef" type="evaluationByAssertionOfConditionRef"/>
				<xsd:element name="assrtPeriodRef" type="evaluationByAssertionOfDateRangeRef"/>
				<xsd:element name="assrtSiRef" type="evaluationByAssertionOfSerializedItemsRef"/>
				<xsd:element name="nestedApplicRef" type="evaluationByNestedApplicabilityStatementRef"/>
				<xsd:element name="evNestedRef" type="evaluationByNestedExpressionRef"/>
				<xsd:element name="evalRef" type="evaluationCriteriaRef"/>
				<xsd:element name="evRef" type="eventRef"/>
				<xsd:element name="evabeRef" type="eventAffectedBreakdownElementRef"/>
				<xsd:element name="evExRef" type="eventExplanationRef"/>
				<xsd:element name="evrRef" type="eventRelationshipRef"/>
				<xsd:element name="evRelItemRef" type="eventRelationshipItemRef"/>
				<xsd:element name="evntRepRef" type="eventReporterRef"/>
				<xsd:element name="evntThldRef" type="eventThresholdDefinitionRef"/>
				<xsd:element name="expfRef" type="explanatoryFactorRef"/>
				<xsd:element name="expContrLicRef" type="exportControlLicenseRef"/>
				<xsd:element name="expLicItemRef" type="exportControlLicenseItemRef"/>
				<xsd:element name="expContrPtyRef" type="exportControlPartyRef"/>
				<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
				<xsd:element name="exConReqCoRef" type="exportControlRequirementAppliedToCountryRef"/>
				<xsd:element name="expevRef" type="expressionEvaluationRef"/>
				<xsd:element name="exdocRef" type="externalDocumentRef"/>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="fcltyLocRef" type="facilityLocationRef"/>
				<xsd:element name="fcltyOperRef" type="facilityOperatorRef"/>
				<xsd:element name="facOwnRef" type="facilityOwnerRef"/>
				<xsd:element name="fcltyRelRef" type="facilityRelationshipRef"/>
				<xsd:element name="fdRef" type="failureDetectionRef"/>
				<xsd:element name="fModeRef" type="failureModeRef"/>
				<xsd:element name="fmeaRef" type="failureModeAnalysisRef"/>
				<xsd:element name="fmeaRevRef" type="failureModeAnalysisRevisionRef"/>
				<xsd:element name="fModeCauseRef" type="failureModeCauseRef"/>
				<xsd:element name="causeRelRef" type="failureModeCauseItemRelationshipRef"/>
				<xsd:element name="fModeCompRef" type="failureModeCompensatingProvisionRef"/>
				<xsd:element name="fModeEfctRef" type="failureModeEffectRef"/>
				<xsd:element name="efctRelRef" type="failureModeEffectItemRelationshipRef"/>
				<xsd:element name="eqfltRef" type="faultRef"/>
				<xsd:element name="fltcauRef" type="faultCauseRef"/>
				<xsd:element name="fltsymRef" type="faultSymptomRef"/>
				<xsd:element name="fleetRef" type="fleetRef"/>
				<xsd:element name="fltbaseRef" type="fleetBasedAtRef"/>
				<xsd:element name="fltOpRef" type="fleetOperatedByRef"/>
				<xsd:element name="fltOpLocRef" type="fleetOperatesAtLocationRef"/>
				<xsd:element name="fltplRef" type="fleetPlanningRef"/>
				<xsd:element name="fltRelRef" type="fleetRelationshipRef"/>
				<xsd:element name="fleetReqRef" type="fleetRequirementRef"/>
				<xsd:element name="fltTskRef" type="fleetTaskRef"/>
				<xsd:element name="flTskCNRef" type="fleetTaskCancellationNoticeRef"/>
				<xsd:element name="fltTskCRef" type="fleetTaskCargoRef"/>
				<xsd:element name="fltTskLstRef" type="fleetTaskListRef"/>
				<xsd:element name="geoAreaRef" type="geographicalAreaRef"/>
				<xsd:element name="globPosRef" type="globalPositionRef"/>
				<xsd:element name="beHwRef" type="hardwareElementRef"/>
				<xsd:element name="beHwConnRef" type="hardwareElementAttachingConnectorRef"/>
				<xsd:element name="beHwSlotRef" type="hardwareElementAttachmentSlotRef"/>
				<xsd:element name="beHwRealRef" type="hardwareElementPartRealizationRef"/>
				<xsd:element name="beHwRevRef" type="hardwareElementRevisionRef"/>
				<xsd:element name="hwPartContainerRef" type="hardwarePartContainerRef"/>
				<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
				<xsd:element name="infltsymRef" type="indicatedFaultSymptomRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="infrAvailRef" type="infrastructureAvailableRef"/>
				<xsd:element name="infrNodeRef" type="infrastructureNodeRef"/>
				<xsd:element name="nodeAtLocRef" type="infrastructureNodeAtLocationRef"/>
				<xsd:element name="nodeRealRef" type="infrastructureNodeRealizationRef"/>
				<xsd:element name="infOpRef" type="infrastructureOperatingPeriodRef"/>
				<xsd:element name="infrPtyRef" type="infrastructurePartyRef"/>
				<xsd:element name="infrRelRef" type="infrastructureRelationshipRef"/>
				<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
				<xsd:element name="isoAnlysRef" type="inServiceOptimizationAnalysisRef"/>
				<xsd:element name="instLocRef" type="installationLocationRef"/>
				<xsd:element name="instPartRef" type="installedPartRef"/>
				<xsd:element name="invactRef" type="inventoryActivityRef"/>
				<xsd:element name="dispOrgRef" type="involvedDisposalOrganizationRef"/>
				<xsd:element name="dispOperRef" type="itemDisposalOperationRef"/>
				<xsd:element name="dispActionRef" type="itemDisposalOperationActionRef"/>
				<xsd:element name="iDispReqRef" type="itemDisposalRequirementRef"/>
				<xsd:element name="itexcoreRef" type="itemExportControlRegulationRef"/>
				<xsd:element name="siwRef" type="itemWarrantyRef"/>
				<xsd:element name="labRateRef" type="laborRatesRef"/>
				<xsd:element name="localPosRef" type="localPositionRef"/>
				<xsd:element name="transpPosRefRef" type="localPositionRef"/>
				<xsd:element name="locRelRef" type="locationRelationshipRef"/>
				<xsd:element name="loctrRef" type="locatorRef"/>
				<xsd:element name="logRef" type="logBookRef"/>
				<xsd:element name="logeRef" type="logBookEntryRef"/>
				<xsd:element name="logecRef" type="logBookEntryMeasurementPointRef"/>
				<xsd:element name="evalAndRef" type="logicalAndRef"/>
				<xsd:element name="evalNotRef" type="logicalNotRef"/>
				<xsd:element name="evalOrRef" type="logicalOrRef"/>
				<xsd:element name="evalXorRef" type="logicalXorRef"/>
				<xsd:element name="looseWasteRef" type="looseWasteRef"/>
				<xsd:element name="mactRef" type="maintenanceActivityRef"/>
				<xsd:element name="mactdRef" type="maintenanceActivityDocumentRef"/>
				<xsd:element name="mactptyRef" type="maintenanceActivityPartyRef"/>
				<xsd:element name="mevRef" type="maintenanceEventRef"/>
				<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
				<xsd:element name="mfaclRef" type="maintenanceFacilityLevelRef"/>
				<xsd:element name="mfacsRef" type="maintenanceFacilitySlotRef"/>
				<xsd:element name="mfacsaRef" type="maintenanceFacilitySlotAccomodationRef"/>
				<xsd:element name="mfacspuRef" type="maintenanceFacilitySlotPlannedUsageRef"/>
				<xsd:element name="mlvRef" type="maintenanceLevelRef"/>
				<xsd:element name="mlicRef" type="maintenanceLicenseRef"/>
				<xsd:element name="morgRef" type="maintenanceOrganizationRef"/>
				<xsd:element name="morgapRef" type="maintenanceOrganizationApprovalRef"/>
				<xsd:element name="mpRef" type="maintenancePersonRef"/>
				<xsd:element name="mpapRef" type="maintenancePersonApprovedProductRef"/>
				<xsd:element name="mpfRef" type="maintenancePersonFacilityRef"/>
				<xsd:element name="mprRef" type="maintenanceProgramRef"/>
				<xsd:element name="mprrRef" type="maintenanceProgramRevisionRef"/>
				<xsd:element name="maintReqRef" type="maintenanceRequirementRef"/>
				<xsd:element name="mcRef" type="majorComponentRef"/>
				<xsd:element name="fleetManRef" type="managedFleetRef"/>
				<xsd:element name="matRef" type="materialRef"/>
				<xsd:element name="mtrlDefRef" type="materialDefinitionRef"/>
				<xsd:element name="mtrlDefRevRef" type="materialDefinitionRevisionRef"/>
				<xsd:element name="mPointRef" type="measurementPointRef"/>
				<xsd:element name="mPointDefRef" type="measuringPointDefinitionRef"/>
				<xsd:element name="msgRef" type="messageRef"/>
				<xsd:element name="msgContextRef" type="messageContextRef"/>
				<xsd:element name="msgPtyRef" type="messagePartyRef"/>
				<xsd:element name="relatedMsgRef" type="messageRelationshipRef"/>
				<xsd:element name="missnDefRef" type="missionDefinitionRef"/>
				<xsd:element name="missnDRevRef" type="missionDefinitionRevisionRef"/>
				<xsd:element name="mvRef" type="movementRef"/>
				<xsd:element name="movlegRef" type="movementLegRef"/>
				<xsd:element name="mvldRef" type="movementLegDelayRef"/>
				<xsd:element name="mvlgRef" type="movementLegPositionRef"/>
				<xsd:element name="mroNetRef" type="mRONetworkRef"/>
				<xsd:element name="nestedAPCRef" type="nestedAllowedProductConfigurationRef"/>
				<xsd:element name="nestedPVRef" type="nestedProductVariantRef"/>
				<xsd:element name="nstspvRef" type="nestedSerializedProductVariantRef"/>
				<xsd:element name="navcauRef" type="nonAvailabilityCauseRef"/>
				<xsd:element name="obfltsymRef" type="observedFaultSymptomRef"/>
				<xsd:element name="obscpRef" type="obsolescenceParameterRef"/>
				<xsd:element name="obsReqRef" type="obsolescenceRequirementRef"/>
				<xsd:element name="opBaseRef" type="operatingBaseRef"/>
				<xsd:element name="opbcRef" type="operatingBaseCapacityRef"/>
				<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef"/>
				<xsd:element name="opacRef" type="operationalActivityRef"/>
				<xsd:element name="opapRef" type="operationalApprovalRef"/>
				<xsd:element name="opevRef" type="operationalEventRef"/>
				<xsd:element name="opevmRef" type="operationalEventMessageRef"/>
				<xsd:element name="opevoRef" type="operationalEventOperatorRef"/>
				<xsd:element name="opmRef" type="operationalModeRef"/>
				<xsd:element name="oppRef" type="operationalPeriodRef"/>
				<xsd:element name="oppoRef" type="operationalPeriodOperatorRef"/>
				<xsd:element name="opprRef" type="operationalPeriodRelationshipRef"/>
				<xsd:element name="operReqRef" type="operationalRequirementRef"/>
				<xsd:element name="oprpRef" type="operationalRequirementsPlanningRef"/>
				<xsd:element name="opRoleRef" type="operationalRoleRef"/>
				<xsd:element name="roleKitImpctRef" type="operationalRoleKitImpactRef"/>
				<xsd:element name="opTaskRef" type="operationalTaskRef"/>
				<xsd:element name="operOrgRef" type="operatorOrganizationRef"/>
				<xsd:element name="operPersRef" type="operatorPersonRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="orgStrRef" type="organizationalBreakdownStructureRef"/>
				<xsd:element name="orgStrRevRef" type="organizationalBreakdownStructureRevisionRef"/>
				<xsd:element name="orgUnitRef" type="organizationalUnitRef"/>
				<xsd:element name="unitMembRef" type="organizationalUnitMemberRef"/>
				<xsd:element name="unitRelRef" type="organizationalUnitRelationshipRef"/>
				<xsd:element name="operOrgApprRef" type="organizationOperationsApprovalRef"/>
				<xsd:element name="oFacRef" type="otherFacilityRef"/>
				<xsd:element name="paraThldRef" type="parameterThresholdDefinitionRef"/>
				<xsd:element name="parkFacRef" type="parkingFacilityRef"/>
				<xsd:element name="pactRef" type="partActionRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="partsListRef" type="partDefinitionPartsListRef"/>
				<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef"/>
				<xsd:element name="pListRelRef" type="partDefinitionPartsListRelationshipRef"/>
				<xsd:element name="pListRevRef" type="partDefinitionPartsListRevisionRef"/>
				<xsd:element name="sppartpRef" type="partInPoolRef"/>
				<xsd:element name="partwRef" type="partInWarehouseRef"/>
				<xsd:element name="partOwnerRef" type="partOwnerRef"/>
				<xsd:element name="ptyAddrRef" type="partyAddressRef"/>
				<xsd:element name="ptyRelRef" type="partyRelationshipRef"/>
				<xsd:element name="ptyRef" type="penaltyRef"/>
				<xsd:element name="prfmParaRef" type="performanceParameterRef"/>
				<xsd:element name="prfmPRevRef" type="performanceParameterRevisionRef"/>
				<xsd:element name="perTimeLimRef" type="periodicTimeLimitRef"/>
				<xsd:element name="persRef" type="personRef"/>
				<xsd:element name="mpcRef" type="personCompetenceRef"/>
				<xsd:element name="personCatRef" type="personGroupRef"/>
				<xsd:element name="operPersApprRef" type="personOperationsApprovalRef"/>
				<xsd:element name="pliuRef" type="plannedItemUpgradeRef"/>
				<xsd:element name="plpilRef" type="plannedPartInstallationLocationRef"/>
				<xsd:element name="plndTaskUseRef" type="plannedTaskUsageRef"/>
				<xsd:element name="plutRef" type="plannedUpgradeTimescalesRef"/>
				<xsd:element name="polRegRef" type="policiesAndRegulationsRef"/>
				<xsd:element name="poolRef" type="poolRef"/>
				<xsd:element name="pooloRef" type="poolOwnerRef"/>
				<xsd:element name="pinwhrRef" type="poolStockedInWareHouseRef"/>
				<xsd:element name="poolUsrRef" type="poolUserRef"/>
				<xsd:element name="portRef" type="portRef"/>
				<xsd:element name="pwrgridRef" type="powerGridRef"/>
				<xsd:element name="psensorRef" type="pressureSensorRef"/>
				<xsd:element name="prodRef" type="productRef"/>
				<xsd:element name="opRoleConfRef" type="productOperationalRoleConfigurationRef"/>
				<xsd:element name="roleConfRevRef" type="productOperationalRoleConfigurationRevisionRef"/>
				<xsd:element name="roleConfKitRef" type="productOperationalRoleConfigurationRoleKitRef"/>
				<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef"/>
				<xsd:element name="prodpoevRef" type="productParameterAtOperationalEventRef"/>
				<xsd:element name="pupRef" type="productUsagePhaseRef"/>
				<xsd:element name="puphrRef" type="productUsagePhaseHierarchicalRelationshipRef"/>
				<xsd:element name="phseRelRef" type="productUsagePhaseRelationshipRef"/>
				<xsd:element name="pupsrRef" type="productUsagePhaseSequentialRelationshipRef"/>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="prodvmRef" type="productVariantMaintenanceRef"/>
				<xsd:element name="prodvspRef" type="productVariantSupportedByPoolRef"/>
				<xsd:element name="projRef" type="projectRef"/>
				<xsd:element name="projContrRef" type="projectContractRef"/>
				<xsd:element name="projRelRef" type="projectRelationshipRef"/>
				<xsd:element name="refltsymRef" type="recordedFaultSymptomRef"/>
				<xsd:element name="recovItemRef" type="recoveredItemRef"/>
				<xsd:element name="rectTaskRef" type="rectifyingTaskRef"/>
				<xsd:element name="refFileRef" type="referencedDigitalFileRef"/>
				<xsd:element name="refDocRef" type="referencedDocumentRef"/>
				<xsd:element name="refOrgRef" type="referencedOrganizationRef"/>
				<xsd:element name="reldataassRef" type="releasedDataSetAssociatedWithRef"/>
				<xsd:element name="repDefRef" type="repeatDefinitionRef"/>
				<xsd:element name="rptRef" type="reportRef"/>
				<xsd:element name="rptActRef" type="reportableActivityRef"/>
				<xsd:element name="rptActPtyRef" type="reportableActivityPartyRef"/>
				<xsd:element name="rptmRef" type="reportableMetricRef"/>
				<xsd:element name="rptCxtRef" type="reportContextRef"/>
				<xsd:element name="rptdIssRef" type="reportedIssueRef"/>
				<xsd:element name="rptdMetrRef" type="reportedMetricRef"/>
				<xsd:element name="rptPartyRef" type="reportPartyRef"/>
				<xsd:element name="dispPolRef" type="requiredDisposalPolicyRef"/>
				<xsd:element name="reqflrRef" type="requiredFleetRoleRef"/>
				<xsd:element name="reqpslpRef" type="requiredPartStockLevelInPoolRef"/>
				<xsd:element name="reqsaRef" type="requiredSafetyActionRef"/>
				<xsd:element name="reqRef" type="requirementRef"/>
				<xsd:element name="reqptyRef" type="requirementPartyRef"/>
				<xsd:element name="reqrelRef" type="requirementRelationshipRef"/>
				<xsd:element name="resSpecRef" type="resourceSpecificationRef"/>
				<xsd:element name="resSpecRealRef" type="resourceSpecificationRealizationRef"/>
				<xsd:element name="resSpecRevRef" type="resourceSpecificationRevisionRef"/>
				<xsd:element name="resupRef" type="resourceUsagePartyRef"/>
				<xsd:element name="resUsrRef" type="resourceUsageRequestRef"/>
				<xsd:element name="restrRef" type="restrictionRef"/>
				<xsd:element name="resDMRef" type="resultingDataModuleRef"/>
				<xsd:element name="rolecRef" type="roleCapabilityRef"/>
				<xsd:element name="s1000dDMRef" type="s1000DDataModuleRef"/>
				<xsd:element name="s1000dDMIssRef" type="s1000DDataModuleIssueRef"/>
				<xsd:element name="s1000dPMRef" type="s1000DPublicationModuleRef"/>
				<xsd:element name="s1000dPMIssRef" type="s1000DPublicationModuleIssueRef"/>
				<xsd:element name="safedocRef" type="safetyDocumentRef"/>
				<xsd:element name="safeissRef" type="safetyIssueRef"/>
				<xsd:element name="safeIssEvRef" type="safetyIssueEventRef"/>
				<xsd:element name="safeReqRef" type="safetyRequirementRef"/>
				<xsd:element name="safeReqDocRef" type="safetyRequirementsDocumentRef"/>
				<xsd:element name="safewRef" type="safetyWarningRef"/>
				<xsd:element name="scormRef" type="sCORMContentPackageRef"/>
				<xsd:element name="secClassDefRef" type="securityClassRef"/>
				<xsd:element name="secRef" type="securityClassificationRef"/>
				<xsd:element name="snsrRef" type="sensorRef"/>
				<xsd:element name="snsrsmpRef" type="sensorSampleRef"/>
				<xsd:element name="snsrtRef" type="sensorTypeRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="partModRef" type="serializedHardwarePartModificationRef"/>
				<xsd:element name="siowRef" type="serializedItemOwnerRef"/>
				<xsd:element name="spdaRef" type="serializedPartDesignAssociationRef"/>
				<xsd:element name="serPartPosRef" type="serializedPartsListPositionRef"/>
				<xsd:element name="sproopRef" type="serializedProductOperationalPeriodRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="spvaRef" type="serializedProductVariantAssignmentRef"/>
				<xsd:element name="serPVConfRef" type="serializedProductVariantConfigurationConformanceRef"/>
				<xsd:element name="inFleetRef" type="serializedProductVariantInFleetRef"/>
				<xsd:element name="spvobRef" type="serializedProductVariantOperatingBaseRef"/>
				<xsd:element name="serPVoperRef" type="serializedProductVariantOperatorRef"/>
				<xsd:element name="spvzRef" type="serializedProductVariantZoneRef"/>
				<xsd:element name="ssuppeqRef" type="serializedSupportEquipmentRef"/>
				<xsd:element name="servRef" type="serviceRef"/>
				<xsd:element name="servBuRef" type="serviceBulletinRef"/>
				<xsd:element name="servcRef" type="serviceContractRef"/>
				<xsd:element name="slacRef" type="serviceLevelAgreementClauseRef"/>
				<xsd:element name="servReqRef" type="serviceRequestRef"/>
				<xsd:element name="servrcRef" type="serviceRequestCancellationRef"/>
				<xsd:element name="servReqItemRef" type="serviceRequestItemRef"/>
				<xsd:element name="servrlRef" type="serviceRequestLocationRef"/>
				<xsd:element name="servrpRef" type="serviceRequestPartyRef"/>
				<xsd:element name="srvReqrRef" type="serviceRequestRelationshipRef"/>
				<xsd:element name="shopfRef" type="shopFindingsRef"/>
				<xsd:element name="shopfdRef" type="shopFindingsDeterminedByRef"/>
				<xsd:element name="skillRef" type="skillRef"/>
				<xsd:element name="skillLevelRef" type="skillLevelRef"/>
				<xsd:element name="beSwRef" type="softwareElementRef"/>
				<xsd:element name="beSwRealRef" type="softwareElementPartRealizationRef"/>
				<xsd:element name="beSwRevRef" type="softwareElementRevisionRef"/>
				<xsd:element name="swerrRef" type="softwareErrorRef"/>
				<xsd:element name="swerrosRef" type="softwareErrorOSRef"/>
				<xsd:element name="swerrpRef" type="softwareErrorPlatformRef"/>
				<xsd:element name="swosRef" type="softwareOSRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
				<xsd:element name="swPartRef" type="softwarePartDefinitionRef"/>
				<xsd:element name="swplRef" type="softwarePlatformRef"/>
				<xsd:element name="spEvDefRef" type="specialEventDefinitionRef"/>
				<xsd:element name="ssafeinsRef" type="specialSafetyInstructionRef"/>
				<xsd:element name="straingRef" type="strainGaugeRef"/>
				<xsd:element name="strAddrRef" type="streetAddressRef"/>
				<xsd:element name="subsRef" type="substanceDefinitionRef"/>
				<xsd:element name="subsRevRef" type="substanceDefinitionRevisionRef"/>
				<xsd:element name="subsEmRef" type="substanceEmissionRef"/>
				<xsd:element name="substPartRef" type="substitutePartDefinitionRef"/>
				<xsd:element name="subtRef" type="subtaskRef"/>
				<xsd:element name="subtByDefRef" type="subtaskByDefinitionRef"/>
				<xsd:element name="subtByRefRef" type="subtaskByTaskReferenceRef"/>
				<xsd:element name="inZoneRef" type="subtaskInZoneRef"/>
				<xsd:element name="sourceDocRef" type="subtaskSourceDocumentRef"/>
				<xsd:element name="subtTargRef" type="subtaskTargetRef"/>
				<xsd:element name="precSubtRef" type="subtaskTimelineRef"/>
				<xsd:element name="subtWcnRef" type="subtaskWarningCautionNoteRef"/>
				<xsd:element name="suppusedRef" type="suppliesUsedRef"/>
				<xsd:element name="suppeqRef" type="supportEquipmentRef"/>
				<xsd:element name="suppewuRef" type="supportEquipmentUsedRef"/>
				<xsd:element name="supTaskRef" type="supportingTaskRef"/>
				<xsd:element name="supTaskUseRef" type="supportingTaskUsageRef"/>
				<xsd:element name="tachoRef" type="tachometerRef"/>
				<xsd:element name="taskRef" type="taskRef"/>
				<xsd:element name="taskJustRef" type="taskJustificationRef"/>
				<xsd:element name="persResCompRef" type="taskPersonnelResourceCompetenceRef"/>
				<xsd:element name="taskReqRef" type="taskRequirementRef"/>
				<xsd:element name="trJustRef" type="taskRequirementJustificationRef"/>
				<xsd:element name="trRevRef" type="taskRequirementRevisionRef"/>
				<xsd:element name="taskResRef" type="taskResourceRef"/>
				<xsd:element name="taskRevRef" type="taskRevisionRef"/>
				<xsd:element name="taskWcnRef" type="taskRevisionWarningCautionNoteRef"/>
				<xsd:element name="taskUseRef" type="taskUsageRef"/>
				<xsd:element name="toRef" type="technicalOrderRef"/>
				<xsd:element name="toembRef" type="technicalOrderEmbodiedRef"/>
				<xsd:element name="tmpsnsrRef" type="temperatureSensorRef"/>
				<xsd:element name="thldRef" type="thresholdDefinitionRef"/>
				<xsd:element name="timeLimRef" type="timeLimitRef"/>
				<xsd:element name="tradeRef" type="tradeRef"/>
				<xsd:element name="tracapRef" type="transportCapabilityRef"/>
				<xsd:element name="tracapusRef" type="transportCapabilityUsageRef"/>
				<xsd:element name="transpNetRef" type="transportNetworkRef"/>
				<xsd:element name="transReqRef" type="transportRequirementRef"/>
				<xsd:element name="persTypeRef" type="typeOfPersonRef"/>
				<xsd:element name="unacceptRef" type="unacceptableConditionRef"/>
				<xsd:element name="upReqRef" type="upgradeRequirementRef"/>
				<xsd:element name="usableOnRef" type="usableOnProductVariantRef"/>
				<xsd:element name="whRef" type="warehouseRef"/>
				<xsd:element name="wcnRef" type="warningCautionNoteRef"/>
				<xsd:element name="wcRef" type="warrantyClaimRef"/>
				<xsd:element name="wccRef" type="warrantyClaimContactRef"/>
				<xsd:element name="wcevRef" type="warrantyClaimEventsRef"/>
				<xsd:element name="wcfRef" type="warrantyClaimFollowUpRef"/>
				<xsd:element name="wcrRef" type="warrantyClaimResolutionRef"/>
				<xsd:element name="wevRef" type="warrantyEventRef"/>
				<xsd:element name="wasteContRef" type="wasteContainerRef"/>
				<xsd:element name="wasteDispOpRef" type="wasteDisposalOperationRef"/>
				<xsd:element name="wasteDispOpActRef" type="wasteDisposalOperationActionRef"/>
				<xsd:element name="wDispReqRef" type="wasteDisposalRequirementRef"/>
				<xsd:element name="wasteRecovRef" type="wasteRecoveredItemRef"/>
				<xsd:element name="wbsRef" type="workBreakdownRef"/>
				<xsd:element name="wbsRevRef" type="workBreakdownRevisionRef"/>
				<xsd:element name="workItemRef" type="workItemRef"/>
				<xsd:element name="woRef" type="workOrderRef"/>
				<xsd:element name="beZoneRef" type="zoneElementRef"/>
				<xsd:element name="beZoneRevRef" type="zoneElementRevisionRef"/>
			</xsd:choice>
			<xsd:element name="docItem" type="documentItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="docasg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docItem) and not(@uriRef)) or (not(@uidRef) and docItem and not(@uriRef)) or (not(@uidRef) and not(docItem) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="referencedOrganizationRef">
		<xsd:annotation>
			<xsd:documentation>
    ReferencedOrganization is a [relationship] where one OrganizationReferencingItem relates to an Organization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:referencedOrganization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="accRef" type="accelerometerRef"/>
				<xsd:element name="actionRef" type="actionRef"/>
				<xsd:element name="beAggrRef" type="aggregatedElementRef"/>
				<xsd:element name="taskLocRef" type="allocatedTaskLocationRef"/>
				<xsd:element name="allwdPCRef" type="allowedProductConfigurationByConfigurationIdentifierRef"/>
				<xsd:element name="hwConfPartRef" type="allowedProductConfigurationHardwarePartDefinitionRef"/>
				<xsd:element name="alPrCoRoRef" type="allowedProductConfigurationRoleRef"/>
				<xsd:element name="arcRef" type="allowedRoleChangeRef"/>
				<xsd:element name="altPartRef" type="alternatePartDefinitionRef"/>
				<xsd:element name="anlysActRef" type="analysisActivityRef"/>
				<xsd:element name="anlysRevRef" type="analysisActivityRevisionRef"/>
				<xsd:element name="anchorPtRef" type="anchoringPointRef"/>
				<xsd:element name="applicDefRef" type="applicabilityStatementRef"/>
				<xsd:element name="itemEnvRef" type="associatedActualEnvironmentRef"/>
				<xsd:element name="assDegrRef" type="associatedDegradationMechanismRef"/>
				<xsd:element name="assEnvDefRef" type="associatedEnvironmentDefinitionRef"/>
				<xsd:element name="authReqRef" type="authorityRequirementRef"/>
				<xsd:element name="authToOpRef" type="authorizationToOperateRef"/>
				<xsd:element name="availRef" type="availabilityRef"/>
				<xsd:element name="batchPartRef" type="batchHardwarePartRef"/>
				<xsd:element name="bkdnRef" type="breakdownRef"/>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="beInZoneRef" type="breakdownElementInZoneRef"/>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="beRelRef" type="breakdownElementRevisionRelationshipRef"/>
				<xsd:element name="beChildRef" type="breakdownElementStructureRef"/>
				<xsd:element name="attachBeRef" type="breakdownElementUsageAttachmentRelationshipRef"/>
				<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
				<xsd:element name="relBeRef" type="breakdownElementUsageRelationshipRef"/>
				<xsd:element name="bkdnRevRef" type="breakdownRevisionRef"/>
				<xsd:element name="bkdnRevRelRef" type="breakdownRevisionRelationshipRef"/>
				<xsd:element name="budgRef" type="budgetRef"/>
				<xsd:element name="calibRef" type="calibrationRef"/>
				<xsd:element name="calDocRef" type="calibrationDocumentRef"/>
				<xsd:element name="capRef" type="capabilityRef"/>
				<xsd:element name="capDefRef" type="capabilityDefinitionRef"/>
				<xsd:element name="capDefCharRef" type="capabilityDefinitionCharacteristicRef"/>
				<xsd:element name="capDefRevRef" type="capabilityDefinitionRevisionRef"/>
				<xsd:element name="capLimRef" type="capabilityLimitationRef"/>
				<xsd:element name="cargoRef" type="cargoItemRef"/>
				<xsd:element name="chgAuthRef" type="changeAuthorizationRef"/>
				<xsd:element name="chItAvRqRef" type="changedItemAvailabilityRequirementRef"/>
				<xsd:element name="chEmReqRef" type="changeEmbodimentRequirementRef"/>
				<xsd:element name="chgRef" type="changeNotificationRef"/>
				<xsd:element name="crRef" type="changeRequestRef"/>
				<xsd:element name="crMatRef" type="changeRequestAddedOrRemovedMaterialRef"/>
				<xsd:element name="crSubsRef" type="changeRequestAddedOrRemovedSubstanceRef"/>
				<xsd:element name="crCauseRef" type="changeRequestCauseRef"/>
				<xsd:element name="crConsumpRef" type="changeRequestConsumptionChangeRef"/>
				<xsd:element name="crEmissRef" type="changeRequestEmissionChangeRef"/>
				<xsd:element name="crPartyRef" type="changeRequestPartyRef"/>
				<xsd:element name="crRtnleRef" type="changeRequestRationaleRef"/>
				<xsd:element name="crTargetRef" type="changeRequestTargetRef"/>
				<xsd:element name="cbRef" type="circuitBreakerRef"/>
				<xsd:element name="cbLocRef" type="circuitBreakerLocationRef"/>
				<xsd:element name="cbSettingRef" type="circuitBreakerSettingRef"/>
				<xsd:element name="cbSettingsRef" type="circuitBreakerSettingsRef"/>
				<xsd:element name="cloudRef" type="cloudInfrastructureRef"/>
				<xsd:element name="cmtRef" type="commentRef"/>
				<xsd:element name="cmtActRef" type="commentActionRef"/>
				<xsd:element name="cmtPtyRef" type="commentPartyRef"/>
				<xsd:element name="cmtRelRef" type="commentRelationshipRef"/>
				<xsd:element name="commNetRef" type="communicationsNetworkRef"/>
				<xsd:element name="compDefRef" type="competencyDefinitionRef"/>
				<xsd:element name="compDefRelRef" type="competencyDefinitionRelationshipRef"/>
				<xsd:element name="compFrwkRef" type="competencyFrameworkRef"/>
				<xsd:element name="compWRef" type="compliesWithRef"/>
				<xsd:element name="compNetRef" type="computerNetworkRef"/>
				<xsd:element name="condInstRef" type="conditionInstanceRef"/>
				<xsd:element name="condTypeRef" type="conditionTypeRef"/>
				<xsd:element name="condMembRef" type="conditionTypeAssertMemberRef"/>
				<xsd:element name="consqRef" type="consequenceRef"/>
				<xsd:element name="consiRef" type="consumableItemRef"/>
				<xsd:element name="conspRef" type="consumptionRef"/>
				<xsd:element name="contMatRef" type="containedMaterialRef"/>
				<xsd:element name="contSubsRef" type="containedSubstanceRef"/>
				<xsd:element name="containerRef" type="containerAsDesignedRef"/>
				<xsd:element name="contPartRef" type="containerPartRef"/>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="contrClauseRef" type="contractClauseRef"/>
				<xsd:element name="clauseRelRef" type="contractClauseRelationshipRef"/>
				<xsd:element name="contrLaborRef" type="contractLaborRef"/>
				<xsd:element name="contrPtyRef" type="contractPartyRef"/>
				<xsd:element name="contrRelRef" type="contractRelationshipRef"/>
				<xsd:element name="contrSubjRef" type="contractSubjectRef"/>
				<xsd:element name="costBkdnRef" type="costBreakdownRef"/>
				<xsd:element name="costBkdnRevRef" type="costBreakdownRevisionRef"/>
				<xsd:element name="costEntryRef" type="costEntryRef"/>
				<xsd:element name="costItemRef" type="costItemRef"/>
				<xsd:element name="countryRef" type="countryRef"/>
				<xsd:element name="dmgRef" type="damageRef"/>
				<xsd:element name="dmgAnlysRef" type="damageAnalysisRef"/>
				<xsd:element name="dmgAnlysRevRef" type="damageAnalysisRevisionRef"/>
				<xsd:element name="dmgCharRef" type="damageCharacteristicRef"/>
				<xsd:element name="dmgDefRef" type="damageDefinitionRef"/>
				<xsd:element name="dmgDefCauseRef" type="damageDefinitionCauseRef"/>
				<xsd:element name="dmgDefImpctRef" type="damageDefinitionImpactRef"/>
				<xsd:element name="datarequestRef" type="dataRequestRef"/>
				<xsd:element name="datarequestCNameRef" type="dataRequestByClassNameRef"/>
				<xsd:element name="datarequestIdRef" type="dataRequestByIdentifierRef"/>
				<xsd:element name="dataRequestUCRef" type="dataRequestByUseCaseNameRef"/>
				<xsd:element name="dataPartRef" type="dataSetAsDesignedRef"/>
				<xsd:element name="dataRelPartRef" type="dataSetAsReleasedRef"/>
				<xsd:element name="dataRelRef" type="dataSetAssociatedWithRef"/>
				<xsd:element name="dcsnTmplRef" type="decisionTreeTemplateRef"/>
				<xsd:element name="degrMechRef" type="degradationMechanismRef"/>
				<xsd:element name="featAccptCritRef" type="degradationMechanismAcceptanceCriteriaRef"/>
				<xsd:element name="derCRReqRef" type="derivedChangeRequestRequirementRef"/>
				<xsd:element name="detMeCapRef" type="detectionMeanCapabilityRef"/>
				<xsd:element name="detmecRef" type="detectionMechanismRef"/>
				<xsd:element name="fileRef" type="digitalFileRef"/>
				<xsd:element name="fileRefRef" type="digitalFileReferenceRef"/>
				<xsd:element name="discrTimeLimRef" type="discreteTimeLimitRef"/>
				<xsd:element name="dispLocRef" type="disposalLocationRef"/>
				<xsd:element name="dispReqRef" type="disposalRequirementRef"/>
				<xsd:element name="dispTransReqRef" type="disposalTransportRequirementRef"/>
				<xsd:element name="docRef" type="documentRef"/>
				<xsd:element name="docIssRef" type="documentIssueRef"/>
				<xsd:element name="docPtyRef" type="documentPartyRef"/>
				<xsd:element name="dwnTPRef" type="downTimePeriodRef"/>
				<xsd:element name="allwdPCEfyRef" type="effectiveOnProductConfigurationRef"/>
				<xsd:element name="envRef" type="environmentRef"/>
				<xsd:element name="envDefRef" type="environmentDefinitionRef"/>
				<xsd:element name="envDefCharRef" type="environmentDefinitionCharacteristicRef"/>
				<xsd:element name="envDefRelRef" type="environmentDefinitionRelationshipRef"/>
				<xsd:element name="envDefRevRef" type="environmentDefinitionRevisionRef"/>
				<xsd:element name="envRelRef" type="environmentRelationshipRef"/>
				<xsd:element name="envRevRef" type="environmentRevisionRef"/>
				<xsd:element name="eqOpRef" type="equipmentOperationRef"/>
				<xsd:element name="eqOwnRef" type="equipmentOwnerRef"/>
				<xsd:element name="assrtInstRef" type="evaluationByAssertionOfClassInstanceRef"/>
				<xsd:element name="assrtCondRef" type="evaluationByAssertionOfConditionRef"/>
				<xsd:element name="assrtPeriodRef" type="evaluationByAssertionOfDateRangeRef"/>
				<xsd:element name="assrtSiRef" type="evaluationByAssertionOfSerializedItemsRef"/>
				<xsd:element name="nestedApplicRef" type="evaluationByNestedApplicabilityStatementRef"/>
				<xsd:element name="evNestedRef" type="evaluationByNestedExpressionRef"/>
				<xsd:element name="evalRef" type="evaluationCriteriaRef"/>
				<xsd:element name="evRef" type="eventRef"/>
				<xsd:element name="evabeRef" type="eventAffectedBreakdownElementRef"/>
				<xsd:element name="evExRef" type="eventExplanationRef"/>
				<xsd:element name="evrRef" type="eventRelationshipRef"/>
				<xsd:element name="evRelItemRef" type="eventRelationshipItemRef"/>
				<xsd:element name="evntRepRef" type="eventReporterRef"/>
				<xsd:element name="evntThldRef" type="eventThresholdDefinitionRef"/>
				<xsd:element name="expfRef" type="explanatoryFactorRef"/>
				<xsd:element name="expContrLicRef" type="exportControlLicenseRef"/>
				<xsd:element name="expLicItemRef" type="exportControlLicenseItemRef"/>
				<xsd:element name="expContrPtyRef" type="exportControlPartyRef"/>
				<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
				<xsd:element name="exConReqCoRef" type="exportControlRequirementAppliedToCountryRef"/>
				<xsd:element name="expevRef" type="expressionEvaluationRef"/>
				<xsd:element name="exdocRef" type="externalDocumentRef"/>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="fcltyLocRef" type="facilityLocationRef"/>
				<xsd:element name="fcltyOperRef" type="facilityOperatorRef"/>
				<xsd:element name="facOwnRef" type="facilityOwnerRef"/>
				<xsd:element name="fcltyRelRef" type="facilityRelationshipRef"/>
				<xsd:element name="fdRef" type="failureDetectionRef"/>
				<xsd:element name="fModeRef" type="failureModeRef"/>
				<xsd:element name="fmeaRef" type="failureModeAnalysisRef"/>
				<xsd:element name="fmeaRevRef" type="failureModeAnalysisRevisionRef"/>
				<xsd:element name="fModeCauseRef" type="failureModeCauseRef"/>
				<xsd:element name="causeRelRef" type="failureModeCauseItemRelationshipRef"/>
				<xsd:element name="fModeCompRef" type="failureModeCompensatingProvisionRef"/>
				<xsd:element name="fModeEfctRef" type="failureModeEffectRef"/>
				<xsd:element name="efctRelRef" type="failureModeEffectItemRelationshipRef"/>
				<xsd:element name="eqfltRef" type="faultRef"/>
				<xsd:element name="fltcauRef" type="faultCauseRef"/>
				<xsd:element name="fltsymRef" type="faultSymptomRef"/>
				<xsd:element name="fleetRef" type="fleetRef"/>
				<xsd:element name="fltbaseRef" type="fleetBasedAtRef"/>
				<xsd:element name="fltOpRef" type="fleetOperatedByRef"/>
				<xsd:element name="fltOpLocRef" type="fleetOperatesAtLocationRef"/>
				<xsd:element name="fltplRef" type="fleetPlanningRef"/>
				<xsd:element name="fltRelRef" type="fleetRelationshipRef"/>
				<xsd:element name="fleetReqRef" type="fleetRequirementRef"/>
				<xsd:element name="fltTskRef" type="fleetTaskRef"/>
				<xsd:element name="flTskCNRef" type="fleetTaskCancellationNoticeRef"/>
				<xsd:element name="fltTskCRef" type="fleetTaskCargoRef"/>
				<xsd:element name="fltTskLstRef" type="fleetTaskListRef"/>
				<xsd:element name="geoAreaRef" type="geographicalAreaRef"/>
				<xsd:element name="globPosRef" type="globalPositionRef"/>
				<xsd:element name="beHwRef" type="hardwareElementRef"/>
				<xsd:element name="beHwConnRef" type="hardwareElementAttachingConnectorRef"/>
				<xsd:element name="beHwSlotRef" type="hardwareElementAttachmentSlotRef"/>
				<xsd:element name="beHwRealRef" type="hardwareElementPartRealizationRef"/>
				<xsd:element name="beHwRevRef" type="hardwareElementRevisionRef"/>
				<xsd:element name="hwPartContainerRef" type="hardwarePartContainerRef"/>
				<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
				<xsd:element name="infltsymRef" type="indicatedFaultSymptomRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="infrAvailRef" type="infrastructureAvailableRef"/>
				<xsd:element name="infrNodeRef" type="infrastructureNodeRef"/>
				<xsd:element name="nodeAtLocRef" type="infrastructureNodeAtLocationRef"/>
				<xsd:element name="nodeRealRef" type="infrastructureNodeRealizationRef"/>
				<xsd:element name="infOpRef" type="infrastructureOperatingPeriodRef"/>
				<xsd:element name="infrPtyRef" type="infrastructurePartyRef"/>
				<xsd:element name="infrRelRef" type="infrastructureRelationshipRef"/>
				<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
				<xsd:element name="isoAnlysRef" type="inServiceOptimizationAnalysisRef"/>
				<xsd:element name="instLocRef" type="installationLocationRef"/>
				<xsd:element name="instPartRef" type="installedPartRef"/>
				<xsd:element name="invactRef" type="inventoryActivityRef"/>
				<xsd:element name="dispOrgRef" type="involvedDisposalOrganizationRef"/>
				<xsd:element name="dispOperRef" type="itemDisposalOperationRef"/>
				<xsd:element name="dispActionRef" type="itemDisposalOperationActionRef"/>
				<xsd:element name="iDispReqRef" type="itemDisposalRequirementRef"/>
				<xsd:element name="itexcoreRef" type="itemExportControlRegulationRef"/>
				<xsd:element name="siwRef" type="itemWarrantyRef"/>
				<xsd:element name="labRateRef" type="laborRatesRef"/>
				<xsd:element name="localPosRef" type="localPositionRef"/>
				<xsd:element name="transpPosRefRef" type="localPositionRef"/>
				<xsd:element name="locRelRef" type="locationRelationshipRef"/>
				<xsd:element name="loctrRef" type="locatorRef"/>
				<xsd:element name="logRef" type="logBookRef"/>
				<xsd:element name="logeRef" type="logBookEntryRef"/>
				<xsd:element name="logecRef" type="logBookEntryMeasurementPointRef"/>
				<xsd:element name="evalAndRef" type="logicalAndRef"/>
				<xsd:element name="evalNotRef" type="logicalNotRef"/>
				<xsd:element name="evalOrRef" type="logicalOrRef"/>
				<xsd:element name="evalXorRef" type="logicalXorRef"/>
				<xsd:element name="looseWasteRef" type="looseWasteRef"/>
				<xsd:element name="mactRef" type="maintenanceActivityRef"/>
				<xsd:element name="mactdRef" type="maintenanceActivityDocumentRef"/>
				<xsd:element name="mactptyRef" type="maintenanceActivityPartyRef"/>
				<xsd:element name="mevRef" type="maintenanceEventRef"/>
				<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
				<xsd:element name="mfaclRef" type="maintenanceFacilityLevelRef"/>
				<xsd:element name="mfacsRef" type="maintenanceFacilitySlotRef"/>
				<xsd:element name="mfacsaRef" type="maintenanceFacilitySlotAccomodationRef"/>
				<xsd:element name="mfacspuRef" type="maintenanceFacilitySlotPlannedUsageRef"/>
				<xsd:element name="mlvRef" type="maintenanceLevelRef"/>
				<xsd:element name="mlicRef" type="maintenanceLicenseRef"/>
				<xsd:element name="morgRef" type="maintenanceOrganizationRef"/>
				<xsd:element name="morgapRef" type="maintenanceOrganizationApprovalRef"/>
				<xsd:element name="mpRef" type="maintenancePersonRef"/>
				<xsd:element name="mpapRef" type="maintenancePersonApprovedProductRef"/>
				<xsd:element name="mpfRef" type="maintenancePersonFacilityRef"/>
				<xsd:element name="mprRef" type="maintenanceProgramRef"/>
				<xsd:element name="mprrRef" type="maintenanceProgramRevisionRef"/>
				<xsd:element name="maintReqRef" type="maintenanceRequirementRef"/>
				<xsd:element name="mcRef" type="majorComponentRef"/>
				<xsd:element name="fleetManRef" type="managedFleetRef"/>
				<xsd:element name="matRef" type="materialRef"/>
				<xsd:element name="mtrlDefRef" type="materialDefinitionRef"/>
				<xsd:element name="mtrlDefRevRef" type="materialDefinitionRevisionRef"/>
				<xsd:element name="mPointRef" type="measurementPointRef"/>
				<xsd:element name="mPointDefRef" type="measuringPointDefinitionRef"/>
				<xsd:element name="msgRef" type="messageRef"/>
				<xsd:element name="msgContextRef" type="messageContextRef"/>
				<xsd:element name="msgPtyRef" type="messagePartyRef"/>
				<xsd:element name="relatedMsgRef" type="messageRelationshipRef"/>
				<xsd:element name="missnDefRef" type="missionDefinitionRef"/>
				<xsd:element name="missnDRevRef" type="missionDefinitionRevisionRef"/>
				<xsd:element name="mvRef" type="movementRef"/>
				<xsd:element name="movlegRef" type="movementLegRef"/>
				<xsd:element name="mvldRef" type="movementLegDelayRef"/>
				<xsd:element name="mvlgRef" type="movementLegPositionRef"/>
				<xsd:element name="mroNetRef" type="mRONetworkRef"/>
				<xsd:element name="nestedAPCRef" type="nestedAllowedProductConfigurationRef"/>
				<xsd:element name="nestedPVRef" type="nestedProductVariantRef"/>
				<xsd:element name="nstspvRef" type="nestedSerializedProductVariantRef"/>
				<xsd:element name="navcauRef" type="nonAvailabilityCauseRef"/>
				<xsd:element name="obfltsymRef" type="observedFaultSymptomRef"/>
				<xsd:element name="obscpRef" type="obsolescenceParameterRef"/>
				<xsd:element name="obsReqRef" type="obsolescenceRequirementRef"/>
				<xsd:element name="opBaseRef" type="operatingBaseRef"/>
				<xsd:element name="opbcRef" type="operatingBaseCapacityRef"/>
				<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef"/>
				<xsd:element name="opacRef" type="operationalActivityRef"/>
				<xsd:element name="opapRef" type="operationalApprovalRef"/>
				<xsd:element name="opevRef" type="operationalEventRef"/>
				<xsd:element name="opevmRef" type="operationalEventMessageRef"/>
				<xsd:element name="opevoRef" type="operationalEventOperatorRef"/>
				<xsd:element name="opmRef" type="operationalModeRef"/>
				<xsd:element name="oppRef" type="operationalPeriodRef"/>
				<xsd:element name="oppoRef" type="operationalPeriodOperatorRef"/>
				<xsd:element name="opprRef" type="operationalPeriodRelationshipRef"/>
				<xsd:element name="operReqRef" type="operationalRequirementRef"/>
				<xsd:element name="oprpRef" type="operationalRequirementsPlanningRef"/>
				<xsd:element name="opRoleRef" type="operationalRoleRef"/>
				<xsd:element name="roleKitImpctRef" type="operationalRoleKitImpactRef"/>
				<xsd:element name="opTaskRef" type="operationalTaskRef"/>
				<xsd:element name="operOrgRef" type="operatorOrganizationRef"/>
				<xsd:element name="operPersRef" type="operatorPersonRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="orgStrRef" type="organizationalBreakdownStructureRef"/>
				<xsd:element name="orgStrRevRef" type="organizationalBreakdownStructureRevisionRef"/>
				<xsd:element name="orgUnitRef" type="organizationalUnitRef"/>
				<xsd:element name="unitMembRef" type="organizationalUnitMemberRef"/>
				<xsd:element name="unitRelRef" type="organizationalUnitRelationshipRef"/>
				<xsd:element name="operOrgApprRef" type="organizationOperationsApprovalRef"/>
				<xsd:element name="oFacRef" type="otherFacilityRef"/>
				<xsd:element name="paraThldRef" type="parameterThresholdDefinitionRef"/>
				<xsd:element name="parkFacRef" type="parkingFacilityRef"/>
				<xsd:element name="pactRef" type="partActionRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="partsListRef" type="partDefinitionPartsListRef"/>
				<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef"/>
				<xsd:element name="pListRelRef" type="partDefinitionPartsListRelationshipRef"/>
				<xsd:element name="pListRevRef" type="partDefinitionPartsListRevisionRef"/>
				<xsd:element name="sppartpRef" type="partInPoolRef"/>
				<xsd:element name="partwRef" type="partInWarehouseRef"/>
				<xsd:element name="partOwnerRef" type="partOwnerRef"/>
				<xsd:element name="ptyAddrRef" type="partyAddressRef"/>
				<xsd:element name="ptyRelRef" type="partyRelationshipRef"/>
				<xsd:element name="ptyRef" type="penaltyRef"/>
				<xsd:element name="prfmParaRef" type="performanceParameterRef"/>
				<xsd:element name="prfmPRevRef" type="performanceParameterRevisionRef"/>
				<xsd:element name="perTimeLimRef" type="periodicTimeLimitRef"/>
				<xsd:element name="persRef" type="personRef"/>
				<xsd:element name="mpcRef" type="personCompetenceRef"/>
				<xsd:element name="personCatRef" type="personGroupRef"/>
				<xsd:element name="operPersApprRef" type="personOperationsApprovalRef"/>
				<xsd:element name="pliuRef" type="plannedItemUpgradeRef"/>
				<xsd:element name="plpilRef" type="plannedPartInstallationLocationRef"/>
				<xsd:element name="plndTaskUseRef" type="plannedTaskUsageRef"/>
				<xsd:element name="plutRef" type="plannedUpgradeTimescalesRef"/>
				<xsd:element name="polRegRef" type="policiesAndRegulationsRef"/>
				<xsd:element name="poolRef" type="poolRef"/>
				<xsd:element name="pooloRef" type="poolOwnerRef"/>
				<xsd:element name="pinwhrRef" type="poolStockedInWareHouseRef"/>
				<xsd:element name="poolUsrRef" type="poolUserRef"/>
				<xsd:element name="portRef" type="portRef"/>
				<xsd:element name="pwrgridRef" type="powerGridRef"/>
				<xsd:element name="psensorRef" type="pressureSensorRef"/>
				<xsd:element name="prodRef" type="productRef"/>
				<xsd:element name="opRoleConfRef" type="productOperationalRoleConfigurationRef"/>
				<xsd:element name="roleConfRevRef" type="productOperationalRoleConfigurationRevisionRef"/>
				<xsd:element name="roleConfKitRef" type="productOperationalRoleConfigurationRoleKitRef"/>
				<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef"/>
				<xsd:element name="prodpoevRef" type="productParameterAtOperationalEventRef"/>
				<xsd:element name="pupRef" type="productUsagePhaseRef"/>
				<xsd:element name="puphrRef" type="productUsagePhaseHierarchicalRelationshipRef"/>
				<xsd:element name="phseRelRef" type="productUsagePhaseRelationshipRef"/>
				<xsd:element name="pupsrRef" type="productUsagePhaseSequentialRelationshipRef"/>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="prodvmRef" type="productVariantMaintenanceRef"/>
				<xsd:element name="prodvspRef" type="productVariantSupportedByPoolRef"/>
				<xsd:element name="projRef" type="projectRef"/>
				<xsd:element name="projContrRef" type="projectContractRef"/>
				<xsd:element name="projRelRef" type="projectRelationshipRef"/>
				<xsd:element name="refltsymRef" type="recordedFaultSymptomRef"/>
				<xsd:element name="recovItemRef" type="recoveredItemRef"/>
				<xsd:element name="rectTaskRef" type="rectifyingTaskRef"/>
				<xsd:element name="refFileRef" type="referencedDigitalFileRef"/>
				<xsd:element name="refDocRef" type="referencedDocumentRef"/>
				<xsd:element name="refOrgRef" type="referencedOrganizationRef"/>
				<xsd:element name="reldataassRef" type="releasedDataSetAssociatedWithRef"/>
				<xsd:element name="repDefRef" type="repeatDefinitionRef"/>
				<xsd:element name="rptRef" type="reportRef"/>
				<xsd:element name="rptActRef" type="reportableActivityRef"/>
				<xsd:element name="rptActPtyRef" type="reportableActivityPartyRef"/>
				<xsd:element name="rptmRef" type="reportableMetricRef"/>
				<xsd:element name="rptCxtRef" type="reportContextRef"/>
				<xsd:element name="rptdIssRef" type="reportedIssueRef"/>
				<xsd:element name="rptdMetrRef" type="reportedMetricRef"/>
				<xsd:element name="rptPartyRef" type="reportPartyRef"/>
				<xsd:element name="dispPolRef" type="requiredDisposalPolicyRef"/>
				<xsd:element name="reqflrRef" type="requiredFleetRoleRef"/>
				<xsd:element name="reqpslpRef" type="requiredPartStockLevelInPoolRef"/>
				<xsd:element name="reqsaRef" type="requiredSafetyActionRef"/>
				<xsd:element name="reqRef" type="requirementRef"/>
				<xsd:element name="reqptyRef" type="requirementPartyRef"/>
				<xsd:element name="reqrelRef" type="requirementRelationshipRef"/>
				<xsd:element name="resSpecRef" type="resourceSpecificationRef"/>
				<xsd:element name="resSpecRealRef" type="resourceSpecificationRealizationRef"/>
				<xsd:element name="resSpecRevRef" type="resourceSpecificationRevisionRef"/>
				<xsd:element name="resupRef" type="resourceUsagePartyRef"/>
				<xsd:element name="resUsrRef" type="resourceUsageRequestRef"/>
				<xsd:element name="restrRef" type="restrictionRef"/>
				<xsd:element name="resDMRef" type="resultingDataModuleRef"/>
				<xsd:element name="rolecRef" type="roleCapabilityRef"/>
				<xsd:element name="s1000dDMRef" type="s1000DDataModuleRef"/>
				<xsd:element name="s1000dDMIssRef" type="s1000DDataModuleIssueRef"/>
				<xsd:element name="s1000dPMRef" type="s1000DPublicationModuleRef"/>
				<xsd:element name="s1000dPMIssRef" type="s1000DPublicationModuleIssueRef"/>
				<xsd:element name="safedocRef" type="safetyDocumentRef"/>
				<xsd:element name="safeissRef" type="safetyIssueRef"/>
				<xsd:element name="safeIssEvRef" type="safetyIssueEventRef"/>
				<xsd:element name="safeReqRef" type="safetyRequirementRef"/>
				<xsd:element name="safeReqDocRef" type="safetyRequirementsDocumentRef"/>
				<xsd:element name="safewRef" type="safetyWarningRef"/>
				<xsd:element name="scormRef" type="sCORMContentPackageRef"/>
				<xsd:element name="secClassDefRef" type="securityClassRef"/>
				<xsd:element name="secRef" type="securityClassificationRef"/>
				<xsd:element name="snsrRef" type="sensorRef"/>
				<xsd:element name="snsrsmpRef" type="sensorSampleRef"/>
				<xsd:element name="snsrtRef" type="sensorTypeRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="partModRef" type="serializedHardwarePartModificationRef"/>
				<xsd:element name="siowRef" type="serializedItemOwnerRef"/>
				<xsd:element name="spdaRef" type="serializedPartDesignAssociationRef"/>
				<xsd:element name="serPartPosRef" type="serializedPartsListPositionRef"/>
				<xsd:element name="sproopRef" type="serializedProductOperationalPeriodRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="spvaRef" type="serializedProductVariantAssignmentRef"/>
				<xsd:element name="serPVConfRef" type="serializedProductVariantConfigurationConformanceRef"/>
				<xsd:element name="inFleetRef" type="serializedProductVariantInFleetRef"/>
				<xsd:element name="spvobRef" type="serializedProductVariantOperatingBaseRef"/>
				<xsd:element name="serPVoperRef" type="serializedProductVariantOperatorRef"/>
				<xsd:element name="spvzRef" type="serializedProductVariantZoneRef"/>
				<xsd:element name="ssuppeqRef" type="serializedSupportEquipmentRef"/>
				<xsd:element name="servRef" type="serviceRef"/>
				<xsd:element name="servBuRef" type="serviceBulletinRef"/>
				<xsd:element name="servcRef" type="serviceContractRef"/>
				<xsd:element name="slacRef" type="serviceLevelAgreementClauseRef"/>
				<xsd:element name="servReqRef" type="serviceRequestRef"/>
				<xsd:element name="servrcRef" type="serviceRequestCancellationRef"/>
				<xsd:element name="servReqItemRef" type="serviceRequestItemRef"/>
				<xsd:element name="servrlRef" type="serviceRequestLocationRef"/>
				<xsd:element name="servrpRef" type="serviceRequestPartyRef"/>
				<xsd:element name="srvReqrRef" type="serviceRequestRelationshipRef"/>
				<xsd:element name="shopfRef" type="shopFindingsRef"/>
				<xsd:element name="shopfdRef" type="shopFindingsDeterminedByRef"/>
				<xsd:element name="skillRef" type="skillRef"/>
				<xsd:element name="skillLevelRef" type="skillLevelRef"/>
				<xsd:element name="beSwRef" type="softwareElementRef"/>
				<xsd:element name="beSwRealRef" type="softwareElementPartRealizationRef"/>
				<xsd:element name="beSwRevRef" type="softwareElementRevisionRef"/>
				<xsd:element name="swerrRef" type="softwareErrorRef"/>
				<xsd:element name="swerrosRef" type="softwareErrorOSRef"/>
				<xsd:element name="swerrpRef" type="softwareErrorPlatformRef"/>
				<xsd:element name="swosRef" type="softwareOSRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
				<xsd:element name="swPartRef" type="softwarePartDefinitionRef"/>
				<xsd:element name="swplRef" type="softwarePlatformRef"/>
				<xsd:element name="spEvDefRef" type="specialEventDefinitionRef"/>
				<xsd:element name="ssafeinsRef" type="specialSafetyInstructionRef"/>
				<xsd:element name="straingRef" type="strainGaugeRef"/>
				<xsd:element name="strAddrRef" type="streetAddressRef"/>
				<xsd:element name="subsRef" type="substanceDefinitionRef"/>
				<xsd:element name="subsRevRef" type="substanceDefinitionRevisionRef"/>
				<xsd:element name="subsEmRef" type="substanceEmissionRef"/>
				<xsd:element name="substPartRef" type="substitutePartDefinitionRef"/>
				<xsd:element name="subtRef" type="subtaskRef"/>
				<xsd:element name="subtByDefRef" type="subtaskByDefinitionRef"/>
				<xsd:element name="subtByRefRef" type="subtaskByTaskReferenceRef"/>
				<xsd:element name="inZoneRef" type="subtaskInZoneRef"/>
				<xsd:element name="sourceDocRef" type="subtaskSourceDocumentRef"/>
				<xsd:element name="subtTargRef" type="subtaskTargetRef"/>
				<xsd:element name="precSubtRef" type="subtaskTimelineRef"/>
				<xsd:element name="subtWcnRef" type="subtaskWarningCautionNoteRef"/>
				<xsd:element name="suppusedRef" type="suppliesUsedRef"/>
				<xsd:element name="suppeqRef" type="supportEquipmentRef"/>
				<xsd:element name="suppewuRef" type="supportEquipmentUsedRef"/>
				<xsd:element name="supTaskRef" type="supportingTaskRef"/>
				<xsd:element name="supTaskUseRef" type="supportingTaskUsageRef"/>
				<xsd:element name="tachoRef" type="tachometerRef"/>
				<xsd:element name="taskRef" type="taskRef"/>
				<xsd:element name="taskJustRef" type="taskJustificationRef"/>
				<xsd:element name="persResCompRef" type="taskPersonnelResourceCompetenceRef"/>
				<xsd:element name="taskReqRef" type="taskRequirementRef"/>
				<xsd:element name="trJustRef" type="taskRequirementJustificationRef"/>
				<xsd:element name="trRevRef" type="taskRequirementRevisionRef"/>
				<xsd:element name="taskResRef" type="taskResourceRef"/>
				<xsd:element name="taskRevRef" type="taskRevisionRef"/>
				<xsd:element name="taskWcnRef" type="taskRevisionWarningCautionNoteRef"/>
				<xsd:element name="taskUseRef" type="taskUsageRef"/>
				<xsd:element name="toRef" type="technicalOrderRef"/>
				<xsd:element name="toembRef" type="technicalOrderEmbodiedRef"/>
				<xsd:element name="tmpsnsrRef" type="temperatureSensorRef"/>
				<xsd:element name="thldRef" type="thresholdDefinitionRef"/>
				<xsd:element name="timeLimRef" type="timeLimitRef"/>
				<xsd:element name="tradeRef" type="tradeRef"/>
				<xsd:element name="tracapRef" type="transportCapabilityRef"/>
				<xsd:element name="tracapusRef" type="transportCapabilityUsageRef"/>
				<xsd:element name="transpNetRef" type="transportNetworkRef"/>
				<xsd:element name="transReqRef" type="transportRequirementRef"/>
				<xsd:element name="persTypeRef" type="typeOfPersonRef"/>
				<xsd:element name="unacceptRef" type="unacceptableConditionRef"/>
				<xsd:element name="upReqRef" type="upgradeRequirementRef"/>
				<xsd:element name="usableOnRef" type="usableOnProductVariantRef"/>
				<xsd:element name="whRef" type="warehouseRef"/>
				<xsd:element name="wcnRef" type="warningCautionNoteRef"/>
				<xsd:element name="wcRef" type="warrantyClaimRef"/>
				<xsd:element name="wccRef" type="warrantyClaimContactRef"/>
				<xsd:element name="wcevRef" type="warrantyClaimEventsRef"/>
				<xsd:element name="wcfRef" type="warrantyClaimFollowUpRef"/>
				<xsd:element name="wcrRef" type="warrantyClaimResolutionRef"/>
				<xsd:element name="wevRef" type="warrantyEventRef"/>
				<xsd:element name="wasteContRef" type="wasteContainerRef"/>
				<xsd:element name="wasteDispOpRef" type="wasteDisposalOperationRef"/>
				<xsd:element name="wasteDispOpActRef" type="wasteDisposalOperationActionRef"/>
				<xsd:element name="wDispReqRef" type="wasteDisposalRequirementRef"/>
				<xsd:element name="wasteRecovRef" type="wasteRecoveredItemRef"/>
				<xsd:element name="wbsRef" type="workBreakdownRef"/>
				<xsd:element name="wbsRevRef" type="workBreakdownRevisionRef"/>
				<xsd:element name="workItemRef" type="workItemRef"/>
				<xsd:element name="woRef" type="workOrderRef"/>
				<xsd:element name="beZoneRef" type="zoneElementRef"/>
				<xsd:element name="beZoneRevRef" type="zoneElementRevisionRef"/>
			</xsd:choice>
			<xsd:element name="orgRef" type="organizationRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="reforg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(orgRef) and not(@uriRef)) or (not(@uidRef) and orgRef and not(@uriRef)) or (not(@uidRef) and not(orgRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="releasedDataSetAssociatedWithRef">
		<xsd:annotation>
			<xsd:documentation>
    ReleasedDataSetAssociatedWith is a [relationship] that allows to associate DataSetAsReleased with an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:releasedDataSetAssociatedWith</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="dataRelPartRef" type="dataSetAsReleasedRef"/>
			<xsd:element name="relData" type="releasedDataSetItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="reldataass[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(dataRelPartRef) and not(@uriRef)) or (not(@uidRef) and dataRelPartRef and not(@uriRef)) or (not(@uidRef) and not(dataRelPartRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="repeatDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    RepeatDefinition is a [class] that represents the set of circumstances which define the PeriodicTimeLimit.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:repeatDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="repdef[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportRef">
		<xsd:annotation>
			<xsd:documentation>
    Report is a Document that provides information about the execution of certain activities or significant events that have taken place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:report</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableActivityRef">
		<xsd:annotation>
			<xsd:documentation>
    ReportableActivity is a class that represents an activity which is part of a work item that is deemed to be of sufficient importance as to be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableActivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="rptActId" type="reportableActivityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="rptact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(rptActId) and not(@uriRef)) or (not(@uidRef) and rptActId and not(@uriRef)) or (not(@uidRef) and not(rptActId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableActivityPartyRef">
		<xsd:annotation>
			<xsd:documentation>
    ReportableActivityParty is a [relationship] that identifies a ReportableActivity stakeholder.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableActivityParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="rptActRef" type="reportableActivityRef"/>
			<xsd:element name="party" type="party"/>
			<xsd:element name="ptyRole" type="reportableActivityPartyRole"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="rptaparty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(rptActRef) and not(@uriRef)) or (not(@uidRef) and rptActRef and not(@uriRef)) or (not(@uidRef) and not(rptActRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableMetricRef">
		<xsd:annotation>
			<xsd:documentation>
    ReportableMetric is a measure of a specific characteristic that can evolve over time and is reported periodically for program or contract management 
    purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportableMetric</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="slacRef" type="serviceLevelAgreementClauseRef"/>
			</xsd:choice>
			<xsd:element name="metricId" type="reportableMetricIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="rptm[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(metricId) and not(@uriRef)) or (not(@uidRef) and metricId and not(@uriRef)) or (not(@uidRef) and not(metricId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportContextRef">
		<xsd:annotation>
			<xsd:documentation>
    ReportContext is a [relationship] that associates a Report to its context.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportContext</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="rptRef" type="reportRef"/>
			<xsd:element name="rptCxtItem" type="reportContextItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="rptctxt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(rptRef) and not(@uriRef)) or (not(@uidRef) and rptRef and not(@uriRef)) or (not(@uidRef) and not(rptRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedIssueRef">
		<xsd:annotation>
			<xsd:documentation>
    ReportedIssue is a [class] that specifies an important subject or problem for debate or discussion.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedIssue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="issId" type="reportedIssueIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="repissue[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(issId) and not(@uriRef)) or (not(@uidRef) and issId and not(@uriRef)) or (not(@uidRef) and not(issId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportedMetricRef">
		<xsd:annotation>
			<xsd:documentation>
    ReportedMetric is a class that represents the measure of a specific characteristic that can evolve over time and is reported periodically for program or 
    contract management purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportedMetric</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="metrId" type="reportedMetricIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="repmet[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(metrId) and not(@uriRef)) or (not(@uidRef) and metrId and not(@uriRef)) or (not(@uidRef) and not(metrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportPartyRef">
		<xsd:annotation>
			<xsd:documentation>
    ReportParty is a [relationship] that allows a ReportingParty to be associated to a Report.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:reportParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="rptRef" type="reportRef"/>
			<xsd:element name="repParty" type="reportingParty"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="rptparty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(rptRef) and not(@uriRef)) or (not(@uidRef) and rptRef and not(@uriRef)) or (not(@uidRef) and not(rptRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requiredDisposalPolicyRef">
		<xsd:annotation>
			<xsd:documentation>
    RequiredDisposalPolicy is a [relationship] that allows to indicate the policies to be applied when disposing of an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requiredDisposalPolicy</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="dispReqRef" type="disposalRequirementRef"/>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
			<xsd:element name="polRegRef" type="policiesAndRegulationsRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="disppol[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(dispReqRef) and not(@uriRef)) or (not(@uidRef) and dispReqRef and not(@uriRef)) or (not(@uidRef) and not(dispReqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requiredFleetRoleRef">
		<xsd:annotation>
			<xsd:documentation>
    RequiredFleetRole is a [relationship] that allows to define the OperationalRoles that a FleetRequirement must meet.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requiredFleetRole</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fleetReqRef" type="fleetRequirementRef"/>
			<xsd:element name="opRoleRef" type="operationalRoleRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="reqflr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fleetReqRef) and not(@uriRef)) or (not(@uidRef) and fleetReqRef and not(@uriRef)) or (not(@uidRef) and not(fleetReqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requiredPartStockLevelInPoolRef">
		<xsd:annotation>
			<xsd:documentation>
    RequiredPartStockLevelInPool is a [relationship] that defines the number of parts that must be stored in a Pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requiredPartStockLevelInPool</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="poolRef" type="poolRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="reqpslp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(poolRef) and not(@uriRef)) or (not(@uidRef) and poolRef and not(@uriRef)) or (not(@uidRef) and not(poolRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requiredSafetyActionRef">
		<xsd:annotation>
			<xsd:documentation>
    RequiredSafetyAction is a [class] representing the action to be taken as part of a SpecialSafetyInstruction so as to ensure the Product safety.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requiredSafetyAction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="actnId" type="actionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="action[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(actnId) and not(@uriRef)) or (not(@uidRef) and actnId and not(@uriRef)) or (not(@uidRef) and not(actnId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementRef">
		<xsd:annotation>
			<xsd:documentation>
    Requirement is a documented need that has to be implemented.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementPartyRef">
		<xsd:annotation>
			<xsd:documentation>
    RequirementParty is a [relationship] that associates a Requirement with a Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requirementParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqRef" type="requirementRef"/>
			<xsd:element name="party" type="party"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="reqpty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqRef) and not(@uriRef)) or (not(@uidRef) and reqRef and not(@uriRef)) or (not(@uidRef) and not(reqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requirementRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    RequirementRelationship is a [relationship] that defines the association between two Requirements.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:requirementRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqRef" type="requirementRef"/>
			<xsd:element name="reqRef" type="requirementRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="reqrel[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqRef) and not(@uriRef)) or (not(@uidRef) and reqRef and not(@uriRef)) or (not(@uidRef) and not(reqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationRef">
		<xsd:annotation>
			<xsd:documentation>
    ResourceSpecification is a [class] that defines a resource by its characteristics.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceSpecification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="specId" type="resourceSpecificationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ressp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(specId) and not(@uriRef)) or (not(@uidRef) and specId and not(@uriRef)) or (not(@uidRef) and not(specId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationRealizationRef">
		<xsd:annotation>
			<xsd:documentation>
    ResourceSpecificationRealization is a [relationship] where a ResourceSpecification relates to an instance of ResourceSpecificationRealizationItem that 
    fulfills the ResourceSpecification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceSpecificationRealization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="resSpecRevRef" type="resourceSpecificationRevisionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="resrz[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(resSpecRevRef) and not(@uriRef)) or (not(@uidRef) and resSpecRevRef and not(@uriRef)) or (not(@uidRef) and not(resSpecRevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceSpecificationRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    ResourceSpecificationRevision is a [class] representing an iteration applied to a ResourceSpecification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceSpecificationRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="specId" type="resourceSpecificationIdentifier"/>
			<xsd:element name="revId" type="resourceSpecificationRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="resspecrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(specId) and not(@uriRef)) or (not(@uidRef) and specId and not(@uriRef)) or (not(@uidRef) and not(specId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceUsagePartyRef">
		<xsd:annotation>
			<xsd:documentation>
    ResourceUsageParty is a [relationship] that defines which party request which one to use a resource.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceUsageParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="resUsrRef" type="resourceUsageRequestRef"/>
			<xsd:element name="party" type="party"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="resup[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(resUsrRef) and not(@uriRef)) or (not(@uidRef) and resUsrRef and not(@uriRef)) or (not(@uidRef) and not(resUsrRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceUsageRequestRef">
		<xsd:annotation>
			<xsd:documentation>
    ResourceUsageRequest is a class representing a demand from a party to use a resource belonging to a different party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resourceUsageRequest</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="resourceUsageRequestIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="resusr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="restrictionRef">
		<xsd:annotation>
			<xsd:documentation>
    Restriction is a class that specifies a reduced capability or restriction that applies to an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:restriction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="restrId" type="restrictionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="restr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(restrId) and not(@uriRef)) or (not(@uidRef) and restrId and not(@uriRef)) or (not(@uidRef) and not(restrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resultingDataModuleRef">
		<xsd:annotation>
			<xsd:documentation>
    ResultingDataModule is a [relationship] that identifies a data module issue in which a TaskRevision is further detailed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:resultingDataModule</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskRevRef" type="taskRevisionRef"/>
			<xsd:element name="s1000dDMIssRef" type="s1000DDataModuleIssueRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dmscop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskRevRef) and not(@uriRef)) or (not(@uidRef) and taskRevRef and not(@uriRef)) or (not(@uidRef) and not(taskRevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="roleCapabilityRef">
		<xsd:annotation>
			<xsd:documentation>
    RoleCapability is a [relationship] that defines which product capabilities are provided by a specific OperationalRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:roleCapability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="opRoleRef" type="operationalRoleRef"/>
			<xsd:element name="capRef" type="capabilityRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="rolec[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(opRoleRef) and not(@uriRef)) or (not(@uidRef) and opRoleRef and not(@uriRef)) or (not(@uidRef) and not(opRoleRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="s1000DDataModuleRef">
		<xsd:annotation>
			<xsd:documentation>
    S1000DDataModule is a Document that is written in accordance with an S1000D schema.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:s1000DDataModule</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="s1000DDataModuleIssueRef">
		<xsd:annotation>
			<xsd:documentation>
    S1000DDataModuleIssue is a DocumentIssue that identifies a specific issue of a data module produced in accordance with S1000D.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:s1000DDataModuleIssue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
			<xsd:element name="docIssId" type="documentIssueIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dociss[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="s1000DPublicationModuleRef">
		<xsd:annotation>
			<xsd:documentation>
    S1000DPublicationModule is a Document that identifies a publication published in accordance with S1000D.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:s1000DPublicationModule</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="s1000DPublicationModuleIssueRef">
		<xsd:annotation>
			<xsd:documentation>
    S1000DPublicationModuleIssue is a DocumentIssue that identifies a specific issue of a publication module published in accordance with S1000D.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:s1000DPublicationModuleIssue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
			<xsd:element name="docIssId" type="documentIssueIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="dociss[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyDocumentRef">
		<xsd:annotation>
			<xsd:documentation>
    SafetyDocument is a Document associated to the safety of an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:safetyDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyIssueRef">
		<xsd:annotation>
			<xsd:documentation>
    SafetyIssue is a SafetyDocument reporting a safety issue associated to the safety of a Product, Service or Part (hardware or software) item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:safetyIssue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyIssueEventRef">
		<xsd:annotation>
			<xsd:documentation>
    SafetyIssueEvent is a [relationship] that allows to associate a SafetyIssue to associated Events.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:safetyIssueEvent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="safeissRef" type="safetyIssueRef"/>
			<xsd:element name="evRef" type="eventRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="safeissev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(safeissRef) and not(@uriRef)) or (not(@uidRef) and safeissRef and not(@uriRef)) or (not(@uidRef) and not(safeissRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    SafetyRequirement is a Requirement that has to be applied for safety purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:safetyRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyRequirementsDocumentRef">
		<xsd:annotation>
			<xsd:documentation>
    SafetyRequirementsDocument is a SafetyDocument that defines the necessary SafetyRequirements for a specific purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:safetyRequirementsDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyWarningRef">
		<xsd:annotation>
			<xsd:documentation>
    SafetyWarning is a SafetyDocument that provides information about potential safety issues associated to a Product, service or hardware or software items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:safetyWarning</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sCORMContentPackageRef">
		<xsd:annotation>
			<xsd:documentation>
    SCORMContentPackage is a specialization of class Document and represents a SCORM content package.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:sCORMContentPackage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="securityClassRef">
		<xsd:annotation>
			<xsd:documentation>
    SecurityClass is a [class] that identifies a level of confidentiality which can be used to protect something against unauthorized access.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:securityClass</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="secClass" type="securityClassValue"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="scc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(secClass) and not(@uriRef)) or (not(@uidRef) and secClass and not(@uriRef)) or (not(@uidRef) and not(secClass) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="securityClassificationRef">
		<xsd:annotation>
			<xsd:documentation>
    SecurityClassification is a [relationship] that associates a given SecurityClass with the item that must be protected against unauthorized access or 
    distribution
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:securityClassification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="accRef" type="accelerometerRef"/>
				<xsd:element name="actionRef" type="actionRef"/>
				<xsd:element name="beAggrRef" type="aggregatedElementRef"/>
				<xsd:element name="taskLocRef" type="allocatedTaskLocationRef"/>
				<xsd:element name="allwdPCRef" type="allowedProductConfigurationByConfigurationIdentifierRef"/>
				<xsd:element name="hwConfPartRef" type="allowedProductConfigurationHardwarePartDefinitionRef"/>
				<xsd:element name="alPrCoRoRef" type="allowedProductConfigurationRoleRef"/>
				<xsd:element name="arcRef" type="allowedRoleChangeRef"/>
				<xsd:element name="altPartRef" type="alternatePartDefinitionRef"/>
				<xsd:element name="anlysActRef" type="analysisActivityRef"/>
				<xsd:element name="anlysRevRef" type="analysisActivityRevisionRef"/>
				<xsd:element name="anchorPtRef" type="anchoringPointRef"/>
				<xsd:element name="applicDefRef" type="applicabilityStatementRef"/>
				<xsd:element name="itemEnvRef" type="associatedActualEnvironmentRef"/>
				<xsd:element name="assDegrRef" type="associatedDegradationMechanismRef"/>
				<xsd:element name="assEnvDefRef" type="associatedEnvironmentDefinitionRef"/>
				<xsd:element name="authReqRef" type="authorityRequirementRef"/>
				<xsd:element name="authToOpRef" type="authorizationToOperateRef"/>
				<xsd:element name="availRef" type="availabilityRef"/>
				<xsd:element name="batchPartRef" type="batchHardwarePartRef"/>
				<xsd:element name="bkdnRef" type="breakdownRef"/>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="beInZoneRef" type="breakdownElementInZoneRef"/>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="beRelRef" type="breakdownElementRevisionRelationshipRef"/>
				<xsd:element name="beChildRef" type="breakdownElementStructureRef"/>
				<xsd:element name="attachBeRef" type="breakdownElementUsageAttachmentRelationshipRef"/>
				<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
				<xsd:element name="relBeRef" type="breakdownElementUsageRelationshipRef"/>
				<xsd:element name="bkdnRevRef" type="breakdownRevisionRef"/>
				<xsd:element name="bkdnRevRelRef" type="breakdownRevisionRelationshipRef"/>
				<xsd:element name="budgRef" type="budgetRef"/>
				<xsd:element name="calibRef" type="calibrationRef"/>
				<xsd:element name="calDocRef" type="calibrationDocumentRef"/>
				<xsd:element name="capRef" type="capabilityRef"/>
				<xsd:element name="capDefRef" type="capabilityDefinitionRef"/>
				<xsd:element name="capDefCharRef" type="capabilityDefinitionCharacteristicRef"/>
				<xsd:element name="capDefRevRef" type="capabilityDefinitionRevisionRef"/>
				<xsd:element name="capLimRef" type="capabilityLimitationRef"/>
				<xsd:element name="cargoRef" type="cargoItemRef"/>
				<xsd:element name="chgAuthRef" type="changeAuthorizationRef"/>
				<xsd:element name="chItAvRqRef" type="changedItemAvailabilityRequirementRef"/>
				<xsd:element name="chEmReqRef" type="changeEmbodimentRequirementRef"/>
				<xsd:element name="chgRef" type="changeNotificationRef"/>
				<xsd:element name="crRef" type="changeRequestRef"/>
				<xsd:element name="crMatRef" type="changeRequestAddedOrRemovedMaterialRef"/>
				<xsd:element name="crSubsRef" type="changeRequestAddedOrRemovedSubstanceRef"/>
				<xsd:element name="crCauseRef" type="changeRequestCauseRef"/>
				<xsd:element name="crConsumpRef" type="changeRequestConsumptionChangeRef"/>
				<xsd:element name="crEmissRef" type="changeRequestEmissionChangeRef"/>
				<xsd:element name="crPartyRef" type="changeRequestPartyRef"/>
				<xsd:element name="crRtnleRef" type="changeRequestRationaleRef"/>
				<xsd:element name="crTargetRef" type="changeRequestTargetRef"/>
				<xsd:element name="cbRef" type="circuitBreakerRef"/>
				<xsd:element name="cbLocRef" type="circuitBreakerLocationRef"/>
				<xsd:element name="cbSettingRef" type="circuitBreakerSettingRef"/>
				<xsd:element name="cbSettingsRef" type="circuitBreakerSettingsRef"/>
				<xsd:element name="cloudRef" type="cloudInfrastructureRef"/>
				<xsd:element name="cmtRef" type="commentRef"/>
				<xsd:element name="cmtActRef" type="commentActionRef"/>
				<xsd:element name="cmtPtyRef" type="commentPartyRef"/>
				<xsd:element name="cmtRelRef" type="commentRelationshipRef"/>
				<xsd:element name="commNetRef" type="communicationsNetworkRef"/>
				<xsd:element name="compDefRef" type="competencyDefinitionRef"/>
				<xsd:element name="compDefRelRef" type="competencyDefinitionRelationshipRef"/>
				<xsd:element name="compFrwkRef" type="competencyFrameworkRef"/>
				<xsd:element name="compWRef" type="compliesWithRef"/>
				<xsd:element name="compNetRef" type="computerNetworkRef"/>
				<xsd:element name="condInstRef" type="conditionInstanceRef"/>
				<xsd:element name="condTypeRef" type="conditionTypeRef"/>
				<xsd:element name="condMembRef" type="conditionTypeAssertMemberRef"/>
				<xsd:element name="consqRef" type="consequenceRef"/>
				<xsd:element name="consiRef" type="consumableItemRef"/>
				<xsd:element name="conspRef" type="consumptionRef"/>
				<xsd:element name="contMatRef" type="containedMaterialRef"/>
				<xsd:element name="contSubsRef" type="containedSubstanceRef"/>
				<xsd:element name="containerRef" type="containerAsDesignedRef"/>
				<xsd:element name="contPartRef" type="containerPartRef"/>
				<xsd:element name="contrRef" type="contractRef"/>
				<xsd:element name="contrClauseRef" type="contractClauseRef"/>
				<xsd:element name="clauseRelRef" type="contractClauseRelationshipRef"/>
				<xsd:element name="contrLaborRef" type="contractLaborRef"/>
				<xsd:element name="contrPtyRef" type="contractPartyRef"/>
				<xsd:element name="contrRelRef" type="contractRelationshipRef"/>
				<xsd:element name="contrSubjRef" type="contractSubjectRef"/>
				<xsd:element name="costBkdnRef" type="costBreakdownRef"/>
				<xsd:element name="costBkdnRevRef" type="costBreakdownRevisionRef"/>
				<xsd:element name="costEntryRef" type="costEntryRef"/>
				<xsd:element name="costItemRef" type="costItemRef"/>
				<xsd:element name="countryRef" type="countryRef"/>
				<xsd:element name="dmgRef" type="damageRef"/>
				<xsd:element name="dmgAnlysRef" type="damageAnalysisRef"/>
				<xsd:element name="dmgAnlysRevRef" type="damageAnalysisRevisionRef"/>
				<xsd:element name="dmgCharRef" type="damageCharacteristicRef"/>
				<xsd:element name="dmgDefRef" type="damageDefinitionRef"/>
				<xsd:element name="dmgDefCauseRef" type="damageDefinitionCauseRef"/>
				<xsd:element name="dmgDefImpctRef" type="damageDefinitionImpactRef"/>
				<xsd:element name="datarequestRef" type="dataRequestRef"/>
				<xsd:element name="datarequestCNameRef" type="dataRequestByClassNameRef"/>
				<xsd:element name="datarequestIdRef" type="dataRequestByIdentifierRef"/>
				<xsd:element name="dataRequestUCRef" type="dataRequestByUseCaseNameRef"/>
				<xsd:element name="dataPartRef" type="dataSetAsDesignedRef"/>
				<xsd:element name="dataRelPartRef" type="dataSetAsReleasedRef"/>
				<xsd:element name="dataRelRef" type="dataSetAssociatedWithRef"/>
				<xsd:element name="dcsnTmplRef" type="decisionTreeTemplateRef"/>
				<xsd:element name="degrMechRef" type="degradationMechanismRef"/>
				<xsd:element name="featAccptCritRef" type="degradationMechanismAcceptanceCriteriaRef"/>
				<xsd:element name="derCRReqRef" type="derivedChangeRequestRequirementRef"/>
				<xsd:element name="detMeCapRef" type="detectionMeanCapabilityRef"/>
				<xsd:element name="detmecRef" type="detectionMechanismRef"/>
				<xsd:element name="fileRef" type="digitalFileRef"/>
				<xsd:element name="fileRefRef" type="digitalFileReferenceRef"/>
				<xsd:element name="discrTimeLimRef" type="discreteTimeLimitRef"/>
				<xsd:element name="dispLocRef" type="disposalLocationRef"/>
				<xsd:element name="dispReqRef" type="disposalRequirementRef"/>
				<xsd:element name="dispTransReqRef" type="disposalTransportRequirementRef"/>
				<xsd:element name="docRef" type="documentRef"/>
				<xsd:element name="docIssRef" type="documentIssueRef"/>
				<xsd:element name="docPtyRef" type="documentPartyRef"/>
				<xsd:element name="dwnTPRef" type="downTimePeriodRef"/>
				<xsd:element name="allwdPCEfyRef" type="effectiveOnProductConfigurationRef"/>
				<xsd:element name="envRef" type="environmentRef"/>
				<xsd:element name="envDefRef" type="environmentDefinitionRef"/>
				<xsd:element name="envDefCharRef" type="environmentDefinitionCharacteristicRef"/>
				<xsd:element name="envDefRelRef" type="environmentDefinitionRelationshipRef"/>
				<xsd:element name="envDefRevRef" type="environmentDefinitionRevisionRef"/>
				<xsd:element name="envRelRef" type="environmentRelationshipRef"/>
				<xsd:element name="envRevRef" type="environmentRevisionRef"/>
				<xsd:element name="eqOpRef" type="equipmentOperationRef"/>
				<xsd:element name="eqOwnRef" type="equipmentOwnerRef"/>
				<xsd:element name="assrtInstRef" type="evaluationByAssertionOfClassInstanceRef"/>
				<xsd:element name="assrtCondRef" type="evaluationByAssertionOfConditionRef"/>
				<xsd:element name="assrtPeriodRef" type="evaluationByAssertionOfDateRangeRef"/>
				<xsd:element name="assrtSiRef" type="evaluationByAssertionOfSerializedItemsRef"/>
				<xsd:element name="nestedApplicRef" type="evaluationByNestedApplicabilityStatementRef"/>
				<xsd:element name="evNestedRef" type="evaluationByNestedExpressionRef"/>
				<xsd:element name="evalRef" type="evaluationCriteriaRef"/>
				<xsd:element name="evRef" type="eventRef"/>
				<xsd:element name="evabeRef" type="eventAffectedBreakdownElementRef"/>
				<xsd:element name="evExRef" type="eventExplanationRef"/>
				<xsd:element name="evrRef" type="eventRelationshipRef"/>
				<xsd:element name="evRelItemRef" type="eventRelationshipItemRef"/>
				<xsd:element name="evntRepRef" type="eventReporterRef"/>
				<xsd:element name="evntThldRef" type="eventThresholdDefinitionRef"/>
				<xsd:element name="expfRef" type="explanatoryFactorRef"/>
				<xsd:element name="expContrLicRef" type="exportControlLicenseRef"/>
				<xsd:element name="expLicItemRef" type="exportControlLicenseItemRef"/>
				<xsd:element name="expContrPtyRef" type="exportControlPartyRef"/>
				<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
				<xsd:element name="exConReqCoRef" type="exportControlRequirementAppliedToCountryRef"/>
				<xsd:element name="expevRef" type="expressionEvaluationRef"/>
				<xsd:element name="exdocRef" type="externalDocumentRef"/>
				<xsd:element name="facilityRef" type="facilityRef"/>
				<xsd:element name="fcltyLocRef" type="facilityLocationRef"/>
				<xsd:element name="fcltyOperRef" type="facilityOperatorRef"/>
				<xsd:element name="facOwnRef" type="facilityOwnerRef"/>
				<xsd:element name="fcltyRelRef" type="facilityRelationshipRef"/>
				<xsd:element name="fdRef" type="failureDetectionRef"/>
				<xsd:element name="fModeRef" type="failureModeRef"/>
				<xsd:element name="fmeaRef" type="failureModeAnalysisRef"/>
				<xsd:element name="fmeaRevRef" type="failureModeAnalysisRevisionRef"/>
				<xsd:element name="fModeCauseRef" type="failureModeCauseRef"/>
				<xsd:element name="causeRelRef" type="failureModeCauseItemRelationshipRef"/>
				<xsd:element name="fModeCompRef" type="failureModeCompensatingProvisionRef"/>
				<xsd:element name="fModeEfctRef" type="failureModeEffectRef"/>
				<xsd:element name="efctRelRef" type="failureModeEffectItemRelationshipRef"/>
				<xsd:element name="eqfltRef" type="faultRef"/>
				<xsd:element name="fltcauRef" type="faultCauseRef"/>
				<xsd:element name="fltsymRef" type="faultSymptomRef"/>
				<xsd:element name="fleetRef" type="fleetRef"/>
				<xsd:element name="fltbaseRef" type="fleetBasedAtRef"/>
				<xsd:element name="fltOpRef" type="fleetOperatedByRef"/>
				<xsd:element name="fltOpLocRef" type="fleetOperatesAtLocationRef"/>
				<xsd:element name="fltplRef" type="fleetPlanningRef"/>
				<xsd:element name="fltRelRef" type="fleetRelationshipRef"/>
				<xsd:element name="fleetReqRef" type="fleetRequirementRef"/>
				<xsd:element name="fltTskRef" type="fleetTaskRef"/>
				<xsd:element name="flTskCNRef" type="fleetTaskCancellationNoticeRef"/>
				<xsd:element name="fltTskCRef" type="fleetTaskCargoRef"/>
				<xsd:element name="fltTskLstRef" type="fleetTaskListRef"/>
				<xsd:element name="geoAreaRef" type="geographicalAreaRef"/>
				<xsd:element name="globPosRef" type="globalPositionRef"/>
				<xsd:element name="beHwRef" type="hardwareElementRef"/>
				<xsd:element name="beHwConnRef" type="hardwareElementAttachingConnectorRef"/>
				<xsd:element name="beHwSlotRef" type="hardwareElementAttachmentSlotRef"/>
				<xsd:element name="beHwRealRef" type="hardwareElementPartRealizationRef"/>
				<xsd:element name="beHwRevRef" type="hardwareElementRevisionRef"/>
				<xsd:element name="hwPartContainerRef" type="hardwarePartContainerRef"/>
				<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
				<xsd:element name="infltsymRef" type="indicatedFaultSymptomRef"/>
				<xsd:element name="infrstrRef" type="infrastructureRef"/>
				<xsd:element name="infrAvailRef" type="infrastructureAvailableRef"/>
				<xsd:element name="infrNodeRef" type="infrastructureNodeRef"/>
				<xsd:element name="nodeAtLocRef" type="infrastructureNodeAtLocationRef"/>
				<xsd:element name="nodeRealRef" type="infrastructureNodeRealizationRef"/>
				<xsd:element name="infOpRef" type="infrastructureOperatingPeriodRef"/>
				<xsd:element name="infrPtyRef" type="infrastructurePartyRef"/>
				<xsd:element name="infrRelRef" type="infrastructureRelationshipRef"/>
				<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
				<xsd:element name="isoAnlysRef" type="inServiceOptimizationAnalysisRef"/>
				<xsd:element name="instLocRef" type="installationLocationRef"/>
				<xsd:element name="instPartRef" type="installedPartRef"/>
				<xsd:element name="invactRef" type="inventoryActivityRef"/>
				<xsd:element name="dispOrgRef" type="involvedDisposalOrganizationRef"/>
				<xsd:element name="dispOperRef" type="itemDisposalOperationRef"/>
				<xsd:element name="dispActionRef" type="itemDisposalOperationActionRef"/>
				<xsd:element name="iDispReqRef" type="itemDisposalRequirementRef"/>
				<xsd:element name="itexcoreRef" type="itemExportControlRegulationRef"/>
				<xsd:element name="siwRef" type="itemWarrantyRef"/>
				<xsd:element name="labRateRef" type="laborRatesRef"/>
				<xsd:element name="localPosRef" type="localPositionRef"/>
				<xsd:element name="transpPosRefRef" type="localPositionRef"/>
				<xsd:element name="locRelRef" type="locationRelationshipRef"/>
				<xsd:element name="loctrRef" type="locatorRef"/>
				<xsd:element name="logRef" type="logBookRef"/>
				<xsd:element name="logeRef" type="logBookEntryRef"/>
				<xsd:element name="logecRef" type="logBookEntryMeasurementPointRef"/>
				<xsd:element name="evalAndRef" type="logicalAndRef"/>
				<xsd:element name="evalNotRef" type="logicalNotRef"/>
				<xsd:element name="evalOrRef" type="logicalOrRef"/>
				<xsd:element name="evalXorRef" type="logicalXorRef"/>
				<xsd:element name="looseWasteRef" type="looseWasteRef"/>
				<xsd:element name="mactRef" type="maintenanceActivityRef"/>
				<xsd:element name="mactdRef" type="maintenanceActivityDocumentRef"/>
				<xsd:element name="mactptyRef" type="maintenanceActivityPartyRef"/>
				<xsd:element name="mevRef" type="maintenanceEventRef"/>
				<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
				<xsd:element name="mfaclRef" type="maintenanceFacilityLevelRef"/>
				<xsd:element name="mfacsRef" type="maintenanceFacilitySlotRef"/>
				<xsd:element name="mfacsaRef" type="maintenanceFacilitySlotAccomodationRef"/>
				<xsd:element name="mfacspuRef" type="maintenanceFacilitySlotPlannedUsageRef"/>
				<xsd:element name="mlvRef" type="maintenanceLevelRef"/>
				<xsd:element name="mlicRef" type="maintenanceLicenseRef"/>
				<xsd:element name="morgRef" type="maintenanceOrganizationRef"/>
				<xsd:element name="morgapRef" type="maintenanceOrganizationApprovalRef"/>
				<xsd:element name="mpRef" type="maintenancePersonRef"/>
				<xsd:element name="mpapRef" type="maintenancePersonApprovedProductRef"/>
				<xsd:element name="mpfRef" type="maintenancePersonFacilityRef"/>
				<xsd:element name="mprRef" type="maintenanceProgramRef"/>
				<xsd:element name="mprrRef" type="maintenanceProgramRevisionRef"/>
				<xsd:element name="maintReqRef" type="maintenanceRequirementRef"/>
				<xsd:element name="mcRef" type="majorComponentRef"/>
				<xsd:element name="fleetManRef" type="managedFleetRef"/>
				<xsd:element name="matRef" type="materialRef"/>
				<xsd:element name="mtrlDefRef" type="materialDefinitionRef"/>
				<xsd:element name="mtrlDefRevRef" type="materialDefinitionRevisionRef"/>
				<xsd:element name="mPointRef" type="measurementPointRef"/>
				<xsd:element name="mPointDefRef" type="measuringPointDefinitionRef"/>
				<xsd:element name="msgRef" type="messageRef"/>
				<xsd:element name="msgContextRef" type="messageContextRef"/>
				<xsd:element name="msgPtyRef" type="messagePartyRef"/>
				<xsd:element name="relatedMsgRef" type="messageRelationshipRef"/>
				<xsd:element name="missnDefRef" type="missionDefinitionRef"/>
				<xsd:element name="missnDRevRef" type="missionDefinitionRevisionRef"/>
				<xsd:element name="mvRef" type="movementRef"/>
				<xsd:element name="movlegRef" type="movementLegRef"/>
				<xsd:element name="mvldRef" type="movementLegDelayRef"/>
				<xsd:element name="mvlgRef" type="movementLegPositionRef"/>
				<xsd:element name="mroNetRef" type="mRONetworkRef"/>
				<xsd:element name="nestedAPCRef" type="nestedAllowedProductConfigurationRef"/>
				<xsd:element name="nestedPVRef" type="nestedProductVariantRef"/>
				<xsd:element name="nstspvRef" type="nestedSerializedProductVariantRef"/>
				<xsd:element name="navcauRef" type="nonAvailabilityCauseRef"/>
				<xsd:element name="obfltsymRef" type="observedFaultSymptomRef"/>
				<xsd:element name="obscpRef" type="obsolescenceParameterRef"/>
				<xsd:element name="obsReqRef" type="obsolescenceRequirementRef"/>
				<xsd:element name="opBaseRef" type="operatingBaseRef"/>
				<xsd:element name="opbcRef" type="operatingBaseCapacityRef"/>
				<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef"/>
				<xsd:element name="opacRef" type="operationalActivityRef"/>
				<xsd:element name="opapRef" type="operationalApprovalRef"/>
				<xsd:element name="opevRef" type="operationalEventRef"/>
				<xsd:element name="opevmRef" type="operationalEventMessageRef"/>
				<xsd:element name="opevoRef" type="operationalEventOperatorRef"/>
				<xsd:element name="opmRef" type="operationalModeRef"/>
				<xsd:element name="oppRef" type="operationalPeriodRef"/>
				<xsd:element name="oppoRef" type="operationalPeriodOperatorRef"/>
				<xsd:element name="opprRef" type="operationalPeriodRelationshipRef"/>
				<xsd:element name="operReqRef" type="operationalRequirementRef"/>
				<xsd:element name="oprpRef" type="operationalRequirementsPlanningRef"/>
				<xsd:element name="opRoleRef" type="operationalRoleRef"/>
				<xsd:element name="roleKitImpctRef" type="operationalRoleKitImpactRef"/>
				<xsd:element name="opTaskRef" type="operationalTaskRef"/>
				<xsd:element name="operOrgRef" type="operatorOrganizationRef"/>
				<xsd:element name="operPersRef" type="operatorPersonRef"/>
				<xsd:element name="orgRef" type="organizationRef"/>
				<xsd:element name="orgStrRef" type="organizationalBreakdownStructureRef"/>
				<xsd:element name="orgStrRevRef" type="organizationalBreakdownStructureRevisionRef"/>
				<xsd:element name="orgUnitRef" type="organizationalUnitRef"/>
				<xsd:element name="unitMembRef" type="organizationalUnitMemberRef"/>
				<xsd:element name="unitRelRef" type="organizationalUnitRelationshipRef"/>
				<xsd:element name="operOrgApprRef" type="organizationOperationsApprovalRef"/>
				<xsd:element name="oFacRef" type="otherFacilityRef"/>
				<xsd:element name="paraThldRef" type="parameterThresholdDefinitionRef"/>
				<xsd:element name="parkFacRef" type="parkingFacilityRef"/>
				<xsd:element name="pactRef" type="partActionRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="partsListRef" type="partDefinitionPartsListRef"/>
				<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef"/>
				<xsd:element name="pListRelRef" type="partDefinitionPartsListRelationshipRef"/>
				<xsd:element name="pListRevRef" type="partDefinitionPartsListRevisionRef"/>
				<xsd:element name="sppartpRef" type="partInPoolRef"/>
				<xsd:element name="partwRef" type="partInWarehouseRef"/>
				<xsd:element name="partOwnerRef" type="partOwnerRef"/>
				<xsd:element name="ptyAddrRef" type="partyAddressRef"/>
				<xsd:element name="ptyRelRef" type="partyRelationshipRef"/>
				<xsd:element name="ptyRef" type="penaltyRef"/>
				<xsd:element name="prfmParaRef" type="performanceParameterRef"/>
				<xsd:element name="prfmPRevRef" type="performanceParameterRevisionRef"/>
				<xsd:element name="perTimeLimRef" type="periodicTimeLimitRef"/>
				<xsd:element name="persRef" type="personRef"/>
				<xsd:element name="mpcRef" type="personCompetenceRef"/>
				<xsd:element name="personCatRef" type="personGroupRef"/>
				<xsd:element name="operPersApprRef" type="personOperationsApprovalRef"/>
				<xsd:element name="pliuRef" type="plannedItemUpgradeRef"/>
				<xsd:element name="plpilRef" type="plannedPartInstallationLocationRef"/>
				<xsd:element name="plndTaskUseRef" type="plannedTaskUsageRef"/>
				<xsd:element name="plutRef" type="plannedUpgradeTimescalesRef"/>
				<xsd:element name="polRegRef" type="policiesAndRegulationsRef"/>
				<xsd:element name="poolRef" type="poolRef"/>
				<xsd:element name="pooloRef" type="poolOwnerRef"/>
				<xsd:element name="pinwhrRef" type="poolStockedInWareHouseRef"/>
				<xsd:element name="poolUsrRef" type="poolUserRef"/>
				<xsd:element name="portRef" type="portRef"/>
				<xsd:element name="pwrgridRef" type="powerGridRef"/>
				<xsd:element name="psensorRef" type="pressureSensorRef"/>
				<xsd:element name="prodRef" type="productRef"/>
				<xsd:element name="opRoleConfRef" type="productOperationalRoleConfigurationRef"/>
				<xsd:element name="roleConfRevRef" type="productOperationalRoleConfigurationRevisionRef"/>
				<xsd:element name="roleConfKitRef" type="productOperationalRoleConfigurationRoleKitRef"/>
				<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef"/>
				<xsd:element name="prodpoevRef" type="productParameterAtOperationalEventRef"/>
				<xsd:element name="pupRef" type="productUsagePhaseRef"/>
				<xsd:element name="puphrRef" type="productUsagePhaseHierarchicalRelationshipRef"/>
				<xsd:element name="phseRelRef" type="productUsagePhaseRelationshipRef"/>
				<xsd:element name="pupsrRef" type="productUsagePhaseSequentialRelationshipRef"/>
				<xsd:element name="prodVarRef" type="productVariantRef"/>
				<xsd:element name="prodvmRef" type="productVariantMaintenanceRef"/>
				<xsd:element name="prodvspRef" type="productVariantSupportedByPoolRef"/>
				<xsd:element name="projRef" type="projectRef"/>
				<xsd:element name="projContrRef" type="projectContractRef"/>
				<xsd:element name="projRelRef" type="projectRelationshipRef"/>
				<xsd:element name="refltsymRef" type="recordedFaultSymptomRef"/>
				<xsd:element name="recovItemRef" type="recoveredItemRef"/>
				<xsd:element name="rectTaskRef" type="rectifyingTaskRef"/>
				<xsd:element name="refFileRef" type="referencedDigitalFileRef"/>
				<xsd:element name="refDocRef" type="referencedDocumentRef"/>
				<xsd:element name="refOrgRef" type="referencedOrganizationRef"/>
				<xsd:element name="reldataassRef" type="releasedDataSetAssociatedWithRef"/>
				<xsd:element name="repDefRef" type="repeatDefinitionRef"/>
				<xsd:element name="rptRef" type="reportRef"/>
				<xsd:element name="rptActRef" type="reportableActivityRef"/>
				<xsd:element name="rptActPtyRef" type="reportableActivityPartyRef"/>
				<xsd:element name="rptmRef" type="reportableMetricRef"/>
				<xsd:element name="rptCxtRef" type="reportContextRef"/>
				<xsd:element name="rptdIssRef" type="reportedIssueRef"/>
				<xsd:element name="rptdMetrRef" type="reportedMetricRef"/>
				<xsd:element name="rptPartyRef" type="reportPartyRef"/>
				<xsd:element name="dispPolRef" type="requiredDisposalPolicyRef"/>
				<xsd:element name="reqflrRef" type="requiredFleetRoleRef"/>
				<xsd:element name="reqpslpRef" type="requiredPartStockLevelInPoolRef"/>
				<xsd:element name="reqsaRef" type="requiredSafetyActionRef"/>
				<xsd:element name="reqRef" type="requirementRef"/>
				<xsd:element name="reqptyRef" type="requirementPartyRef"/>
				<xsd:element name="reqrelRef" type="requirementRelationshipRef"/>
				<xsd:element name="resSpecRef" type="resourceSpecificationRef"/>
				<xsd:element name="resSpecRealRef" type="resourceSpecificationRealizationRef"/>
				<xsd:element name="resSpecRevRef" type="resourceSpecificationRevisionRef"/>
				<xsd:element name="resupRef" type="resourceUsagePartyRef"/>
				<xsd:element name="resUsrRef" type="resourceUsageRequestRef"/>
				<xsd:element name="restrRef" type="restrictionRef"/>
				<xsd:element name="resDMRef" type="resultingDataModuleRef"/>
				<xsd:element name="rolecRef" type="roleCapabilityRef"/>
				<xsd:element name="s1000dDMRef" type="s1000DDataModuleRef"/>
				<xsd:element name="s1000dDMIssRef" type="s1000DDataModuleIssueRef"/>
				<xsd:element name="s1000dPMRef" type="s1000DPublicationModuleRef"/>
				<xsd:element name="s1000dPMIssRef" type="s1000DPublicationModuleIssueRef"/>
				<xsd:element name="safedocRef" type="safetyDocumentRef"/>
				<xsd:element name="safeissRef" type="safetyIssueRef"/>
				<xsd:element name="safeIssEvRef" type="safetyIssueEventRef"/>
				<xsd:element name="safeReqRef" type="safetyRequirementRef"/>
				<xsd:element name="safeReqDocRef" type="safetyRequirementsDocumentRef"/>
				<xsd:element name="safewRef" type="safetyWarningRef"/>
				<xsd:element name="scormRef" type="sCORMContentPackageRef"/>
				<xsd:element name="secClassDefRef" type="securityClassRef"/>
				<xsd:element name="secRef" type="securityClassificationRef"/>
				<xsd:element name="snsrRef" type="sensorRef"/>
				<xsd:element name="snsrsmpRef" type="sensorSampleRef"/>
				<xsd:element name="snsrtRef" type="sensorTypeRef"/>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="partModRef" type="serializedHardwarePartModificationRef"/>
				<xsd:element name="siowRef" type="serializedItemOwnerRef"/>
				<xsd:element name="spdaRef" type="serializedPartDesignAssociationRef"/>
				<xsd:element name="serPartPosRef" type="serializedPartsListPositionRef"/>
				<xsd:element name="sproopRef" type="serializedProductOperationalPeriodRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
				<xsd:element name="spvaRef" type="serializedProductVariantAssignmentRef"/>
				<xsd:element name="serPVConfRef" type="serializedProductVariantConfigurationConformanceRef"/>
				<xsd:element name="inFleetRef" type="serializedProductVariantInFleetRef"/>
				<xsd:element name="spvobRef" type="serializedProductVariantOperatingBaseRef"/>
				<xsd:element name="serPVoperRef" type="serializedProductVariantOperatorRef"/>
				<xsd:element name="spvzRef" type="serializedProductVariantZoneRef"/>
				<xsd:element name="ssuppeqRef" type="serializedSupportEquipmentRef"/>
				<xsd:element name="servRef" type="serviceRef"/>
				<xsd:element name="servBuRef" type="serviceBulletinRef"/>
				<xsd:element name="servcRef" type="serviceContractRef"/>
				<xsd:element name="slacRef" type="serviceLevelAgreementClauseRef"/>
				<xsd:element name="servReqRef" type="serviceRequestRef"/>
				<xsd:element name="servrcRef" type="serviceRequestCancellationRef"/>
				<xsd:element name="servReqItemRef" type="serviceRequestItemRef"/>
				<xsd:element name="servrlRef" type="serviceRequestLocationRef"/>
				<xsd:element name="servrpRef" type="serviceRequestPartyRef"/>
				<xsd:element name="srvReqrRef" type="serviceRequestRelationshipRef"/>
				<xsd:element name="shopfRef" type="shopFindingsRef"/>
				<xsd:element name="shopfdRef" type="shopFindingsDeterminedByRef"/>
				<xsd:element name="skillRef" type="skillRef"/>
				<xsd:element name="skillLevelRef" type="skillLevelRef"/>
				<xsd:element name="beSwRef" type="softwareElementRef"/>
				<xsd:element name="beSwRealRef" type="softwareElementPartRealizationRef"/>
				<xsd:element name="beSwRevRef" type="softwareElementRevisionRef"/>
				<xsd:element name="swerrRef" type="softwareErrorRef"/>
				<xsd:element name="swerrosRef" type="softwareErrorOSRef"/>
				<xsd:element name="swerrpRef" type="softwareErrorPlatformRef"/>
				<xsd:element name="swosRef" type="softwareOSRef"/>
				<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
				<xsd:element name="swPartRef" type="softwarePartDefinitionRef"/>
				<xsd:element name="swplRef" type="softwarePlatformRef"/>
				<xsd:element name="spEvDefRef" type="specialEventDefinitionRef"/>
				<xsd:element name="ssafeinsRef" type="specialSafetyInstructionRef"/>
				<xsd:element name="straingRef" type="strainGaugeRef"/>
				<xsd:element name="strAddrRef" type="streetAddressRef"/>
				<xsd:element name="subsRef" type="substanceDefinitionRef"/>
				<xsd:element name="subsRevRef" type="substanceDefinitionRevisionRef"/>
				<xsd:element name="subsEmRef" type="substanceEmissionRef"/>
				<xsd:element name="substPartRef" type="substitutePartDefinitionRef"/>
				<xsd:element name="subtRef" type="subtaskRef"/>
				<xsd:element name="subtByDefRef" type="subtaskByDefinitionRef"/>
				<xsd:element name="subtByRefRef" type="subtaskByTaskReferenceRef"/>
				<xsd:element name="inZoneRef" type="subtaskInZoneRef"/>
				<xsd:element name="sourceDocRef" type="subtaskSourceDocumentRef"/>
				<xsd:element name="subtTargRef" type="subtaskTargetRef"/>
				<xsd:element name="precSubtRef" type="subtaskTimelineRef"/>
				<xsd:element name="subtWcnRef" type="subtaskWarningCautionNoteRef"/>
				<xsd:element name="suppusedRef" type="suppliesUsedRef"/>
				<xsd:element name="suppeqRef" type="supportEquipmentRef"/>
				<xsd:element name="suppewuRef" type="supportEquipmentUsedRef"/>
				<xsd:element name="supTaskRef" type="supportingTaskRef"/>
				<xsd:element name="supTaskUseRef" type="supportingTaskUsageRef"/>
				<xsd:element name="tachoRef" type="tachometerRef"/>
				<xsd:element name="taskRef" type="taskRef"/>
				<xsd:element name="taskJustRef" type="taskJustificationRef"/>
				<xsd:element name="persResCompRef" type="taskPersonnelResourceCompetenceRef"/>
				<xsd:element name="taskReqRef" type="taskRequirementRef"/>
				<xsd:element name="trJustRef" type="taskRequirementJustificationRef"/>
				<xsd:element name="trRevRef" type="taskRequirementRevisionRef"/>
				<xsd:element name="taskResRef" type="taskResourceRef"/>
				<xsd:element name="taskRevRef" type="taskRevisionRef"/>
				<xsd:element name="taskWcnRef" type="taskRevisionWarningCautionNoteRef"/>
				<xsd:element name="taskUseRef" type="taskUsageRef"/>
				<xsd:element name="toRef" type="technicalOrderRef"/>
				<xsd:element name="toembRef" type="technicalOrderEmbodiedRef"/>
				<xsd:element name="tmpsnsrRef" type="temperatureSensorRef"/>
				<xsd:element name="thldRef" type="thresholdDefinitionRef"/>
				<xsd:element name="timeLimRef" type="timeLimitRef"/>
				<xsd:element name="tradeRef" type="tradeRef"/>
				<xsd:element name="tracapRef" type="transportCapabilityRef"/>
				<xsd:element name="tracapusRef" type="transportCapabilityUsageRef"/>
				<xsd:element name="transpNetRef" type="transportNetworkRef"/>
				<xsd:element name="transReqRef" type="transportRequirementRef"/>
				<xsd:element name="persTypeRef" type="typeOfPersonRef"/>
				<xsd:element name="unacceptRef" type="unacceptableConditionRef"/>
				<xsd:element name="upReqRef" type="upgradeRequirementRef"/>
				<xsd:element name="usableOnRef" type="usableOnProductVariantRef"/>
				<xsd:element name="whRef" type="warehouseRef"/>
				<xsd:element name="wcnRef" type="warningCautionNoteRef"/>
				<xsd:element name="wcRef" type="warrantyClaimRef"/>
				<xsd:element name="wccRef" type="warrantyClaimContactRef"/>
				<xsd:element name="wcevRef" type="warrantyClaimEventsRef"/>
				<xsd:element name="wcfRef" type="warrantyClaimFollowUpRef"/>
				<xsd:element name="wcrRef" type="warrantyClaimResolutionRef"/>
				<xsd:element name="wevRef" type="warrantyEventRef"/>
				<xsd:element name="wasteContRef" type="wasteContainerRef"/>
				<xsd:element name="wasteDispOpRef" type="wasteDisposalOperationRef"/>
				<xsd:element name="wasteDispOpActRef" type="wasteDisposalOperationActionRef"/>
				<xsd:element name="wDispReqRef" type="wasteDisposalRequirementRef"/>
				<xsd:element name="wasteRecovRef" type="wasteRecoveredItemRef"/>
				<xsd:element name="wbsRef" type="workBreakdownRef"/>
				<xsd:element name="wbsRevRef" type="workBreakdownRevisionRef"/>
				<xsd:element name="workItemRef" type="workItemRef"/>
				<xsd:element name="woRef" type="workOrderRef"/>
				<xsd:element name="beZoneRef" type="zoneElementRef"/>
				<xsd:element name="beZoneRevRef" type="zoneElementRevisionRef"/>
			</xsd:choice>
			<xsd:element name="secClassDefRef" type="securityClassRef"/>
			<xsd:element name="secAuth" type="securityClassificationAuthority"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="sc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(secClassDefRef) and not(@uriRef)) or (not(@uidRef) and secClassDefRef and not(@uriRef)) or (not(@uidRef) and not(secClassDefRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sensorRef">
		<xsd:annotation>
			<xsd:documentation>
    Sensor is an individual SensorType that has a unique identity and can be used to measure values of a specific type.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:sensor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
			<xsd:element name="sensId" type="sensorIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="snsr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sensorSampleRef">
		<xsd:annotation>
			<xsd:documentation>
    SensorSample is a particular reading of an individual sensor at a specific point in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:sensorSample</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRef" type="breakdownElementRef"/>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
				<xsd:element name="instLocRef" type="installationLocationRef"/>
				<xsd:element name="mvRef" type="movementRef"/>
				<xsd:element name="movlegRef" type="movementLegRef"/>
				<xsd:element name="oppRef" type="operationalPeriodRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="mPointId" type="measurementPointIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="mpoint[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mPointId) and not(@uriRef)) or (not(@uidRef) and mPointId and not(@uriRef)) or (not(@uidRef) and not(mPointId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="sensorTypeRef">
		<xsd:annotation>
			<xsd:documentation>
    SensorType is HardwarePartAsDesigned that measures physical events and provides the information to external devices.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:sensorType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePartRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedHardwarePart is [class] that represent an actual physical part which can be identified as an individual.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedHardwarePart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partDefinitionIdentifier"/>
			<xsd:element name="serialId" type="serializedHardwarePartIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="spart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedHardwarePartModificationRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedHardwarePartModification is a [relationship] where a modified SerializedHardwarePart relates back to its previous design standard and its history.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedHardwarePartModification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="shwmodof[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPartRef) and not(@uriRef)) or (not(@uidRef) and serialPartRef and not(@uriRef)) or (not(@uidRef) and not(serialPartRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedItemOwnerRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedItemOwner is a [relationship] describing the party holding the partial or total ownership of an item implementing the SerializedItem [interface].
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedItemOwner</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
				<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			</xsd:choice>
			<xsd:element name="party" type="party"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="siow[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(party) and not(@uriRef)) or (not(@uidRef) and party and not(@uriRef)) or (not(@uidRef) and not(party) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedPartDesignAssociationRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedPartDesignAssociation is a [relationship] that associates a SerializedHardwarePart to the HardwarePartAsDesigned that defines its functionality 
    during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedPartDesignAssociation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="spda[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPartRef) and not(@uriRef)) or (not(@uidRef) and serialPartRef and not(@uriRef)) or (not(@uidRef) and not(serialPartRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedPartsListPositionRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedPartsListPosition is a [class] that represents a position within the associated SerializedHardwarePart.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedPartsListPosition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partDefinitionIdentifier"/>
			<xsd:element name="serialId" type="serializedHardwarePartIdentifier"/>
			<xsd:element name="posId" type="serializedPartsListPositionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="serplpos[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductOperationalPeriodRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductOperationalPeriod is a [relationship] that describes the specific operational role of a SerializedProductVariant during a particular 
    operational period.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductOperationalPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="oppRef" type="operationalPeriodRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="sproop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPVRef) and not(@uriRef)) or (not(@uidRef) and serialPVRef and not(@uriRef)) or (not(@uidRef) and not(serialPVRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariant is [class] that represent an actual product variant which is identified as an individual.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="prodId" type="productDefinitionIdentifier"/>
			<xsd:element name="prodVarId" type="productVariantDefinitionIdentifier"/>
			<xsd:element name="serPVId" type="serializedProductVariantIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="serialpv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(prodId) and not(@uriRef)) or (not(@uidRef) and prodId and not(@uriRef)) or (not(@uidRef) and not(prodId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantAssignmentRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariantAssignment is a [relationship] between a FleetTask and the vehicle that has been assigned to perform that FleetTask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantAssignment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fltTskRef" type="fleetTaskRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="assId" type="serializedProductVariantAssignmentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="spva[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fltTskRef) and not(@uriRef)) or (not(@uidRef) and fltTskRef and not(@uriRef)) or (not(@uidRef) and not(fltTskRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantConfigurationConformanceRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariantConfigurationConformance is a [relationship] that identifies the allowed product configuration to which the 
    SerializedProductVariant complies with during a defined period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantConfigurationConformance</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="allwdPCItem" type="allowedProductConfigurationItem"/>
			<xsd:element name="startDate" type="configurationConformanceStartDateTime"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="pcconf[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPVRef) and not(@uriRef)) or (not(@uidRef) and serialPVRef and not(@uriRef)) or (not(@uidRef) and not(serialPVRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantInFleetRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariantInFleet is a [relationship] that defines the association between a SerializedProductVariant and the Fleet to which it belongs.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantInFleet</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="spvof[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPVRef) and not(@uriRef)) or (not(@uidRef) and serialPVRef and not(@uriRef)) or (not(@uidRef) and not(serialPVRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantOperatingBaseRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariantOperatingBase is a [relationship] that establishes in which OperatingBase a SerializedProductVariant has been operating during a 
    specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantOperatingBase</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="opBaseRef" type="operatingBaseRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="spvob[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPVRef) and not(@uriRef)) or (not(@uidRef) and serialPVRef and not(@uriRef)) or (not(@uidRef) and not(serialPVRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantOperatorRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariantOperator is a [relationship] defining the operation of a SerializedProductVariant during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="operItem" type="operatorItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="spvoper[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(serialPVRef) and not(@uriRef)) or (not(@uidRef) and serialPVRef and not(@uriRef)) or (not(@uidRef) and not(serialPVRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedProductVariantZoneRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedProductVariantZone is a [relationship] that allows to associate a Damage to a serialied ProductVariantZone.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedProductVariantZone</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beZoneRevRef" type="zoneElementRevisionRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="spvz[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beZoneRevRef) and not(@uriRef)) or (not(@uidRef) and beZoneRevRef and not(@uriRef)) or (not(@uidRef) and not(beZoneRevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedSupportEquipmentRef">
		<xsd:annotation>
			<xsd:documentation>
    SerializedSupportEquipment is a SerialiedHardwarePart that is used exclusively for support purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serializedSupportEquipment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partDefinitionIdentifier"/>
			<xsd:element name="serialId" type="serializedHardwarePartIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="spart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRef">
		<xsd:annotation>
			<xsd:documentation>
    Service is a contract where technical or intellectual work is performed but no delivery of goods takes place.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:service</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="servId" type="serviceIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="serv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(servId) and not(@uriRef)) or (not(@uidRef) and servId and not(@uriRef)) or (not(@uidRef) and not(servId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceBulletinRef">
		<xsd:annotation>
			<xsd:documentation>
    ServiceBulletin is a class representing a set of documentation, material, spares and possibly other resources required to embody a change embodiment 
    requirement into a ProductVariant or SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceBulletin</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceContractRef">
		<xsd:annotation>
			<xsd:documentation>
    ServiceContract is a  [relationship] that allows a service being provided to be associated to a specific contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceContract</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="servRef" type="serviceRef"/>
			<xsd:element name="contrRef" type="contractRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="servc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(servRef) and not(@uriRef)) or (not(@uidRef) and servRef and not(@uriRef)) or (not(@uidRef) and not(servRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceLevelAgreementClauseRef">
		<xsd:annotation>
			<xsd:documentation>
    ServiceLevelAgreementClause is a contractual clause related to a service that determines the level of service to be provided.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceLevelAgreementClause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="contrId" type="contractIdentifier"/>
			<xsd:element name="clauseId" type="contractClauseIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="contrc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(contrId) and not(@uriRef)) or (not(@uidRef) and contrId and not(@uriRef)) or (not(@uidRef) and not(contrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestRef">
		<xsd:annotation>
			<xsd:documentation>
    ServiceRequest is a class representing a demand from one party to another partyto provide a service.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequest</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="servId" type="serviceIdentifier"/>
			<xsd:element name="reqId" type="serviceRequestIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="servreq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(servId) and not(@uriRef)) or (not(@uidRef) and servId and not(@uriRef)) or (not(@uidRef) and not(servId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestCancellationRef">
		<xsd:annotation>
			<xsd:documentation>
    ServiceRequestCancellation is a [class] that allows to cancel one or more Services by a Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestCancellation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="canId" type="serviceRequestCancellationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="servrc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(canId) and not(@uriRef)) or (not(@uidRef) and canId and not(@uriRef)) or (not(@uidRef) and not(canId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestItemRef">
		<xsd:annotation>
			<xsd:documentation>
    ServiceRequestItem is a [relationship] that allows to associate one or several items of a same type to a ServiceRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="servReqRef" type="serviceRequestRef"/>
			<xsd:element name="servItem" type="serviceItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="sereit[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(servReqRef) and not(@uriRef)) or (not(@uidRef) and servReqRef and not(@uriRef)) or (not(@uidRef) and not(servReqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestLocationRef">
		<xsd:annotation>
			<xsd:documentation>
    ServiceRequestLocation is a [relationship] stating the locating where a ServiceRequest has to be complied with.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestLocation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="servReqRef" type="serviceRequestRef"/>
			<xsd:element name="locItem" type="locationItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="servrl[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(servReqRef) and not(@uriRef)) or (not(@uidRef) and servReqRef and not(@uriRef)) or (not(@uidRef) and not(servReqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestPartyRef">
		<xsd:annotation>
			<xsd:documentation>
    ServiceRequestParty is a [relationship] that associates a ServiceRequest to the party that has demanded it or has to provide it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="servReqRef" type="serviceRequestRef"/>
			<xsd:element name="party" type="party"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="servrp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(servReqRef) and not(@uriRef)) or (not(@uidRef) and servReqRef and not(@uriRef)) or (not(@uidRef) and not(servReqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceRequestRelationshipRef">
		<xsd:annotation>
			<xsd:documentation>
    ServiceRequestRelationship is a  [relationship] that indicates the association between two different ServiceRequests.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:serviceRequestRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="servReqRef" type="serviceRequestRef"/>
			<xsd:element name="servReqRef" type="serviceRequestRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="srvreqr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(servReqRef) and not(@uriRef)) or (not(@uidRef) and servReqRef and not(@uriRef)) or (not(@uidRef) and not(servReqRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="shopFindingsRef">
		<xsd:annotation>
			<xsd:documentation>
    ShopFindings is a class representing the results of a fault investigation performed on an equipment in a workshop.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:shopFindings</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partDefinitionIdentifier"/>
			<xsd:element name="serialId" type="serializedHardwarePartIdentifier"/>
			<xsd:element name="findId" type="shopFindingsIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="shopf[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="shopFindingsDeterminedByRef">
		<xsd:annotation>
			<xsd:documentation>
    ShopFindingsDeterminedBy is a [relationship] that allows ShopFindings to be associated to the DetectionMeans that allowed such findings.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:shopFindingsDeterminedBy</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="shopfRef" type="shopFindingsRef"/>
			<xsd:element name="det" type="detector"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="shopfd[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(shopfRef) and not(@uriRef)) or (not(@uidRef) and shopfRef and not(@uriRef)) or (not(@uidRef) and not(shopfRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="skillRef">
		<xsd:annotation>
			<xsd:documentation>
    Skill is a [class] that represents human cognitive, psychomotor, and affective abilities. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:skill</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="skillCode" type="skillCode"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="skill[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(skillCode) and not(@uriRef)) or (not(@uidRef) and skillCode and not(@uriRef)) or (not(@uidRef) and not(skillCode) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="skillLevelRef">
		<xsd:annotation>
			<xsd:documentation>
    SkillLevel is a [class] that represents a defined proficiency of a Trade.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:skillLevel</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="tradeName" type="tradeName"/>
			<xsd:element name="skLvlName" type="skillLevelName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="sklev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(tradeName) and not(@uriRef)) or (not(@uidRef) and tradeName and not(@uriRef)) or (not(@uidRef) and not(tradeName) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareElementRef">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareElement is a BreakdownElement that is realized as a SoftwarePartDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareElement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beId" type="breakdownElementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="be[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beId) and not(@uriRef)) or (not(@uidRef) and beId and not(@uriRef)) or (not(@uidRef) and not(beId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareElementPartRealizationRef">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareElementPartRealization is a [relationship] where a SoftwareElementRevision relates to an instance of SoftwarePartDefinition which fulfills the 
    SoftwareElement specification.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareElementPartRealization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beSwRevRef" type="softwareElementRevisionRef"/>
			<xsd:element name="swPartRef" type="softwarePartDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="swr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beSwRevRef) and not(@uriRef)) or (not(@uidRef) and beSwRevRef and not(@uriRef)) or (not(@uidRef) and not(beSwRevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareElementRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareElementRevision is a BreakdownElementRevision representing an iteration applied to a SoftwareElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareElementRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beId" type="breakdownElementIdentifier"/>
			<xsd:element name="revId" type="breakdownElementRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ber[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beId) and not(@uriRef)) or (not(@uidRef) and beId and not(@uriRef)) or (not(@uidRef) and not(beId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorRef">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareError is a [class] that represents a fault detected during the execution of a SoftwarePartAsReleased.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareError</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="errId" type="softwareErrorIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="swerr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(errId) and not(@uriRef)) or (not(@uidRef) and errId and not(@uriRef)) or (not(@uidRef) and not(errId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorOSRef">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareErrorOS is a [relationship] that indicates the operating system on which a SoftwarePartAsReleased was executing when a SoftwareError was detected.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareErrorOS</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="swerrRef" type="softwareErrorRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="swerros[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(swerrRef) and not(@uriRef)) or (not(@uidRef) and swerrRef and not(@uriRef)) or (not(@uidRef) and not(swerrRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareErrorPlatformRef">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareErrorPlatform is a [relationship] that indicates the HardwarePartAsDesigned on which a SoftwarePartAsReleased was executing when a SoftwareError 
    was detected.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareErrorPlatform</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="swerrRef" type="softwareErrorRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="swerrp[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(swerrRef) and not(@uriRef)) or (not(@uidRef) and swerrRef and not(@uriRef)) or (not(@uidRef) and not(swerrRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwareOSRef">
		<xsd:annotation>
			<xsd:documentation>
    SoftwareOS is a [relationship] that defines the operating system on which a SoftwarePartAsReleased executes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwareOS</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="swos[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(swRelPartRef) and not(@uriRef)) or (not(@uidRef) and swRelPartRef and not(@uriRef)) or (not(@uidRef) and not(swRelPartRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwarePartAsReleasedRef">
		<xsd:annotation>
			<xsd:documentation>
    SoftwarePartAsReleased is [class] that represents actual build of a software which is delivered.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwarePartAsReleased</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partDefinitionIdentifier"/>
			<xsd:element name="swRelId" type="softwarePartAsReleasedIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="relswpart[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwarePartDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    SoftwarePartDefinition is a PartDefinition that is produced as an executable software or as a data file.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwarePartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="softwarePlatformRef">
		<xsd:annotation>
			<xsd:documentation>
    SoftwarePlatform is a [relationship] that indicates the HardwarePartAsDesigned on which a SoftwarePartAsReleased can execute.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:softwarePlatform</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="swpl[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(swRelPartRef) and not(@uriRef)) or (not(@uidRef) and swRelPartRef and not(@uriRef)) or (not(@uidRef) and not(swRelPartRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="specialEventDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    SpecialEventDefinition is a [class] that represents a typical happening which can be induced to the item under analysis during its normal operation, and 
    can lead to damages.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:specialEventDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="spEvName" type="specialEventDefinitionName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="speed[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(spEvName) and not(@uriRef)) or (not(@uidRef) and spEvName and not(@uriRef)) or (not(@uidRef) and not(spEvName) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="specialSafetyInstructionRef">
		<xsd:annotation>
			<xsd:documentation>
    SpecialSafetyInstruction is a SafetyDocument providing specific mandatory instructions to be followed in addition to those existing in the standard 
    documentation so as that special safety issues can be addressed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:specialSafetyInstruction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="docId" type="documentIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="doc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(docId) and not(@uriRef)) or (not(@uidRef) and docId and not(@uriRef)) or (not(@uidRef) and not(docId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="strainGaugeRef">
		<xsd:annotation>
			<xsd:documentation>
    StrainGauge is a SensorType whose resistance varies with applied force; it converts force, pressure, tension, weight, etc, into a change in electrical 
    resistance which can then be measured.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:strainGauge</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="streetAddressRef">
		<xsd:annotation>
			<xsd:documentation>
    StreetAddress is a [class&gt; that represents a locatable position along a road. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:streetAddress</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="ctryCode" type="countryIdentifier"/>
			<xsd:element name="streetName" type="streetName"/>
			<xsd:element name="streetNr" type="streetNumber"/>
			<xsd:element name="cityName" type="cityName"/>
			<xsd:element name="postCode" type="postalCode"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="straddr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(ctryCode) and not(@uriRef)) or (not(@uidRef) and ctryCode and not(@uriRef)) or (not(@uidRef) and not(ctryCode) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    SubstanceDefinition is a [class] that identifies high concern physical matter.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="subsId" type="substanceDefinitionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="subs[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(subsId) and not(@uriRef)) or (not(@uidRef) and subsId and not(@uriRef)) or (not(@uidRef) and not(subsId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceDefinitionRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    SubstanceDefinitionRevision is a [class] representing an iteration applied to a SubstanceDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceDefinitionRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="subsId" type="substanceDefinitionIdentifier"/>
			<xsd:element name="revId" type="substanceDefinitionRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="subsrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(subsId) and not(@uriRef)) or (not(@uidRef) and subsId and not(@uriRef)) or (not(@uidRef) and not(subsId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceEmissionRef">
		<xsd:annotation>
			<xsd:documentation>
    SubstanceEmission is a [relationship] that allows to document emissions of one or several substances during a specific period of time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substanceEmission</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="infOpRef" type="infrastructureOperatingPeriodRef"/>
				<xsd:element name="mvRef" type="movementRef"/>
				<xsd:element name="movlegRef" type="movementLegRef"/>
				<xsd:element name="oppRef" type="operationalPeriodRef"/>
			</xsd:choice>
			<xsd:element name="subsRef" type="substanceDefinitionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="subsem[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(subsRef) and not(@uriRef)) or (not(@uidRef) and subsRef and not(@uriRef)) or (not(@uidRef) and not(subsRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substitutePartDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    SubstitutePartDefinition is a [relationship] that defines a substitute PartDefinitionPartsListEntry which can replace the base PartDefinitionPartsListEntry 
    in the context of the parent PartDefinitionPartsListRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:substitutePartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef"/>
			<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="sbtpt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(pListEntryRef) and not(@uriRef)) or (not(@uidRef) and pListEntryRef and not(@uriRef)) or (not(@uidRef) and not(pListEntryRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskRef">
		<xsd:annotation>
			<xsd:documentation>
    Subtask is a [class] that represents the specification of a work step that is to be performed as part of a Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskId" type="taskIdentifier"/>
			<xsd:element name="revId" type="taskRevisionIdentifier"/>
			<xsd:element name="subtId" type="subtaskIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="subt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskId) and not(@uriRef)) or (not(@uidRef) and taskId and not(@uriRef)) or (not(@uidRef) and not(taskId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskByDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskByDefinition is a Subtask that provides detailed information of the defined work step.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskByDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskId" type="taskIdentifier"/>
			<xsd:element name="revId" type="taskRevisionIdentifier"/>
			<xsd:element name="subtId" type="subtaskIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="subt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskId) and not(@uriRef)) or (not(@uidRef) and taskId and not(@uriRef)) or (not(@uidRef) and not(taskId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskByTaskReferenceRef">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskByTaskReference is a Subtask where the details of the subtask are defined as a separate Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskByTaskReference</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskId" type="taskIdentifier"/>
			<xsd:element name="revId" type="taskRevisionIdentifier"/>
			<xsd:element name="subtId" type="subtaskIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="subt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskId) and not(@uriRef)) or (not(@uidRef) and taskId and not(@uriRef)) or (not(@uidRef) and not(taskId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskInZoneRef">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskInZone is a [relationship] that identifies the zone where the Subtask is to be performed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskInZone</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="subtByDefRef" type="subtaskByDefinitionRef"/>
			<xsd:element name="beZoneRef" type="zoneElementRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="subtiz[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(subtByDefRef) and not(@uriRef)) or (not(@uidRef) and subtByDefRef and not(@uriRef)) or (not(@uidRef) and not(subtByDefRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskSourceDocumentRef">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskSourceDocument is a [relationship] that identifies an external Document where the Subtask is originally defined and more details are given.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskSourceDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="subtByDefRef" type="subtaskByDefinitionRef"/>
			<xsd:element name="docItem" type="documentItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="subtsrc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(subtByDefRef) and not(@uriRef)) or (not(@uidRef) and subtByDefRef and not(@uriRef)) or (not(@uidRef) and not(subtByDefRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskTargetRef">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskTarget is a [relationship] that identifies the item on which the Subtask is to be performed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskTarget</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="subtByDefRef" type="subtaskByDefinitionRef"/>
			<xsd:element name="targItem" type="subtaskTargetItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="subttg[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(subtByDefRef) and not(@uriRef)) or (not(@uidRef) and subtByDefRef and not(@uriRef)) or (not(@uidRef) and not(subtByDefRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskTimelineRef">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskTimeline is a [relationship] that identifies that there is a time dependency between two Subtasks within the same Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskTimeline</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="subtRef" type="subtaskRef"/>
			<xsd:element name="subtRef" type="subtaskRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="subtt[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(subtRef) and not(@uriRef)) or (not(@uidRef) and subtRef and not(@uriRef)) or (not(@uidRef) and not(subtRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskWarningCautionNoteRef">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskWarningCautionNote is a [relationship] that identifies a WarningCautionNote that is associated with a given Subtask.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:subtaskWarningCautionNote</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="subtRef" type="subtaskRef"/>
			<xsd:element name="wcnRef" type="warningCautionNoteRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="subwcn[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(subtRef) and not(@uriRef)) or (not(@uidRef) and subtRef and not(@uriRef)) or (not(@uidRef) and not(subtRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="suppliesUsedRef">
		<xsd:annotation>
			<xsd:documentation>
    SuppliesUsed is a [relationship] that describes the amount of supplies used for a MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:suppliesUsed</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="mactRef" type="maintenanceActivityRef"/>
			<xsd:element name="suppItem" type="supplyItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="suppused[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mactRef) and not(@uriRef)) or (not(@uidRef) and mactRef and not(@uriRef)) or (not(@uidRef) and not(mactRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportEquipmentRef">
		<xsd:annotation>
			<xsd:documentation>
    SupportEquipment is a HardwareElement used exclusively for support purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:supportEquipment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportEquipmentUsedRef">
		<xsd:annotation>
			<xsd:documentation>
    SupportEquipmentUsed is a [relationship] that defines the equipment that has been used to perform a specific MaintenanceActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:supportEquipmentUsed</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="mactRef" type="maintenanceActivityRef"/>
			<xsd:element name="supEqItem" type="supportEquipmentItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="suppewu[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(mactRef) and not(@uriRef)) or (not(@uidRef) and mactRef and not(@uriRef)) or (not(@uidRef) and not(mactRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportingTaskRef">
		<xsd:annotation>
			<xsd:documentation>
    SupportingTask is a Task that does not meet a TaskRequirement, but identifies a set of work steps which will be carried out as part of multiple Tasks. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:supportingTask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskId" type="taskIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="task[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskId) and not(@uriRef)) or (not(@uidRef) and taskId and not(@uriRef)) or (not(@uidRef) and not(taskId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportingTaskUsageRef">
		<xsd:annotation>
			<xsd:documentation>
    SupportingTaskUsage is a TaskUsage that expands the definition of an embedded reusable Task in the context of a given support solution.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:supportingTaskUsage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
				<xsd:element name="taskRevRef" type="taskRevisionRef"/>
			</xsd:choice>
			<xsd:element name="supTaskRef" type="supportingTaskRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="taskuse[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(supTaskRef) and not(@uriRef)) or (not(@uidRef) and supTaskRef and not(@uriRef)) or (not(@uidRef) and not(supTaskRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="tachometerRef">
		<xsd:annotation>
			<xsd:documentation>
    Tachometer is a SensorType that measures revolutions of a rotating item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:tachometer</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRef">
		<xsd:annotation>
			<xsd:documentation>
    Task is a [class] that represents the specification of work to be done or undertaken.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:task</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskId" type="taskIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="task[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskId) and not(@uriRef)) or (not(@uidRef) and taskId and not(@uriRef)) or (not(@uidRef) and not(taskId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskJustificationRef">
		<xsd:annotation>
			<xsd:documentation>
    TaskJustification is a [relationship] that identifies a TaskRequirement that defines the need for the existence of a Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskJustification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskRevRef" type="taskRevisionRef"/>
			<xsd:element name="trRevRef" type="taskRequirementRevisionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="tjust[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskRevRef) and not(@uriRef)) or (not(@uidRef) and taskRevRef and not(@uriRef)) or (not(@uidRef) and not(taskRevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskPersonnelResourceCompetenceRef">
		<xsd:annotation>
			<xsd:documentation>
    TaskPersonnelResourceCompetence is a [relationship] that identifies the proficiency required for TaskPersonnelResource.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskPersonnelResourceCompetence</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="defComp" type="competencyDefinitionItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="tprc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(defComp) and not(@uriRef)) or (not(@uidRef) and defComp and not(@uriRef)) or (not(@uidRef) and not(defComp) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    TaskRequirement is a [class] that represents the need for a procedure to be developed and documented.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
			</xsd:choice>
			<xsd:element name="trId" type="taskRequirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="treq[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(trId) and not(@uriRef)) or (not(@uidRef) and trId and not(@uriRef)) or (not(@uidRef) and not(trId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementJustificationRef">
		<xsd:annotation>
			<xsd:documentation>
    TaskRequirementJustification is a [relationship] that identifies a source which defines the need for a task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementJustification</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="trRevRef" type="taskRequirementRevisionRef"/>
			<xsd:element name="justItem" type="taskRequirementJustificationItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="trjust[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(trRevRef) and not(@uriRef)) or (not(@uidRef) and trRevRef and not(@uriRef)) or (not(@uidRef) and not(trRevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    TaskRequirementRevision is a [class] representing an iteration applied to a TaskRequirement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRequirementRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
				<xsd:element name="partRef" type="partDefinitionRef"/>
			</xsd:choice>
			<xsd:element name="trId" type="taskRequirementIdentifier"/>
			<xsd:element name="revId" type="taskRequirementRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="trrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(trId) and not(@uriRef)) or (not(@uidRef) and trId and not(@uriRef)) or (not(@uidRef) and not(trId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskResourceRef">
		<xsd:annotation>
			<xsd:documentation>
    TaskResource is a [class] that identifies means that have to be available to perform a specified amount of work.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskResource</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="resId" type="taskResourceIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="taskres[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(resId) and not(@uriRef)) or (not(@uidRef) and resId and not(@uriRef)) or (not(@uidRef) and not(resId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    TaskRevision is a [class] representing an iteration applied to a Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskId" type="taskIdentifier"/>
			<xsd:element name="revId" type="taskRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="taskrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskId) and not(@uriRef)) or (not(@uidRef) and taskId and not(@uriRef)) or (not(@uidRef) and not(taskId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRevisionWarningCautionNoteRef">
		<xsd:annotation>
			<xsd:documentation>
    TaskRevisionWarningCautionNote is a [relationship] that identifies a WarningCautionNote that is associated with a given Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskRevisionWarningCautionNote</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="taskRevRef" type="taskRevisionRef"/>
			<xsd:element name="wcnRef" type="warningCautionNoteRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="tskwcn[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(taskRevRef) and not(@uriRef)) or (not(@uidRef) and taskRevRef and not(@uriRef)) or (not(@uidRef) and not(taskRevRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskUsageRef">
		<xsd:annotation>
			<xsd:documentation>
    TaskUsage is a [relationship] that identifies a Task required for the TaskAnalysisItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:taskUsage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="taskuse[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="technicalOrderRef">
		<xsd:annotation>
			<xsd:documentation>
    TechnicalOrder is a WorkItem raised by Maintenance Engineering to carry out a change or maintenance on a SerializedItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:technicalOrder</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="itemId" type="workItemIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wi[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(itemId) and not(@uriRef)) or (not(@uidRef) and itemId and not(@uriRef)) or (not(@uidRef) and not(itemId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="technicalOrderEmbodiedRef">
		<xsd:annotation>
			<xsd:documentation>
    TechnicalOrderEmbodied is a [relationship] that allows to report the WorkOrder that embodies a TechnicalOrder on the item on which it needs to be embodied.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:technicalOrderEmbodied</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="woRef" type="workOrderRef"/>
			<xsd:element name="crItem" type="changeRequestItem"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="toemb[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(woRef) and not(@uriRef)) or (not(@uidRef) and woRef and not(@uriRef)) or (not(@uidRef) and not(woRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="temperatureSensorRef">
		<xsd:annotation>
			<xsd:documentation>
    TemperatureSensor is a SensorType that measures temperature.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:temperatureSensor</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="partId" type="partIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="part[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(partId) and not(@uriRef)) or (not(@uidRef) and partId and not(@uriRef)) or (not(@uidRef) and not(partId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="thresholdDefinitionRef">
		<xsd:annotation>
			<xsd:documentation>
    ThresholdDefinition is a [class] that represents the circumstance that is used as a trigger or threshold.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:thresholdDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="thres[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="timeLimitRef">
		<xsd:annotation>
			<xsd:documentation>
    TimeLimit is a [class] that represents the specification of circumstances under which the associated item is initiated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:timeLimit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="timelim[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="tradeRef">
		<xsd:annotation>
			<xsd:documentation>
    Trade is a [class] that represents a craft or profession which requires specific skills.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:trade</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="tradeName" type="tradeName"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="trade[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(tradeName) and not(@uriRef)) or (not(@uidRef) and tradeName and not(@uriRef)) or (not(@uidRef) and not(tradeName) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportCapabilityRef">
		<xsd:annotation>
			<xsd:documentation>
    TransportCapability is a Capability associated to the capacity of transporting things.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:transportCapability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="capId" type="capabilityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="cap[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(capId) and not(@uriRef)) or (not(@uidRef) and capId and not(@uriRef)) or (not(@uidRef) and not(capId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportCapabilityUsageRef">
		<xsd:annotation>
			<xsd:documentation>
    TransportCapabilityUsage is a [relationship] that allows to associate a TransportCapability with the TransportableItems that it transports at a certain 
    moment in time.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:transportCapabilityUsage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="tracapRef" type="transportCapabilityRef"/>
			<xsd:element name="opMomItem" type="operationalMomentItem"/>
			<xsd:element name="trItem" type="transportableItem"/>
			<xsd:element name="transpPos" type="transportPosition"/>
			<xsd:element name="usgId" type="transportCapabilityUsageIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="tracapus[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(tracapRef) and not(@uriRef)) or (not(@uidRef) and tracapRef and not(@uriRef)) or (not(@uidRef) and not(tracapRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportNetworkRef">
		<xsd:annotation>
			<xsd:documentation>
    TransportNetwork is an Infrastructure used to transport items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:transportNetwork</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="infrId" type="infrastructureIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="infrstr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(infrId) and not(@uriRef)) or (not(@uidRef) and infrId and not(@uriRef)) or (not(@uidRef) and not(infrId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    TransportRequirement is a Requirement defining the condictions under which a TransportableItem can be transported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:transportRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="typeOfPersonRef">
		<xsd:annotation>
			<xsd:documentation>
    TypeOfPerson is a [class] representing a neutral non-individual person that presents a set of shared common characteristics of multiple Persons.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:typeOfPerson</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="typeId" type="typeOfPersonIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="genperson[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(typeId) and not(@uriRef)) or (not(@uidRef) and typeId and not(@uriRef)) or (not(@uidRef) and not(typeId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="unacceptableConditionRef">
		<xsd:annotation>
			<xsd:documentation>
    UnacceptableCondition is a justification for the disposal of an item in case that it is no longer fit for purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:unacceptableCondition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
			<xsd:element name="unAcceptId" type="unacceptableConditionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="unaccept[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="upgradeRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    UpgradeRequirement is a Requirement that must be applied during the embodiment of a change (upgrade).
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:upgradeRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="usableOnProductVariantRef">
		<xsd:annotation>
			<xsd:documentation>
    UsableOnProductVariant is a [relationship] that defines that a UsableOnItem, included in the Breakdown for the overall Product, is effective in the 
    associated ProductVariant. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:usableOnProductVariant</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
				<xsd:element name="beHwRealRef" type="hardwareElementPartRealizationRef"/>
				<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef"/>
				<xsd:element name="pListRevRef" type="partDefinitionPartsListRevisionRef"/>
				<xsd:element name="beSwRealRef" type="softwareElementPartRealizationRef"/>
			</xsd:choice>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="iipv[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(prodVarRef) and not(@uriRef)) or (not(@uidRef) and prodVarRef and not(@uriRef)) or (not(@uidRef) and not(prodVarRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warehouseRef">
		<xsd:annotation>
			<xsd:documentation>
    Warehouse is a Facility that is mainly established for part storage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warehouse</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="fcltyId" type="facilityIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="fclty[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(fcltyId) and not(@uriRef)) or (not(@uidRef) and fcltyId and not(@uriRef)) or (not(@uidRef) and not(fcltyId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warningCautionNoteRef">
		<xsd:annotation>
			<xsd:documentation>
    WarningCautionNote is a [class] that defines advice concerning safety, legal and health aspects.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warningCautionNote</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="wcnId" type="warningCautionNoteIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wcn[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(wcnId) and not(@uriRef)) or (not(@uidRef) and wcnId and not(@uriRef)) or (not(@uidRef) and not(wcnId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimRef">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyClaim is a class representing a customer's claim for repair or replacement of a defective item or non-performance of that item as established in a 
    warranty contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaim</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="claimId" type="warrantyClaimIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(claimId) and not(@uriRef)) or (not(@uidRef) and claimId and not(@uriRef)) or (not(@uidRef) and not(claimId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimContactRef">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyClaimContact is a [relationship] that associates a WarrantyClaim to a Party.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimContact</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="wcRef" type="warrantyClaimRef"/>
			<xsd:element name="party" type="party"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wcc[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(wcRef) and not(@uriRef)) or (not(@uidRef) and wcRef and not(@uriRef)) or (not(@uidRef) and not(wcRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimEventsRef">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyClaimEvents is a [relationship] that associates WarrantyClaims to WarrantyEvents.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimEvents</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="wcRef" type="warrantyClaimRef"/>
			<xsd:element name="wevRef" type="warrantyEventRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wcev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(wcRef) and not(@uriRef)) or (not(@uidRef) and wcRef and not(@uriRef)) or (not(@uidRef) and not(wcRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimFollowUpRef">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyClaimFollowUp is a class that represents any follow-up associated to a WarrantyClaim.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimFollowUp</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wcf[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(@uriRef)) or (not(@uidRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyClaimResolutionRef">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyClaimResolution is a class that represents the conclusion of the WarrantyClaim.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyClaimResolution</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="claimId" type="warrantyClaimIdentifier"/>
			<xsd:element name="resolId" type="warrantyClaimResolutionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wcr[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(claimId) and not(@uriRef)) or (not(@uidRef) and claimId and not(@uriRef)) or (not(@uidRef) and not(claimId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyEventRef">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyEvent is an Event that has as the consequence that a WarrantyClaim is raised.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:warrantyEvent</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="eventId" type="eventIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(eventId) and not(@uriRef)) or (not(@uidRef) and eventId and not(@uriRef)) or (not(@uidRef) and not(eventId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteContainerRef">
		<xsd:annotation>
			<xsd:documentation>
    WasteContainer is a Container containing waste or hazardous material (HAZMAT) substances that need to be recycled or be disposed of in an acceptable manner.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteContainer</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="wasteConId" type="wasteContainerIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wastecont[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(wasteConId) and not(@uriRef)) or (not(@uidRef) and wasteConId and not(@uriRef)) or (not(@uidRef) and not(wasteConId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteDisposalOperationRef">
		<xsd:annotation>
			<xsd:documentation>
    WasteDisposalOperation is a [class] representing the action that has been taken in order to dispose of a waste item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteDisposalOperation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
			<xsd:element name="wasteDispOpId" type="wasteDisposalOperationIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wasteop[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteDisposalOperationActionRef">
		<xsd:annotation>
			<xsd:documentation>
    WasteDisposalOperationAction is a [relationship] that allows to associate a DisposalOperation with additional actions taken as a result of it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteDisposalOperationAction</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="wasteDispOpRef" type="wasteDisposalOperationRef"/>
			<xsd:element name="actionRef" type="actionRef"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wasteact[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(wasteDispOpRef) and not(@uriRef)) or (not(@uidRef) and wasteDispOpRef and not(@uriRef)) or (not(@uidRef) and not(wasteDispOpRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteDisposalRequirementRef">
		<xsd:annotation>
			<xsd:documentation>
    WasteDisposalRequirement is a DisposalRequirement oriented towards the disposal of waste.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteDisposalRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="reqId" type="requirementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="req[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(reqId) and not(@uriRef)) or (not(@uidRef) and reqId and not(@uriRef)) or (not(@uidRef) and not(reqId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteRecoveredItemRef">
		<xsd:annotation>
			<xsd:documentation>
    WasteRecoveredItem is a [relationship] that allows to document the recovered material or substances from a WasteDisposalOperation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:wasteRecoveredItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="wasteDispOpRef" type="wasteDisposalOperationRef"/>
			<xsd:element name="recovMatSubs" type="recoveredMaterialOrSubstances"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wasterec[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(wasteDispOpRef) and not(@uriRef)) or (not(@uidRef) and wasteDispOpRef and not(@uriRef)) or (not(@uidRef) and not(wasteDispOpRef) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workBreakdownRef">
		<xsd:annotation>
			<xsd:documentation>
    WorkBreakdown is a class used to group all the different activities  associated to a particular purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workBreakdown</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="wbsId" type="workBreakdownIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wbs[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(wbsId) and not(@uriRef)) or (not(@uidRef) and wbsId and not(@uriRef)) or (not(@uidRef) and not(wbsId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workBreakdownRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    WorkBreakdownRevision is a class representing an iteration applied to a WorkBreakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workBreakdownRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="wbsId" type="workBreakdownIdentifier"/>
			<xsd:element name="revId" type="workBreakdownRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wbrev[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(wbsId) and not(@uriRef)) or (not(@uidRef) and wbsId and not(@uriRef)) or (not(@uidRef) and not(wbsId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workItemRef">
		<xsd:annotation>
			<xsd:documentation>
    WorkItem is a generic concept defined to group individual activities for planning, costing or program management purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="itemId" type="workItemIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wi[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(itemId) and not(@uriRef)) or (not(@uidRef) and itemId and not(@uriRef)) or (not(@uidRef) and not(itemId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workOrderRef">
		<xsd:annotation>
			<xsd:documentation>
    WorkOrder is an instruction to perform maintenance work on a SerializedItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:workOrder</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="evRef" type="eventRef"/>
				<xsd:element name="eqfltRef" type="faultRef"/>
				<xsd:element name="mprRef" type="maintenanceProgramRef"/>
				<xsd:element name="mprrRef" type="maintenanceProgramRevisionRef"/>
				<xsd:element name="reqRef" type="requirementRef"/>
				<xsd:element name="taskRevRef" type="taskRevisionRef"/>
				<xsd:element name="toRef" type="technicalOrderRef"/>
				<xsd:element name="woRef" type="workOrderRef"/>
			</xsd:choice>
			<xsd:element name="woId" type="workOrderIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="wo[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(woId) and not(@uriRef)) or (not(@uidRef) and woId and not(@uriRef)) or (not(@uidRef) and not(woId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="zoneElementRef">
		<xsd:annotation>
			<xsd:documentation>
    ZoneElement is a BreakdownElement that represents a three-dimensional space related to a Product.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:zoneElement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beId" type="breakdownElementIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="be[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beId) and not(@uriRef)) or (not(@uidRef) and beId and not(@uriRef)) or (not(@uidRef) and not(beId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="zoneElementRevisionRef">
		<xsd:annotation>
			<xsd:documentation>
    ZoneElementRevision is a BreakdownElementRevision representing an iteration applied to a ZoneElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:zoneElementRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="beId" type="breakdownElementIdentifier"/>
			<xsd:element name="revId" type="breakdownElementRevisionIdentifier"/>
		</xsd:sequence>
		<xsd:attribute name="uidRef" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="uidRef">
					<xsd:pattern value="ber[1-9][0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="uriRef" type="xsd:anyURI" use="optional"/>
		<xsd:assert test="(@uidRef and not(beId) and not(@uriRef)) or (not(@uidRef) and beId and not(@uriRef)) or (not(@uidRef) and not(beId) and @uriRef)"/>
	</xsd:complexType>
	<!-- ======================== UML <<SELECT>> INTERFACE REFERENCE UTILITY CLASSES ======================== -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="actualEnvironment">
		<xsd:annotation>
			<xsd:documentation>
    ActualEnvironment is a [select] interface that allows to select either an actual environment or one of its revisions.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ActualEnvironment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="envRef" type="environmentRef"/>
			<xsd:element name="envRevRef" type="environmentRevisionRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfigurationItem">
		<xsd:annotation>
			<xsd:documentation>
    AllowedProductConfigurationItem is a [select] interface that identifies items which can be selected as an allowed product configuration.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AllowedProductConfigurationItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="allwdPCRef" type="allowedProductConfigurationByConfigurationIdentifierRef"/>
			<xsd:element name="hwConfPartRef" type="allowedProductConfigurationHardwarePartDefinitionRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductOperationalConfigurationItem">
		<xsd:annotation>
			<xsd:documentation>
    AllowedProductOperationalConfigurationItem is an [interface] that allows to define the items that can be included in the AllowedProductConfigurationRole.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AllowedProductOperationalConfigurationItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementRevisionRelationshipItem">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementRevisionRelationshipItem is a [select] interface that provides the capability to be associated with a BreakdownElementRevision.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownElementRevisionRelationshipItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="beRef" type="breakdownElementRef"/>
			<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestEnvironmentallyImpactedItem">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestEnvironmentallyImpactedItem is a [select] interface that allows to associate materials or substances as a consequence of a ChangeRequest to 
    teh classes implementing it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestEnvironmentallyImpactedItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="beHwRef" type="hardwareElementRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="beSwRef" type="softwareElementRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestItem">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestItem is a [select] interface that allows to associate the item to be changed to a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice/>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestRationaleItem">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestRationaleItem is a [select] interface that identifies analysis items which can support a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestRationaleItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="actionRef" type="actionRef"/>
			<xsd:element name="anlysRevRef" type="analysisActivityRevisionRef"/>
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="rptdIssRef" type="reportedIssueRef"/>
			<xsd:element name="trRevRef" type="taskRequirementRevisionRef"/>
			<xsd:element name="taskRevRef" type="taskRevisionRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestReasonItem">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestReasonItem is a [select] interface that allows to associate the underlying cause for a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestReasonItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="actionRef" type="actionRef"/>
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="evRef" type="eventRef"/>
			<xsd:element name="mactRef" type="maintenanceActivityRef"/>
			<xsd:element name="oppRef" type="operationalPeriodRef"/>
			<xsd:element name="safeissRef" type="safetyIssueRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeRequestTargetItem">
		<xsd:annotation>
			<xsd:documentation>
    ChangeRequestTargetItem is a [select] interface that identifies items which can be the subject for a ChangeRequest.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeRequestTargetItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="contrClauseRef" type="contractClauseRef"/>
			<xsd:element name="docIssRef" type="documentIssueRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="beHwRef" type="hardwareElementRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="servRef" type="serviceRef"/>
			<xsd:element name="slacRef" type="serviceLevelAgreementClauseRef"/>
			<xsd:element name="beSwRef" type="softwareElementRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="circuitBreakerItem">
		<xsd:annotation>
			<xsd:documentation>
    CircuitBreakerItem is a [select] interface that identifies items which can represent the referenced circuit breaker.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CircuitBreakerItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="cbRef" type="circuitBreakerRef"/>
			<xsd:element name="beHwRef" type="hardwareElementRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="classInstanceAssertItem">
		<xsd:annotation>
			<xsd:documentation>
    ClassInstanceAssertItem is a [select] interface that identifies classes from which an instance can be used as the EvaluationByAssertionOfClassInstance 
    assert item 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ClassInstanceAssertItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="allwdPCRef" type="allowedProductConfigurationByConfigurationIdentifierRef"/>
			<xsd:element name="beRef" type="breakdownElementRef"/>
			<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
			<xsd:element name="chgAuthRef" type="changeAuthorizationRef"/>
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="envDefRef" type="environmentDefinitionRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="geoAreaRef" type="geographicalAreaRef"/>
			<xsd:element name="beHwRealRef" type="hardwareElementPartRealizationRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="mlvRef" type="maintenanceLevelRef"/>
			<xsd:element name="missnDefRef" type="missionDefinitionRef"/>
			<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef"/>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="opRoleRef" type="productOperationalRoleRef"/>
			<xsd:element name="pupRef" type="productUsagePhaseRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="projRef" type="projectRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="beSwRealRef" type="softwareElementPartRealizationRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyDefinitionItem">
		<xsd:annotation>
			<xsd:documentation>
    CompetencyDefinitionItem is a [select] interface that identifies items which define measurable or observable possession of knowledge and skills.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CompetencyDefinitionItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="compDefRef" type="competencyDefinitionRef"/>
			<xsd:element name="skillRef" type="skillRef"/>
			<xsd:element name="tradeRef" type="tradeRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="conditionDefinitionItem">
		<xsd:annotation>
			<xsd:documentation>
    ConditionDefinitionItem is a [select] interface that identifies classes from which an instance can be used as the EvaluationByAssertionOfCondition assert 
    condition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ConditionDefinitionItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="condInstRef" type="conditionInstanceRef"/>
			<xsd:element name="condTypeRef" type="conditionTypeRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractSubjectItem">
		<xsd:annotation>
			<xsd:documentation>
    ContractSubjectItem is a [select] interface that identifies items which can be selected for the Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContractSubjectItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="servRef" type="serviceRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costEntryItem">
		<xsd:annotation>
			<xsd:documentation>
    CostEntryItem is a [select] interface that associates a CostEntry to the item whose cost has to be incurred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CostEntryItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="chEmReqRef" type="changeEmbodimentRequirementRef"/>
			<xsd:element name="crRef" type="changeRequestRef"/>
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="dmgRef" type="damageRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="dispOperRef" type="itemDisposalOperationRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="matRef" type="materialRef"/>
			<xsd:element name="mvRef" type="movementRef"/>
			<xsd:element name="movlegRef" type="movementLegRef"/>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="ptyRef" type="penaltyRef"/>
			<xsd:element name="persRef" type="personRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="rptActRef" type="reportableActivityRef"/>
			<xsd:element name="resUsrRef" type="resourceUsageRequestRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="servRef" type="serviceRef"/>
			<xsd:element name="servBuRef" type="serviceBulletinRef"/>
			<xsd:element name="servReqRef" type="serviceRequestRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
			<xsd:element name="wcrRef" type="warrantyClaimResolutionRef"/>
			<xsd:element name="wasteDispOpRef" type="wasteDisposalOperationRef"/>
			<xsd:element name="woRef" type="workOrderRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="damagedItem">
		<xsd:annotation>
			<xsd:documentation>
    DamagedItem is a [select] interface that allows to associate a Damage to the item where the Damage has occurred.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DamagedItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="spvzRef" type="serializedProductVariantZoneRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detector">
		<xsd:annotation>
			<xsd:documentation>
    Detector is a [select] interface representing the elements that can detect or have detected an anomalous behaviour (fault) in a SerializedHardwarePart.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Detector</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="persRef" type="personRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="digitalFileReferencedItem">
		<xsd:annotation>
			<xsd:documentation>
    DigitalFileReferencedItem is a [select] interface that identifies an item which in some way is associated with the content of the DigitalFile.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DigitalFileReferencedItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="anlysActRef" type="analysisActivityRef"/>
			<xsd:element name="batchPartRef" type="batchHardwarePartRef"/>
			<xsd:element name="bkdnRef" type="breakdownRef"/>
			<xsd:element name="beRef" type="breakdownElementRef"/>
			<xsd:element name="budgRef" type="budgetRef"/>
			<xsd:element name="capDefRef" type="capabilityDefinitionRef"/>
			<xsd:element name="cargoRef" type="cargoItemRef"/>
			<xsd:element name="chgAuthRef" type="changeAuthorizationRef"/>
			<xsd:element name="crRef" type="changeRequestRef"/>
			<xsd:element name="cbRef" type="circuitBreakerRef"/>
			<xsd:element name="compDefRef" type="competencyDefinitionRef"/>
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="countryRef" type="countryRef"/>
			<xsd:element name="dmgDefRef" type="damageDefinitionRef"/>
			<xsd:element name="degrMechRef" type="degradationMechanismRef"/>
			<xsd:element name="docRef" type="documentRef"/>
			<xsd:element name="docIssRef" type="documentIssueRef"/>
			<xsd:element name="envRef" type="environmentRef"/>
			<xsd:element name="envDefRef" type="environmentDefinitionRef"/>
			<xsd:element name="evRef" type="eventRef"/>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="fModeRef" type="failureModeRef"/>
			<xsd:element name="fModeCauseRef" type="failureModeCauseRef"/>
			<xsd:element name="fModeEfctRef" type="failureModeEffectRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="geoAreaRef" type="geographicalAreaRef"/>
			<xsd:element name="globPosRef" type="globalPositionRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="instLocRef" type="installationLocationRef"/>
			<xsd:element name="loctrRef" type="locatorRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="mtrlDefRef" type="materialDefinitionRef"/>
			<xsd:element name="mPointRef" type="measurementPointRef"/>
			<xsd:element name="mPointDefRef" type="measuringPointDefinitionRef"/>
			<xsd:element name="missnDefRef" type="missionDefinitionRef"/>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="persRef" type="personRef"/>
			<xsd:element name="poolRef" type="poolRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="opRoleKitRef" type="productOperationalRoleKitRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="resSpecRef" type="resourceSpecificationRef"/>
			<xsd:element name="restrRef" type="restrictionRef"/>
			<xsd:element name="secRef" type="securityClassificationRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="servRef" type="serviceRef"/>
			<xsd:element name="spEvDefRef" type="specialEventDefinitionRef"/>
			<xsd:element name="strAddrRef" type="streetAddressRef"/>
			<xsd:element name="subsRef" type="substanceDefinitionRef"/>
			<xsd:element name="subtByDefRef" type="subtaskByDefinitionRef"/>
			<xsd:element name="taskRef" type="taskRef"/>
			<xsd:element name="wcRef" type="warrantyClaimRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalItem">
		<xsd:annotation>
			<xsd:documentation>
    DisposalItem is a [select] interface that allows to define items that require disposal.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DisposalItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalRequirementContext">
		<xsd:annotation>
			<xsd:documentation>
    DisposalRequirementContext is a [select] interface that defines the context in which the DisposalRequirement is established.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DisposalRequirementContext</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="contrClauseRef" type="contractClauseRef"/>
			<xsd:element name="slacRef" type="serviceLevelAgreementClauseRef"/>
			<xsd:element name="workItemRef" type="workItemRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalSite">
		<xsd:annotation>
			<xsd:documentation>
    DisposalSite is a [select] interface that defines the involved sites during a disposal.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DisposalSite</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="geoAreaRef" type="geographicalAreaRef"/>
			<xsd:element name="globPosRef" type="globalPositionRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="strAddrRef" type="streetAddressRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentItem">
		<xsd:annotation>
			<xsd:documentation>
    DocumentItem is a [select] interface that identifies items which can be selected as Document.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DocumentItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="docRef" type="documentRef"/>
			<xsd:element name="docIssRef" type="documentIssueRef"/>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentStakeholderParty">
		<xsd:annotation>
			<xsd:documentation>
    DocumentStakeholderParty is a [select] interface that identifies items which can be associated with a Document.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DocumentStakeholderParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="persRef" type="personRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
			<xsd:element name="swPartRef" type="softwarePartDefinitionRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="eventItem">
		<xsd:annotation>
			<xsd:documentation>
    EventItem is a [select] interface that allows to associate Events to items
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EventItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="exportControlledItem">
		<xsd:annotation>
			<xsd:documentation>
    ExportControlledItem is a [select] interface that identifies items that can be subject to export control.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ExportControlledItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="docRef" type="documentRef"/>
			<xsd:element name="docIssRef" type="documentIssueRef"/>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
			<xsd:element name="swPartRef" type="softwarePartDefinitionRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="facilityOperatorItem">
		<xsd:annotation>
			<xsd:documentation>
    FacilityOperatorItem is a [select] interface that identifies classes from which an instance can be selected to be the FacilityOperator. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FacilityOperatorItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="orgRef" type="organizationRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failure">
		<xsd:annotation>
			<xsd:documentation>
    Failure is a [select] interface that allows to identify the reason for an EquipmentFault.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Failure</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="fModeRef" type="failureModeRef"/>
			<xsd:element name="fModeCauseRef" type="failureModeCauseRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeCauseItem">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeCauseItem is a [select] interface that identifies items which can be selected as being associated with a FailureModeCause. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FailureModeCauseItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="beRef" type="breakdownElementRef"/>
			<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
			<xsd:element name="degrMechRef" type="degradationMechanismRef"/>
			<xsd:element name="fModeRef" type="failureModeRef"/>
			<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="failureModeEffectItem">
		<xsd:annotation>
			<xsd:documentation>
    FailureModeEffectItem is a [select] interface that identifies items which can be selected as being affected by a FailureMode. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FailureModeEffectItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="beRef" type="breakdownElementRef"/>
			<xsd:element name="beRevRef" type="breakdownElementRevisionRef"/>
			<xsd:element name="pListEntryRef" type="partDefinitionPartsListEntryRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetOperator">
		<xsd:annotation>
			<xsd:documentation>
    FleetOperator is a [select] interface that allows to identify the operator of a Fleet.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FleetOperator</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="operOrgRef" type="operatorOrganizationRef"/>
			<xsd:element name="operPersRef" type="operatorPersonRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureNodeItem">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureNodeItem is a [select] interface that identifies classes from which an instance can be selected that forms part of an Infrastructure. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfrastructureNodeItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="beHwRef" type="hardwareElementRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="infrRevRef" type="infrastructureRevisionRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="beSwRef" type="softwareElementRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureRequiringItem">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureRequiringItem is  a [select] interface that defines items that can require an Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfrastructureRequiringItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="projRef" type="projectRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="servRef" type="serviceRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="installationLocationDefinitionItem">
		<xsd:annotation>
			<xsd:documentation>
    InstallationLocationDefinitionItem is a [select] interface that identifies items which can contain the basic definition for the InstallationLocation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InstallationLocationDefinitionItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
			<xsd:element name="beHwRef" type="hardwareElementRef"/>
			<xsd:element name="beSwRef" type="softwareElementRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="laborRateItem">
		<xsd:annotation>
			<xsd:documentation>
    LaborRateItem is a [select] interface that allows to associate a LaborRate to a skilled labor.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LaborRateItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="skillRef" type="skillRef"/>
			<xsd:element name="skillLevelRef" type="skillLevelRef"/>
			<xsd:element name="tradeRef" type="tradeRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="legalParty">
		<xsd:annotation>
			<xsd:documentation>
    LegalParty is a [select] interface that identifies entities which has legal standing in the eyes of the law.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LegalParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="persRef" type="personRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="locationItem">
		<xsd:annotation>
			<xsd:documentation>
    LocationItem is a [select] interface that identifies items which can be selected to provide the definition of a geographic location.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:LocationItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="countryRef" type="countryRef"/>
			<xsd:element name="geoAreaRef" type="geographicalAreaRef"/>
			<xsd:element name="globPosRef" type="globalPositionRef"/>
			<xsd:element name="strAddrRef" type="streetAddressRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceItem">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceItem is a [select interface] that allows to select an item of a specific type that can be maintained.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messageContextItem">
		<xsd:annotation>
			<xsd:documentation>
    MessageContextItem is a [select] interface that identifies items which can be selected as the context for a Message.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MessageContextItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="projRef" type="projectRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="servRef" type="serviceRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="messagePartyItem">
		<xsd:annotation>
			<xsd:documentation>
    MessagePartyItem is a [select] interface that identifies items which can be selected as the party for a Message. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MessagePartyItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="persRef" type="personRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nonAvailabilityAttribution">
		<xsd:annotation>
			<xsd:documentation>
    NonAvailabilityAttribution is a [select] interface that allows to associate a NonAvailability to the underlying responsible for the non-availability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:NonAvailabilityAttribution</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="persRef" type="personRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="nonAvailabilityCauseItem">
		<xsd:annotation>
			<xsd:documentation>
    NonAvailabilityCauseItem is a [select] interface that allow to point out the root cause for a non-availability.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:NonAvailabilityCauseItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="evRef" type="eventRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="servBuRef" type="serviceBulletinRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="obsolescenceItem">
		<xsd:annotation>
			<xsd:documentation>
    ObsolescenceItem is a [select] interface that allows to define an item to which an ObsolescenceRequirement can apply.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ObsolescenceItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalMomentItem">
		<xsd:annotation>
			<xsd:documentation>
    OperationalMomentItem is a [select] interface that allows linking to a specific operational moment, such as an operating period, movement or travel leg.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalMomentItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="mvRef" type="movementRef"/>
			<xsd:element name="movlegRef" type="movementLegRef"/>
			<xsd:element name="oppRef" type="operationalPeriodRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operatorItem">
		<xsd:annotation>
			<xsd:documentation>
    OperatorItem is a [select] interface that represents entities that can operate one or several instances of SerializedProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperatorItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="operOrgRef" type="operatorOrganizationRef"/>
			<xsd:element name="operPersRef" type="operatorPersonRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitMemberItem">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalUnitMemberItem is a [select] interface that identifies items which can be selected to specify an OrganizationalUnitMember.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OrganizationalUnitMemberItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="compDefRef" type="competencyDefinitionRef"/>
			<xsd:element name="persRef" type="personRef"/>
			<xsd:element name="skillRef" type="skillRef"/>
			<xsd:element name="tradeRef" type="tradeRef"/>
			<xsd:element name="persTypeRef" type="typeOfPersonRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="party">
		<xsd:annotation>
			<xsd:documentation>
    Party is a [select] interface that identifies an entity that is capable of signing a contract or carrying out actions by itself without being instructed to 
    do so.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Party</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="orgUnitRef" type="organizationalUnitRef"/>
			<xsd:element name="persRef" type="personRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="plannedTaskItem">
		<xsd:annotation>
			<xsd:documentation>
    PlannedTaskItem is a [select] interface that identifies items which can be used in the context of PlannedTaskUsage.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PlannedTaskItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="opTaskRef" type="operationalTaskRef"/>
			<xsd:element name="rectTaskRef" type="rectifyingTaskRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="poolItem">
		<xsd:annotation>
			<xsd:documentation>
    PoolItem is a [select] interface that represents an item that belongs to a pool.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PoolItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="batchPartRef" type="batchHardwarePartRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="projectSpecificAttributeValue">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:ProjectSpecificAttributeValue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:group ref="areaNonAbstractClasses"/>
			<xsd:element name="opAul" type="authorizedLife"/>
			<xsd:element name="classifType" type="classificationType"/>
			<xsd:element name="code" type="codeProperty"/>
			<xsd:element name="datedClass" type="datedClassification"/>
			<xsd:element name="dateRange" type="dateRange"/>
			<xsd:element name="timeRange" type="dateTimeRange"/>
			<xsd:element name="dateTimeType" type="dateTimeType"/>
			<xsd:element name="dateType" type="dateType"/>
			<xsd:element name="descrType" type="descriptorType"/>
			<xsd:element name="idType" type="identifierType"/>
			<xsd:element name="nameType" type="nameType"/>
			<xsd:element name="numPrpType" type="numericalPropertyType"/>
			<xsd:element name="prpType" type="propertyType"/>
			<xsd:element name="serNrRange" type="serialNumberRange"/>
			<xsd:element name="valuePrpType" type="singleValuePropertyType"/>
			<xsd:element name="stateType" type="stateType"/>
			<xsd:element name="txtPrpType" type="textPropertyType"/>
			<xsd:group ref="threeDimensionalNonAbstractClasses"/>
			<xsd:element name="timeClass" type="timeStampedClassification"/>
			<xsd:element name="umlBool" type="umlBoolean"/>
			<xsd:element name="umlInt" type="umlInteger"/>
			<xsd:element name="umlReal" type="umlReal"/>
			<xsd:element name="umlStr" type="umlString"/>
			<xsd:element name="umlUnltd" type="umlUnlimitedNatural"/>
			<xsd:element name="rangePrpType" type="valueRangePropertyType"/>
			<xsd:element name="tolcePrpType" type="valueWithTolerancesPropertyType"/>
		</xsd:choice>
	</xsd:group>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="realizedPart">
		<xsd:annotation>
			<xsd:documentation>
    RealizedPart is a [select] interface that identifies which items can be used as an InstalledPart.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RealizedPart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="batchPartRef" type="batchHardwarePartRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="recoveredMaterialOrSubstances">
		<xsd:annotation>
			<xsd:documentation>
    RecoveredMaterialOrSubstances is a [select] interface that allows to identify the items, materials and substances that can be recovered from the waste.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RecoveredMaterialOrSubstances</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="batchPartRef" type="batchHardwarePartRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="matRef" type="materialRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="subsRef" type="substanceDefinitionRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="referencedPositionItem">
		<xsd:annotation>
			<xsd:documentation>
    ReferencedPositionItem is a [select] interface that represents the item where a LocalPosition is located.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReferencedPositionItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="beZoneRef" type="zoneElementRef"/>
			<xsd:element name="beZoneRevRef" type="zoneElementRevisionRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="releasedDataSetItem">
		<xsd:annotation>
			<xsd:documentation>
    ReleasedDataSetItem is a [select] interface that allows to associate items to a DataSetAsReleased.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReleasedDataSetItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="mPointRef" type="measurementPointRef"/>
			<xsd:element name="prodpoevRef" type="productParameterAtOperationalEventRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableItem">
		<xsd:annotation>
			<xsd:documentation>
    ReportableItem is a [select] interface that identifies items worth reporting.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportableItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="availRef" type="availabilityRef"/>
			<xsd:element name="costEntryRef" type="costEntryRef"/>
			<xsd:element name="opevRef" type="operationalEventRef"/>
			<xsd:element name="rptActRef" type="reportableActivityRef"/>
			<xsd:element name="rptmRef" type="reportableMetricRef"/>
			<xsd:element name="rptdMetrRef" type="reportedMetricRef"/>
			<xsd:element name="woRef" type="workOrderRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportContextItem">
		<xsd:annotation>
			<xsd:documentation>
    ReportContextItem is a [select] interface that identifies items on which a Report provides information.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportContextItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="envRef" type="environmentRef"/>
			<xsd:element name="evRef" type="eventRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="poolRef" type="poolRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="projRef" type="projectRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="servRef" type="serviceRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportingParty">
		<xsd:annotation>
			<xsd:documentation>
    ReportingParty is a [select] interface that allows to define the author of a Report.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportingParty</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="persRef" type="personRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="requiredSafetyActionImplementation">
		<xsd:annotation>
			<xsd:documentation>
    RequiredSafetyActionImplementation is a [select] interface that allows to provide traceability between taken a RequiredSafetyAction and the actions 
    effectively implementing it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RequiredSafetyActionImplementation</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="actionRef" type="actionRef"/>
			<xsd:element name="pactRef" type="partActionRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="resourceItem">
		<xsd:annotation>
			<xsd:documentation>
    ResourceItem is a [select] interface representing items whose usage can be requested for a specific period of time and during which they cannot be used by 
    somebody else.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ResourceItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="persRef" type="personRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="safetyItem">
		<xsd:annotation>
			<xsd:documentation>
    SafetyItem is a [select] interface that allows to identify an item to which as SafetyDocument applies.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SafetyItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="beUsageRef" type="breakdownElementUsageInBreakdownRef"/>
			<xsd:element name="crRef" type="changeRequestRef"/>
			<xsd:element name="cbRef" type="circuitBreakerRef"/>
			<xsd:element name="cbSettingRef" type="circuitBreakerSettingRef"/>
			<xsd:element name="cbSettingsRef" type="circuitBreakerSettingsRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="mprRef" type="maintenanceProgramRef"/>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="persRef" type="personRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="projRef" type="projectRef"/>
			<xsd:element name="reqRef" type="requirementRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="servRef" type="serviceRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedAssertItem">
		<xsd:annotation>
			<xsd:documentation>
    SerializedAssertItem is a [select] interface that identifies classes from which an instance can be used as the EvaluationByAssertionOfSerializedItems 
    assert item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedAssertItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serviceItem">
		<xsd:annotation>
			<xsd:documentation>
    ServiceItem is a [select] interface that allows to define the items for which a service can be requested.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ServiceItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="batchPartRef" type="batchHardwarePartRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subjectOfPoliciesAndRegulations">
		<xsd:annotation>
			<xsd:documentation>
    SubjectofPoliciesAndRegulations is a [select] interface that allows to associate policies and regulations to the items to which they apply.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubjectOfPoliciesAndRegulations</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="contrRef" type="contractRef"/>
			<xsd:element name="dataRelPartRef" type="dataSetAsReleasedRef"/>
			<xsd:element name="docRef" type="documentRef"/>
			<xsd:element name="exConRegRef" type="exportControlRegulationRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="orgRef" type="organizationRef"/>
			<xsd:element name="prodRef" type="productRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="projRef" type="projectRef"/>
			<xsd:element name="reqRef" type="requirementRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="servRef" type="serviceRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="subtaskTargetItem">
		<xsd:annotation>
			<xsd:documentation>
    SubtaskTargetItem is a [select] interface that identifies items on which a Subtask can be performed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubtaskTargetItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="beRef" type="breakdownElementRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="partRef" type="partDefinitionRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supplyItem">
		<xsd:annotation>
			<xsd:documentation>
    SupplyItem is a [select] interface representing an item that is used for maintenance or operation.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SupplyItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="consiRef" type="consumableItemRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="matRef" type="materialRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="supportEquipmentItem">
		<xsd:annotation>
			<xsd:documentation>
    SupportEquipmentItem is a [select] interface that allows to choose between a generic SupportEquipment or a SerializedSupportEquipment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SupportEquipmentItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="ssuppeqRef" type="serializedSupportEquipmentRef"/>
			<xsd:element name="suppeqRef" type="supportEquipmentRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskLocationItem">
		<xsd:annotation>
			<xsd:documentation>
    TaskLocationItem is a [select] interface that identifies items where Tasks can be performed.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskLocationItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="mlvRef" type="maintenanceLevelRef"/>
			<xsd:element name="opLocTypeRef" type="operatingLocationTypeRef"/>
			<xsd:element name="orgRef" type="organizationRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementJustificationItem">
		<xsd:annotation>
			<xsd:documentation>
    TaskRequirementJustificationItem is a [select] interface that identifies items which can be selected as being the source that justifies the TaskRequirement.
     
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskRequirementJustificationItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="anlysRevRef" type="analysisActivityRevisionRef"/>
			<xsd:element name="chgAuthRef" type="changeAuthorizationRef"/>
			<xsd:element name="dmgDefRef" type="damageDefinitionRef"/>
			<xsd:element name="fModeRef" type="failureModeRef"/>
			<xsd:element name="spEvDefRef" type="specialEventDefinitionRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="timeLimitEventItem">
		<xsd:annotation>
			<xsd:documentation>
    TimeLimitEventItem is a [select] interface that identifies which items can be used to define an EventThresholdDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TimeLimitEventItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="taskRef" type="taskRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportableItem">
		<xsd:annotation>
			<xsd:documentation>
    TransportableItem is a [select] interface that allows to define an item that can be transported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TransportableItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="cargoRef" type="cargoItemRef"/>
			<xsd:element name="containerRef" type="containerAsDesignedRef"/>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="fleetRef" type="fleetRef"/>
			<xsd:element name="hwPartContainerRef" type="hardwarePartContainerRef"/>
			<xsd:element name="hwPartRef" type="hardwarePartDefinitionRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="persRef" type="personRef"/>
			<xsd:element name="prodVarRef" type="productVariantRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="persTypeRef" type="typeOfPersonRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportPosition">
		<xsd:annotation>
			<xsd:documentation>
    TransportPosition is a [select] interface that allows to identify where a TransportableItem is positioned during a transport.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TransportPosition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="localPosRef" type="localPositionRef"/>
			<xsd:element name="beZoneRevRef" type="zoneElementRevisionRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="warrantyItem">
		<xsd:annotation>
			<xsd:documentation>
    WarrantyItem is a [select] interface that allows to define the items that are subject to Warranty or on which a Warranty Event occurs.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WarrantyItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="facilityRef" type="facilityRef"/>
			<xsd:element name="infrstrRef" type="infrastructureRef"/>
			<xsd:element name="maintFcltyRef" type="maintenanceFacilityRef"/>
			<xsd:element name="serialPartRef" type="serializedHardwarePartRef"/>
			<xsd:element name="serialPVRef" type="serializedProductVariantRef"/>
			<xsd:element name="servRef" type="serviceRef"/>
			<xsd:element name="servBuRef" type="serviceBulletinRef"/>
			<xsd:element name="swRelPartRef" type="softwarePartAsReleasedRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="wasteItem">
		<xsd:annotation>
			<xsd:documentation>
    WasteItem is a [select] interface that allows to define the items that are considered waste.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WasteItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="hwPartContainerRef" type="hardwarePartContainerRef"/>
			<xsd:element name="looseWasteRef" type="looseWasteRef"/>
			<xsd:element name="wasteContRef" type="wasteContainerRef"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ======================== UML <<EXTEND>> INTERFACE REFERENCE UTILITY CLASSES ======================== -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="allowedProductConfiguration">
		<xsd:annotation>
			<xsd:documentation>
    AllowedProductConfiguration is an [extend] interface that provides its associated data model to those classes that must define permitted combinations of 
    hardware and software parts which can or must be installed in specific locations (positions).
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AllowedProductConfiguration</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AttributeGroups -->
			<xsd:element name="allwdConfPhys" type="allowedProductConfigurationPhysicalData" nillable="true" minOccurs="0"/>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="authToOp" type="authorizationToOperate" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="alPrCoRo" type="allowedProductConfigurationRole" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="nestedAPC" type="nestedAllowedProductConfiguration" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="prodVarRef" type="productVariantRef" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="applicabilityStatementItem">
		<xsd:annotation>
			<xsd:documentation>
    ApplicabilityStatementItem is an [extend] interface that provides its associated data model to those classes which can have restricted validity as defined 
    by an associated ApplicabilityStatement. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ApplicabilityStatementItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="applicDefRef" type="applicabilityStatementRef" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="availabilityItem">
		<xsd:annotation>
			<xsd:documentation>
    AvailabilityItem is an [extend] interface that allows to associate an Availability to an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AvailabilityItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="avail" type="availability" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownElementInZoneItem">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementInZoneItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownElementInZoneItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="beInZone" type="breakdownElementInZone" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="breakdownItem">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="bkdn" type="breakdown" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="budgetingItem">
		<xsd:annotation>
			<xsd:documentation>
    BudgetingItem is an [extend] interface that allows to associate Budgets to specific items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BudgetingItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="budg" type="budget" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityDefinitionItem">
		<xsd:annotation>
			<xsd:documentation>
    CapabilityDefinitionItem is an [extend] interface that provides its associated data model to those classes that can have an associated CapabilityDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CapabilityDefinitionItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="capDef" type="capabilityDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="capabilityItem">
		<xsd:annotation>
			<xsd:documentation>
    CapabilityItem is an [extend] interface that allows to assign a Capabilities to an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CapabilityItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="capItemCap" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="capRef" type="capabilityRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="changeControlledItem">
		<xsd:annotation>
			<xsd:documentation>
    ChangeControlledItem is an [extend] interface that provides its associated data model to those classes that can be affected by a ChangeAuthorization.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ChangeControlledItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="plut" type="plannedUpgradeTimescales" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="chItAvRq" type="changedItemAvailabilityRequirement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="chg" type="changeNotification" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="obsReqRef" type="obsolescenceRequirementRef" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="commentItem">
		<xsd:annotation>
			<xsd:documentation>
    CommentItem is an [extend] interface allowing to establish an association between an item and the comments that are associated to it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CommentItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="itemCmt" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="cmtRef" type="commentRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="competencyFrameworkItem">
		<xsd:annotation>
			<xsd:documentation>
    CompetencyFrameworkItem is an [extend] interface that provides its associated data model to those classes that can refer to a CompetencyFramework.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CompetencyFrameworkItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="compFrwkRef" type="competencyFrameworkRef" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="consumptionPeriod">
		<xsd:annotation>
			<xsd:documentation>
    ConsumptionPeriod is an [extend] interface that allows to associate the consumption of a consumable item with the period of time during which this 
    consumption takes place..
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ConsumptionPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="consp" type="consumption" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="contractLaborItem">
		<xsd:annotation>
			<xsd:documentation>
    ContractLaborItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContractLaborItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="contrLabor" type="contractLabor" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="costBreakdownContext">
		<xsd:annotation>
			<xsd:documentation>
    CostBreakdownContext is an [extend] interface that allows to assign a CostBreakdown to an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:CostBreakdownContext</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="costBkdn" type="costBreakdown" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="detectionMean">
		<xsd:annotation>
			<xsd:documentation>
    DetectionMean is an [extend] interface that allows to associate DetectionMeanCapabilities to the elements that allowed for detection of a failure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DetectionMean</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="detMeCap" type="detectionMeanCapability" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="digitalFileReferencingItem">
		<xsd:annotation>
			<xsd:documentation>
    DigitalFileReferencingItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DigitalFileReferencingItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="refFile" type="referencedDigitalFile" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="disposalRequiringItem">
		<xsd:annotation>
			<xsd:documentation>
    DisposalRequiringItem is an [extend] interface that allows to associate disposal information and a dIsposal requirement to an item requiring disposal.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DisposalRequiringItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AttributeGroups -->
			<xsd:element name="demilData" type="itemDemilitarizationData" nillable="true" minOccurs="0"/>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="dispReq" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="iDispReqRef" type="itemDisposalRequirementRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentCharacteristicItem">
		<xsd:annotation>
			<xsd:documentation>
    DocumentCharacteristicItem is an [extend] interface that provides the capability to associate additional relationships to Documents and DocumentIssues..
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DocumentCharacteristicItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="docPty" type="documentParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="loctrRef" type="locatorRef" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentPartyItem">
		<xsd:annotation>
			<xsd:documentation>
    DocumentPartyItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DocumentPartyItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="docPty" type="documentParty" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="documentReferencingItem">
		<xsd:annotation>
			<xsd:documentation>
    DocumentReferencingItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DocumentReferencingItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="refDoc" type="referencedDocument" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="effectiveOnProductConfigurationItem">
		<xsd:annotation>
			<xsd:documentation>
    EffectiveOnProductConfigurationItem is an [extend] interface that provides its associated data model to those classes that can be included in one or many 
    instances of AllowedProductConfigurationItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EffectiveOnProductConfigurationItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="allwdPCEfy" type="effectiveOnProductConfiguration" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentDefinitionItem">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentDefinitionItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EnvironmentDefinitionItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="assEnvDef" type="associatedEnvironmentDefinition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="environmentItem">
		<xsd:annotation>
			<xsd:documentation>
    EnvironmentItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EnvironmentItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="itemEnv" type="associatedActualEnvironment" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="fleetManager">
		<xsd:annotation>
			<xsd:documentation>
    FleetManager is an [extend] interface that allows to assign capabilities to the OperatorOrganization or OperatorPerson that manages a Fleet.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FleetManager</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="flTskCN" type="fleetTaskCancellationNotice" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="operReq" type="operationalRequirement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="fleetMan" type="managedFleet" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureAvailableItem">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureAvailableItem is an [extend] interface that enables the definition of infrastructure available for infrastructure requiring items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfrastructureAvailableItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="infOp" type="infrastructureOperatingPeriod" nillable="true" minOccurs="0"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="infrAvail" type="infrastructureAvailable" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="infrastructureItem">
		<xsd:annotation>
			<xsd:documentation>
    InfrastructureItem is an [extend] interface that allows to associate additional capabilities to items that can belong to an Infrastructure.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InfrastructureItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="nodeAtLoc" type="infrastructureNodeAtLocation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="installedPartItem">
		<xsd:annotation>
			<xsd:documentation>
    InstalledPartItem is an [extend] interface that provides its associated data model to those classes that implement it. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:InstalledPartItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="instPart" type="installedPart" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemDamage">
		<xsd:annotation>
			<xsd:documentation>
    ItemDamage is an [extend] interface that allows to document the Damage that an item has suffered.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ItemDamage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="dmgRef" type="damageRef" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="itemUnderExportControl">
		<xsd:annotation>
			<xsd:documentation>
    ItemUnderExportControl is an [extend] interface that enables to define which items are subject to export control rules.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ItemUnderExportControl</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="itexcore" type="itemExportControlRegulation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="location">
		<xsd:annotation>
			<xsd:documentation>
    Location is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Location</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="loctr" type="locator" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="locRel" type="locationRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceProgramItem">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceProgramItem is an [extend] interface that allows to associate a MaintenanceProgram to an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceProgramItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="mpr" type="maintenanceProgram" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="orgRef" type="organizationRef" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="maintenanceWorkOrderSource">
		<xsd:annotation>
			<xsd:documentation>
    MaintenanceWorkOrderSource is an [extend] interface that allows to define the sources for WorkOrders.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaintenanceWorkOrderSource</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="wo" type="workOrder" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="materialContainingItem">
		<xsd:annotation>
			<xsd:documentation>
    MaterialContainingItem is an [extend] interface that allows to associate materials that they contain to the items implementing it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MaterialContainingItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="contMat" type="containedMaterial" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="measurementPointItem">
		<xsd:annotation>
			<xsd:documentation>
    MeasurementPointItem is an [extend] interface that provides its associated data model to those classes that implement it. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MeasurementPointItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:group ref="measurementPointNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalMoment">
		<xsd:annotation>
			<xsd:documentation>
    OperationalMoment is an [extend] interface that allows to associate an operational moment to other items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalMoment</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="logeRef" type="logBookEntryRef" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="operationalTimeItem">
		<xsd:annotation>
			<xsd:documentation>
    OperationalTimeItem is an [extend] interface that can have operational time information associated to it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OperationalTimeItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AttributeGroups -->
			<xsd:element name="opTime" type="operationalTime" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalBreakdownStructureItem">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalBreakdownStructureItem is an [extend] interface that enables organizational structure to be defined for to those classes that implement the 
    OrganizationalBreakdownStructureItem [extend] interface.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OrganizationalBreakdownStructureItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="orgStr" type="organizationalBreakdownStructure" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationalUnitItem">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationalUnitItem is an [extend] interface that provides its associated data model to those classes that can have an associated OrganizationalUnit.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OrganizationalUnitItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="orgUnit" type="organizationalUnit" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="organizationReferencingItem">
		<xsd:annotation>
			<xsd:documentation>
    OrganizationReferencingItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:OrganizationReferencingItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="refOrg" type="referencedOrganization" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="partyItem">
		<xsd:annotation>
			<xsd:documentation>
    PartyItem is an [extend] interface that enables the association of additional party related information to an Organization or a Person.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartyItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AttributeGroups -->
			<xsd:element name="ptyCntct" type="partyContactData" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="ptyAddr" type="partyAddress" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="ptyRel" type="partyRelationship" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="performanceParameterItem">
		<xsd:annotation>
			<xsd:documentation>
    PerformanceParameterItem is an [extend] interface that provides its associated data model to those classes that can have an associated PerformanceParameter.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PerformanceParameterItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="prfmPara" type="performanceParameter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="personCompetenceItem">
		<xsd:annotation>
			<xsd:documentation>
    PersonCompetenceItem is an [extend] interface that allows to associate a PersonCompetence to a GenericPerson. or an individual.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PersonCompetenceItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="mpc" type="personCompetence" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="policiesAndRegulationsCompliantItem">
		<xsd:annotation>
			<xsd:documentation>
    PoliciesAndRegulationsCompliantItem is an [extend] interface that allows to associate an item to the PoliciesAndRegulations with which it complies
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PoliciesAndRegulationsCompliantItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="compW" type="compliesWith" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="positionReferencingItem">
		<xsd:annotation>
			<xsd:documentation>
    PositionReferencingItem is an [extend] interface that allows to document the LocalPositions of an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PositionReferencingItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="localPosRef" type="localPositionRef" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="productUsagePhaseItem">
		<xsd:annotation>
			<xsd:documentation>
    ProductUsagePhaseItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductUsagePhaseItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="pup" type="productUsagePhase" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="projectSpecificExtensionItem">
		<xsd:annotation>
			<xsd:appinfo>
				<source>SX001G:ProjectSpecificExtensionItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="projAttr" type="projectSpecificAttribute" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:complexType name="remarkItem">
		<xsd:annotation>
			<xsd:documentation>
    RemarkItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:RemarkItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AttributeGroups -->
			<xsd:element name="rmk" type="remark" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="reportableMetricItem">
		<xsd:annotation>
			<xsd:documentation>
    ReportableMetricItem is an [extend] interface that allows to assign ReportableMetrics to different items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportableMetricItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="rptm" type="reportableMetric" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="samplingItem">
		<xsd:annotation>
			<xsd:documentation>
    SamplingItem is an [extend] interface that represents the common behavior for those classes which can have an associated SamplingDefinition.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SamplingItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AttributeGroups -->
			<xsd:element name="sampl" type="samplingDefinition" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="securityClassificationItem">
		<xsd:annotation>
			<xsd:documentation>
    SecurityClassificationItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SecurityClassificationItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="sec" type="securityClassification" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="serializedItem">
		<xsd:annotation>
			<xsd:documentation>
    SerializedItem is an [extend] interface class representing all serialized items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="eqflt" type="fault" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="log" type="logBook" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="siow" type="serializedItemOwner" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="storedPart">
		<xsd:annotation>
			<xsd:documentation>
    StoredPart is an [extend] interface that provides the capability to associate a Part the Warehouse where it is stored.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:StoredPart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="partw" type="partInWarehouse" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceContainingItem">
		<xsd:annotation>
			<xsd:documentation>
    SubstanceContainingItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubstanceContainingItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="contSubs" type="containedSubstance" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="substanceEmissionPeriod">
		<xsd:annotation>
			<xsd:documentation>
    SubstanceEmissionPeriod is an [extend] interface that allows to define the periods of time during which the associated  items generate a SubstanceEmission.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SubstanceEmissionPeriod</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="subsEm" type="substanceEmission" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskAnalysisItem">
		<xsd:annotation>
			<xsd:documentation>
    TaskAnalysisItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskAnalysisItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:group ref="taskUsageNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="taskRequirementAnalysisItem">
		<xsd:annotation>
			<xsd:documentation>
    TaskRequirementAnalysisItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskRequirementAnalysisItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="taskReq" type="taskRequirement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="timeLimitItem">
		<xsd:annotation>
			<xsd:documentation>
    TimeLimitItem is an [extend] interface that provides its associated data model to those classes that implement it.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TimeLimitItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:group ref="timeLimitNonAbstractClasses" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="trackablePart">
		<xsd:annotation>
			<xsd:documentation>
    TrackablePart is an [extend] interface for those items against which actions performed need to be recorded.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TrackablePart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="pact" type="partAction" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportFeatures">
		<xsd:annotation>
			<xsd:documentation>
    TransportFeatures is an [extend] interface that allows to associate specific transport features to transportable items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TransportFeatures</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="transReq" type="transportRequirement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="transportingAsset">
		<xsd:annotation>
			<xsd:documentation>
    TransportingAsset is an [extend] interfaces that allows to associate a TransportCapability to an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TransportingAsset</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-AggregateRelationships -->
			<xsd:element name="traAssCap" nillable="true" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="tracapRef" type="transportCapabilityRef"/>
					</xsd:sequence>
					<xsd:attribute name="crud" type="crudCode" default="I"/>
				</xsd:complexType>
			</xsd:element>
			<!-- UML-CompositionRelationships -->
			<xsd:element name="anchorPt" type="anchoringPoint" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="usableOnItem">
		<xsd:annotation>
			<xsd:documentation>
    UsableOnItem is an [extend] interface that provides its associated data model to those classes that can have a limited effectivity with respect to its 
    usage in one or many instances of ProductVariant.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:UsableOnItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence>
			<!-- UML-EmbeddedAssociations -->
			<xsd:element name="usableOn" type="usableOnProductVariant" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="workBreakdownContext">
		<xsd:annotation>
			<xsd:documentation>
    WorkBreakDownContext is an [extend] interface that allows to associated workBreakDowns to individual items.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WorkBreakdownContext</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:sequence/>
	</xsd:complexType>
	<!-- ============================== UML SPECIALIZATION UTILITY CLASSES ================================== -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="actionNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    Action is a [class] that specifies measures to be taken.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Action</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="action" type="action"/>
			<xsd:element name="reqsa" type="requiredSafetyAction"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="analysisActivityNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    AnalysisActivity is a [class] that represents the objective for, and outcome of, an analysis carried out for the AnalysisCandidateItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AnalysisActivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="anlysAct" type="analysisActivity"/>
			<xsd:element name="dmgAnlys" type="damageAnalysis"/>
			<xsd:element name="fmea" type="failureModeAnalysis"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="analysisActivityRevisionNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    AnalysisActivityRevision is a [class] representing an iteration applied to an AnalysisActivity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:AnalysisActivityRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="anlysRev" type="analysisActivityRevision"/>
			<xsd:element name="dmgAnlysRev" type="damageAnalysisRevision"/>
			<xsd:element name="fmeaRev" type="failureModeAnalysisRevision"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="areaNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    Area is a specialization of Dimensions that represents the extent or measurement of a two-dimensional surface.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Area</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="circle" type="circle"/>
			<xsd:element name="rect" type="rectangle"/>
			<xsd:element name="triangle" type="triangle"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="breakdownElementNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElement is a [class] defining a partition of a Product that is used in one or many instances of Breakdown.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownElement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="beAggr" type="aggregatedElement"/>
			<xsd:element name="beHw" type="hardwareElement"/>
			<xsd:element name="beSw" type="softwareElement"/>
			<xsd:element name="beSw" type="softwareElement"/>
			<xsd:element name="beZone" type="zoneElement"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="breakdownElementRevisionNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementRevision is a [class] representing an iteration applied to a BreakdownElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownElementRevision</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="beHwRev" type="hardwareElementRevision"/>
			<xsd:element name="beSwRev" type="softwareElementRevision"/>
			<xsd:element name="beZoneRev" type="zoneElementRevision"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="breakdownElementUsageRelationshipNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    BreakdownElementUsageRelationship is a [relationship] where one usage of a BreakdownElement relates to the usage of another BreakdownElement.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:BreakdownElementUsageRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="relBe" type="breakdownElementUsageRelationship"/>
			<xsd:element name="attachBe" type="breakdownElementUsageAttachmentRelationship"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="capabilityNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    Capability is a class that defines an actual ability or potential for an indicated use or deployment.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Capability</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="cap" type="capability"/>
			<xsd:element name="tracap" type="transportCapability"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="contractClauseNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    ContractClause is a class that represents specific provision included in a Contract.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ContractClause</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="contrClause" type="contractClause"/>
			<xsd:element name="slac" type="serviceLevelAgreementClause"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="dataRequestNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    DataRequest is a [class] that allows an exchange party to request a specific data set.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DataRequest</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="datarequestCName" type="dataRequestByClassName"/>
			<xsd:element name="datarequestId" type="dataRequestByIdentifier"/>
			<xsd:element name="dataRequestUC" type="dataRequestByUseCaseName"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="disposalRequirementNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    DisposalRequirement is a Requirement to proceed with the disposal of an item, waste or hazardous material.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DisposalRequirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="dispReq" type="disposalRequirement"/>
			<xsd:element name="iDispReq" type="itemDisposalRequirement"/>
			<xsd:element name="wDispReq" type="wasteDisposalRequirement"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="documentNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    Document is a [class] that represents a compiled set of information that serves a purpose. 
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Document</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="doc" type="document"/>
			<xsd:element name="exConReg" type="exportControlRegulation"/>
			<xsd:element name="exdoc" type="externalDocument"/>
			<xsd:element name="mpr" type="maintenanceProgram"/>
			<xsd:element name="polReg" type="policiesAndRegulations"/>
			<xsd:element name="rpt" type="report"/>
			<xsd:element name="s1000dDM" type="s1000DDataModule"/>
			<xsd:element name="s1000dPM" type="s1000DPublicationModule"/>
			<xsd:element name="safedoc" type="safetyDocument"/>
			<xsd:element name="safeiss" type="safetyIssue"/>
			<xsd:element name="safeReqDoc" type="safetyRequirementsDocument"/>
			<xsd:element name="safew" type="safetyWarning"/>
			<xsd:element name="scorm" type="sCORMContentPackage"/>
			<xsd:element name="servBu" type="serviceBulletin"/>
			<xsd:element name="ssafeins" type="specialSafetyInstruction"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="documentIssueNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    DocumentIssue is a [class] that represents a specific release of a Document
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:DocumentIssue</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="docIss" type="documentIssue"/>
			<xsd:element name="mprr" type="maintenanceProgramRevision"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="evaluationCriteriaNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    EvaluationCriteria is a [class] that defines conditions that can be mapped to a Boolean expression which can be evaluated to be either TRUE or FALSE.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:EvaluationCriteria</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="assrtInst" type="evaluationByAssertionOfClassInstance"/>
			<xsd:element name="assrtCond" type="evaluationByAssertionOfCondition"/>
			<xsd:element name="assrtPeriod" type="evaluationByAssertionOfDateRange"/>
			<xsd:element name="assrtSi" type="evaluationByAssertionOfSerializedItems"/>
			<xsd:element name="nestedApplic" type="evaluationByNestedApplicabilityStatement"/>
			<xsd:element name="evNested" type="evaluationByNestedExpression"/>
			<xsd:element name="evalAnd" type="logicalAnd"/>
			<xsd:element name="evalNot" type="logicalNot"/>
			<xsd:element name="evalOr" type="logicalOr"/>
			<xsd:element name="evalXor" type="logicalXor"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="eventNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    Event is an important happening or occurrence at a specific point in time that requires to be documented or recorded.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Event</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="ev" type="event"/>
			<xsd:element name="mev" type="maintenanceEvent"/>
			<xsd:element name="opev" type="operationalEvent"/>
			<xsd:element name="wev" type="warrantyEvent"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="facilityNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    Facility is a [class]that represents a physically limited infrastructure which exists, or is intended to be built or installed, and is established to serve 
    a particular purpose.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Facility</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="facility" type="facility"/>
			<xsd:element name="maintFclty" type="maintenanceFacility"/>
			<xsd:element name="opBase" type="operatingBase"/>
			<xsd:element name="oFac" type="otherFacility"/>
			<xsd:element name="parkFac" type="parkingFacility"/>
			<xsd:element name="wh" type="warehouse"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="faultSymptomNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    FaultSymptom is a [class] that represents an indication of the existence of a Fault.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:FaultSymptom</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="fltsym" type="faultSymptom"/>
			<xsd:element name="infltsym" type="indicatedFaultSymptom"/>
			<xsd:element name="obfltsym" type="observedFaultSymptom"/>
			<xsd:element name="refltsym" type="recordedFaultSymptom"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="hardwarePartDefinitionNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    HardwarePartDefinition is a PartDefinition that is to be realized as physical items, including non-countable material
    

   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:HardwarePartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="hwPart" type="hardwarePartDefinition"/>
			<xsd:element name="acc" type="accelerometer"/>
			<xsd:element name="container" type="containerAsDesigned"/>
			<xsd:element name="psensor" type="pressureSensor"/>
			<xsd:element name="snsrt" type="sensorType"/>
			<xsd:element name="straing" type="strainGauge"/>
			<xsd:element name="suppeq" type="supportEquipment"/>
			<xsd:element name="tacho" type="tachometer"/>
			<xsd:element name="tmpsnsr" type="temperatureSensor"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="infrastructureNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    Infrastructure is a [class] that represents the basic physical and organizational structures and facilities needed for the operation of an organization or 
    Product or required for the provision of a service.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Infrastructure</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="infrstr" type="infrastructure"/>
			<xsd:element name="cloud" type="cloudInfrastructure"/>
			<xsd:element name="commNet" type="communicationsNetwork"/>
			<xsd:element name="compNet" type="computerNetwork"/>
			<xsd:element name="mroNet" type="mRONetwork"/>
			<xsd:element name="port" type="port"/>
			<xsd:element name="pwrgrid" type="powerGrid"/>
			<xsd:element name="transpNet" type="transportNetwork"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="measurementPointNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    MeasurementPoint is a [class] that represents a measured value recorded for the associated item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:MeasurementPoint</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="mPoint" type="measurementPoint"/>
			<xsd:element name="snsrsmp" type="sensorSample"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="numericalPropertyType">
		<xsd:choice>
			<xsd:element name="valuePrpType" type="singleValuePropertyType"/>
			<xsd:element name="rangePrpType" type="valueRangePropertyType"/>
			<xsd:element name="tolcePrpType" type="valueWithTolerancesPropertyType"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:group name="organizationNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    Organization is a [class] that represents an administrative structure with a particular purpose belonging to a legal entity.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Organization</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="org" type="organization"/>
			<xsd:element name="morg" type="maintenanceOrganization"/>
			<xsd:element name="operOrg" type="operatorOrganization"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="partDefinitionNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    PartDefinition is a [class] that represents the definitional information for an artifact fulfilling a set of requirements, which can be produced or 
    realized.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="acc" type="accelerometer"/>
			<xsd:element name="hwConfPart" type="allowedProductConfigurationHardwarePartDefinition"/>
			<xsd:element name="container" type="containerAsDesigned"/>
			<xsd:element name="dataPart" type="dataSetAsDesigned"/>
			<xsd:element name="hwPart" type="hardwarePartDefinition"/>
			<xsd:element name="psensor" type="pressureSensor"/>
			<xsd:element name="snsrt" type="sensorType"/>
			<xsd:element name="swPart" type="softwarePartDefinition"/>
			<xsd:element name="straing" type="strainGauge"/>
			<xsd:element name="suppeq" type="supportEquipment"/>
			<xsd:element name="tacho" type="tachometer"/>
			<xsd:element name="tmpsnsr" type="temperatureSensor"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="personNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    Person is a class that represents a human being.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Person</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="pers" type="person"/>
			<xsd:element name="mp" type="maintenancePerson"/>
			<xsd:element name="operPers" type="operatorPerson"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="policiesAndRegulationsNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    PoliciesAndRegulations is a Document that defines mandatory practices for a Project, Product, Contract, Service or major item requiring specific guidelines.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:PoliciesAndRegulations</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="polReg" type="policiesAndRegulations"/>
			<xsd:element name="exConReg" type="exportControlRegulation"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="productUsagePhaseRelationshipNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    ProductUsagePhaseRelationship is a [relationship] where one ProductUsagePhase relates to another ProductUsagePhase.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ProductUsagePhaseRelationship</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="phseRel" type="productUsagePhaseRelationship"/>
			<xsd:element name="puphr" type="productUsagePhaseHierarchicalRelationship"/>
			<xsd:element name="pupsr" type="productUsagePhaseSequentialRelationship"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:complexType name="propertyType">
		<xsd:choice>
			<xsd:element name="valuePrpType" type="singleValuePropertyType"/>
			<xsd:element name="txtPrpType" type="textPropertyType"/>
			<xsd:element name="rangePrpType" type="valueRangePropertyType"/>
			<xsd:element name="tolcePrpType" type="valueWithTolerancesPropertyType"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:group name="reportableActivityNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    ReportableActivity is a class that represents an activity which is part of a work item that is deemed to be of sufficient importance as to be reported.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ReportableActivity</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="rptAct" type="reportableActivity"/>
			<xsd:element name="invact" type="inventoryActivity"/>
			<xsd:element name="mact" type="maintenanceActivity"/>
			<xsd:element name="opac" type="operationalActivity"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="requirementNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    Requirement is a documented need that has to be implemented.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Requirement</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="req" type="requirement"/>
			<xsd:element name="authReq" type="authorityRequirement"/>
			<xsd:element name="chEmReq" type="changeEmbodimentRequirement"/>
			<xsd:element name="dispReq" type="disposalRequirement"/>
			<xsd:element name="fleetReq" type="fleetRequirement"/>
			<xsd:element name="iDispReq" type="itemDisposalRequirement"/>
			<xsd:element name="maintReq" type="maintenanceRequirement"/>
			<xsd:element name="obsReq" type="obsolescenceRequirement"/>
			<xsd:element name="operReq" type="operationalRequirement"/>
			<xsd:element name="safeReq" type="safetyRequirement"/>
			<xsd:element name="transReq" type="transportRequirement"/>
			<xsd:element name="upReq" type="upgradeRequirement"/>
			<xsd:element name="wDispReq" type="wasteDisposalRequirement"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="safetyDocumentNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    SafetyDocument is a Document associated to the safety of an item.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SafetyDocument</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="safedoc" type="safetyDocument"/>
			<xsd:element name="safeiss" type="safetyIssue"/>
			<xsd:element name="safeReqDoc" type="safetyRequirementsDocument"/>
			<xsd:element name="safew" type="safetyWarning"/>
			<xsd:element name="ssafeins" type="specialSafetyInstruction"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="sensorTypeNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    SensorType is HardwarePartAsDesigned that measures physical events and provides the information to external devices.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SensorType</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="snsrt" type="sensorType"/>
			<xsd:element name="acc" type="accelerometer"/>
			<xsd:element name="psensor" type="pressureSensor"/>
			<xsd:element name="straing" type="strainGauge"/>
			<xsd:element name="tacho" type="tachometer"/>
			<xsd:element name="tmpsnsr" type="temperatureSensor"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="serializedHardwarePartNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    SerializedHardwarePart is [class] that represent an actual physical part which can be identified as an individual.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SerializedHardwarePart</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="serialPart" type="serializedHardwarePart"/>
			<xsd:element name="ssuppeq" type="serializedSupportEquipment"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="softwarePartAsReleasedNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    SoftwarePartAsReleased is [class] that represents actual build of a software which is delivered.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SoftwarePartAsReleased</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="swRelPart" type="softwarePartAsReleased"/>
			<xsd:element name="dataRelPart" type="dataSetAsReleased"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="softwarePartDefinitionNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    SoftwarePartDefinition is a PartDefinition that is produced as an executable software or as a data file.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:SoftwarePartDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="swPart" type="softwarePartDefinition"/>
			<xsd:element name="dataPart" type="dataSetAsDesigned"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="subtaskNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    Subtask is a [class] that represents the specification of a work step that is to be performed as part of a Task.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Subtask</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="subtByDef" type="subtaskByDefinition"/>
			<xsd:element name="subtByRef" type="subtaskByTaskReference"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="taskNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    Task is a [class] that represents the specification of work to be done or undertaken.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:Task</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="opTask" type="operationalTask"/>
			<xsd:element name="rectTask" type="rectifyingTask"/>
			<xsd:element name="supTask" type="supportingTask"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="threeDimensionalNonAbstractClasses">
		<xsd:choice>
			<xsd:element name="cuboid" type="cuboid"/>
			<xsd:element name="cylinder" type="cylinder"/>
			<xsd:element name="sphere" type="sphere"/>
		</xsd:choice>
	</xsd:group>
	<!-- ___________________________________________________________________________________________________ -->
	<xsd:group name="taskUsageNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    TaskUsage is a [relationship] that identifies a Task required for the TaskAnalysisItem.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TaskUsage</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="plndTaskUse" type="plannedTaskUsage"/>
			<xsd:element name="supTaskUse" type="supportingTaskUsage"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="thresholdDefinitionNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    ThresholdDefinition is a [class] that represents the circumstance that is used as a trigger or threshold.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:ThresholdDefinition</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="evntThld" type="eventThresholdDefinition"/>
			<xsd:element name="paraThld" type="parameterThresholdDefinition"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="timeLimitNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    TimeLimit is a [class] that represents the specification of circumstances under which the associated item is initiated.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:TimeLimit</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="discrTimeLim" type="discreteTimeLimit"/>
			<xsd:element name="perTimeLim" type="periodicTimeLimit"/>
		</xsd:choice>
	</xsd:group>
	<!-- ________________________________________________________________________________________________________________ -->
	<xsd:group name="workItemNonAbstractClasses">
		<xsd:annotation>
			<xsd:documentation>
    WorkItem is a generic concept defined to group individual activities for planning, costing or program management purposes.
   </xsd:documentation>
			<xsd:appinfo>
				<source>SX001G:WorkItem</source>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="workItem" type="workItem"/>
			<xsd:element name="to" type="technicalOrder"/>
		</xsd:choice>
	</xsd:group>
	<!-- ===================================== BASE SCHEMA DEFINITIONS ====================================== -->
	<xsd:simpleType name="uidRef">
		<xsd:restriction base="xsd:IDREF"/>
	</xsd:simpleType>
	<xsd:simpleType name="nonEmptyString">
		<xsd:restriction base="xsd:token">
			<xsd:minLength value="1"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="crudCode">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="I">
				<xsd:annotation>
					<xsd:appinfo>
						<source>SX001G:insertedElement</source>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="D">
				<xsd:annotation>
					<xsd:appinfo>
						<source>SX001G:deletedElement</source>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="U">
				<xsd:annotation>
					<xsd:appinfo>
						<source>SX001G:updatedElement</source>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="R">
				<xsd:annotation>
					<xsd:appinfo>
						<source>SX001G:replacedElement</source>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="N">
				<xsd:annotation>
					<xsd:appinfo>
						<source>SX001G:nonChangedElement</source>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>
